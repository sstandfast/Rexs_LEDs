

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Fri Jan 12 21:43:58 2018

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46  0000                     
    47                           ; Version 1.43
    48                           ; Generated 25/07/2017 GMT
    49                           ; 
    50                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F46K42 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	smallconst
    83  001000                     __psmallconst:
    84                           	opt stack 0
    85  001000  00                 	db	0
    86  001001                     _RABBIT_OFF_TIME_MS:
    87                           	opt stack 0
    88  001001  0028               	dw	40
    89  001003  0000               	dw	0
    90  001005                     __end_of_RABBIT_OFF_TIME_MS:
    91                           	opt stack 0
    92  001005                     _RABBIT_ON_TIME_MS:
    93                           	opt stack 0
    94  001005  000A               	dw	10
    95  001007  0000               	dw	0
    96  001009                     __end_of_RABBIT_ON_TIME_MS:
    97                           	opt stack 0
    98  001009                     _AC_STROBE_DELAY_MS:
    99                           	opt stack 0
   100  001009  01F4               	dw	500
   101  00100B  0000               	dw	0
   102  00100D                     __end_of_AC_STROBE_DELAY_MS:
   103                           	opt stack 0
   104  00100D                     _GEN_STROBE_OFF_TIME_MS:
   105                           	opt stack 0
   106  00100D  076C               	dw	1900
   107  00100F  0000               	dw	0
   108  001011                     __end_of_GEN_STROBE_OFF_TIME_MS:
   109                           	opt stack 0
   110  001011                     _GEN_STROBE_ON_TIME_MS:
   111                           	opt stack 0
   112  001011  0064               	dw	100
   113  001013  0000               	dw	0
   114  001015                     __end_of_GEN_STROBE_ON_TIME_MS:
   115                           	opt stack 0
   116  001015                     _STROBE_OFF_TIME_MS:
   117                           	opt stack 0
   118  001015  0384               	dw	900
   119  001017  0000               	dw	0
   120  001019                     __end_of_STROBE_OFF_TIME_MS:
   121                           	opt stack 0
   122  001019                     _STROBE_ON_TIME_MS:
   123                           	opt stack 0
   124  001019  0064               	dw	100
   125  00101B  0000               	dw	0
   126  00101D                     __end_of_STROBE_ON_TIME_MS:
   127                           	opt stack 0
   128  00101D                     _GUN_SPACE_TIME_MS:
   129                           	opt stack 0
   130  00101D  0032               	dw	50
   131  00101F  0000               	dw	0
   132  001021                     __end_of_GUN_SPACE_TIME_MS:
   133                           	opt stack 0
   134  001021                     _GUN_OFF_TIME_MS:
   135                           	opt stack 0
   136  001021  0028               	dw	40
   137  001023  0000               	dw	0
   138  001025                     __end_of_GUN_OFF_TIME_MS:
   139                           	opt stack 0
   140  001025                     _GUN_ON_TIME_MS:
   141                           	opt stack 0
   142  001025  000A               	dw	10
   143  001027  0000               	dw	0
   144  001029                     __end_of_GUN_ON_TIME_MS:
   145                           	opt stack 0
   146  001029                     _STROBE2_PIN:
   147                           	opt stack 0
   148  001029  03                 	db	3
   149  00102A                     __end_of_STROBE2_PIN:
   150                           	opt stack 0
   151  00102A                     _STROBE1_PIN:
   152                           	opt stack 0
   153  00102A  02                 	db	2
   154  00102B                     __end_of_STROBE1_PIN:
   155                           	opt stack 0
   156  00102B                     _TRIGGER2_PIN:
   157                           	opt stack 0
   158  00102B  01                 	db	1
   159  00102C                     __end_of_TRIGGER2_PIN:
   160                           	opt stack 0
   161  00102C                     _TRIGGER1_PIN:
   162                           	opt stack 0
   163  00102C  00                 	db	0
   164  00102D                     __end_of_TRIGGER1_PIN:
   165                           	opt stack 0
   166  00102D  00                 	db	0	; dummy byte at the end
   167  0000                     
   168                           	psect	nvCOMRAM
   169  00002E                     __pnvCOMRAM:
   170                           	opt stack 0
   171  00002E                     _TMR0_InterruptHandler:
   172                           	opt stack 0
   173  00002E                     	ds	2
   174  0000                     _OSCTUNE	set	14814
   175  0000                     _OSCFRQ	set	14815
   176  0000                     _OSCEN	set	14813
   177  0000                     _OSCCON3	set	14811
   178  0000                     _OSCCON1	set	14809
   179  0000                     _PIE3bits	set	14739
   180  0000                     _PIR3bits	set	14755
   181  0000                     _ODCOND	set	14962
   182  0000                     _ODCONC	set	14946
   183  0000                     _ODCONB	set	14930
   184  0000                     _ODCONA	set	14914
   185  0000                     _ODCONE	set	14978
   186  0000                     _WPUC	set	14945
   187  0000                     _WPUA	set	14913
   188  0000                     _WPUB	set	14929
   189  0000                     _WPUE	set	14977
   190  0000                     _WPUD	set	14961
   191  0000                     _ANSELA	set	14912
   192  0000                     _ANSELE	set	14976
   193  0000                     _ANSELD	set	14960
   194  0000                     _ANSELB	set	14928
   195  0000                     _ANSELC	set	14944
   196  0000                     _PORTA	set	16330
   197  0000                     _INTCON0bits	set	16338
   198  0000                     _T0CON0bits	set	16312
   199  0000                     _T0CON0	set	16312
   200  0000                     _TMR0L	set	16310
   201  0000                     _TMR0H	set	16311
   202  0000                     _T0CON1	set	16313
   203  0000                     _TRISD	set	16325
   204  0000                     _TRISC	set	16324
   205  0000                     _TRISB	set	16323
   206  0000                     _TRISA	set	16322
   207  0000                     _TRISE	set	16326
   208  0000                     _LATA	set	16314
   209  0000                     _LATE	set	16318
   210  0000                     _PORTB	set	16331
   211  0000                     _PORTD	set	16333
   212  0000                     _PORTC	set	16332
   213  0000                     _LATC	set	16316
   214  0000                     _LATB	set	16315
   215  0000                     _LATD	set	16317
   216                           
   217                           ; #config settings
   218  0000                     
   219                           	psect	cinit
   220  00295A                     __pcinit:
   221                           	opt stack 0
   222  00295A                     start_initialization:
   223                           	opt stack 0
   224  00295A                     __initialization:
   225                           	opt stack 0
   226                           
   227                           ; Clear objects allocated to COMRAM (4 bytes)
   228  00295A  6A2D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   229  00295C  6A2C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   230  00295E  6A2B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   231  002960  6A2A               	clrf	__pbssCOMRAM& (0+255),c
   232                           
   233                           ;
   234                           ; Setup IVTBASE
   235                           ;
   236  002962  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   237  002964  6ED5               	movwf	213,c
   238  002966  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   239  002968  6ED6               	movwf	214,c
   240  00296A  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   241  00296C  6ED7               	movwf	215,c
   242  00296E                     end_of_initialization:
   243                           	opt stack 0
   244  00296E                     __end_of__initialization:
   245                           	opt stack 0
   246  00296E  0100               	movlb	0
   247  002970  EF0A  F00B         	goto	_main	;jump to C main() function
   248                           
   249                           	psect	bssCOMRAM
   250  00002A                     __pbssCOMRAM:
   251                           	opt stack 0
   252  00002A                     _globalTime:
   253                           	opt stack 0
   254  00002A                     	ds	4
   255                           
   256                           	psect	cstackBANK0
   257  000060                     __pcstackBANK0:
   258                           	opt stack 0
   259  000060                     main@Rabbit:
   260                           	opt stack 0
   261                           
   262                           ; 13 bytes @ 0x0
   263  000060                     	ds	13
   264  00006D                     main@Gun1:
   265                           	opt stack 0
   266                           
   267                           ; 17 bytes @ 0xD
   268  00006D                     	ds	17
   269  00007E                     main@Gun2:
   270                           	opt stack 0
   271                           
   272                           ; 17 bytes @ 0x1E
   273  00007E                     	ds	17
   274  00008F                     main@Gun3:
   275                           	opt stack 0
   276                           
   277                           ; 17 bytes @ 0x2F
   278  00008F                     	ds	17
   279  0000A0                     main@GStrobe:
   280                           	opt stack 0
   281                           
   282                           ; 13 bytes @ 0x40
   283  0000A0                     	ds	13
   284  0000AD                     main@ACStrobe:
   285                           	opt stack 0
   286                           
   287                           ; 13 bytes @ 0x4D
   288  0000AD                     	ds	13
   289  0000BA                     main@GenStrobe:
   290                           	opt stack 0
   291                           
   292                           ; 13 bytes @ 0x5A
   293  0000BA                     	ds	13
   294  0000C7                     main@EFStrobe:
   295                           	opt stack 0
   296                           
   297                           ; 13 bytes @ 0x67
   298  0000C7                     	ds	13
   299                           
   300                           	psect	cstackCOMRAM
   301  000001                     __pcstackCOMRAM:
   302                           	opt stack 0
   303  000001                     ?_GetCurrentTime:
   304                           	opt stack 0
   305  000001                     ?_newStrobe:
   306                           	opt stack 0
   307  000001                     ?_RabbitLightsInit:
   308                           	opt stack 0
   309  000001                     ?_GunPortInit:
   310                           	opt stack 0
   311  000001                     ?_GunPortInit_:
   312                           	opt stack 0
   313  000001                     TMR0_SetInterruptHandler@InterruptHandler:
   314                           	opt stack 0
   315  000001                     GunPortInit_@OP:
   316                           	opt stack 0
   317  000001                     GunPortInit@OP:
   318                           	opt stack 0
   319  000001                     StopGunFirePattern@gp:
   320                           	opt stack 0
   321  000001                     StopStrobe@SLED:
   322                           	opt stack 0
   323  000001                     newStrobe@OP:
   324                           	opt stack 0
   325  000001                     RabbitLightsInit@OP:
   326                           	opt stack 0
   327  000001                     StopRabbitLights@rp:
   328                           	opt stack 0
   329                           
   330                           ; 2 bytes @ 0x0
   331  000001                     	ds	2
   332  000003                     ??_StopGunFirePattern:
   333  000003                     ??_StopStrobe:
   334  000003                     ??_StopRabbitLights:
   335  000003                     GunPortInit_@IP:
   336                           	opt stack 0
   337  000003                     GunPortInit@IP:
   338                           	opt stack 0
   339  000003                     newStrobe@IP:
   340                           	opt stack 0
   341  000003                     RabbitLightsInit@IP:
   342                           	opt stack 0
   343                           
   344                           ; 2 bytes @ 0x2
   345  000003                     	ds	2
   346  000005                     GunPortInit_@GLED:
   347                           	opt stack 0
   348  000005                     newStrobe@sLED:
   349                           	opt stack 0
   350  000005                     RabbitLightsInit@SLED:
   351                           	opt stack 0
   352  000005                     GunPortInit@TP:
   353                           	opt stack 0
   354  000005                     UpdateGunLED@gp:
   355                           	opt stack 0
   356  000005                     UpdateStrobeLED@SLED:
   357                           	opt stack 0
   358  000005                     StartRabbitLights@rp:
   359                           	opt stack 0
   360  000005                     UpdateRabbitLEDs@rp:
   361                           	opt stack 0
   362                           
   363                           ; 2 bytes @ 0x4
   364  000005                     	ds	1
   365  000006                     GunPortInit_@TLED:
   366                           	opt stack 0
   367  000006                     newStrobe@t:
   368                           	opt stack 0
   369  000006                     RabbitLightsInit@num:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0x5
   373  000006                     	ds	1
   374  000007                     ??_StartRabbitLights:
   375  000007                     ??_UpdateGunLED:
   376  000007                     ??_UpdateStrobeLED:
   377  000007                     ??_UpdateRabbitLEDs:
   378  000007                     GunPortInit@TIP:
   379                           	opt stack 0
   380  000007                     StartGunFirePattern@gp:
   381                           	opt stack 0
   382  000007                     StartStrobe@SLED:
   383                           	opt stack 0
   384  000007                     StopSyncStrobes@SLED_A:
   385                           	opt stack 0
   386                           
   387                           ; 2 bytes @ 0x6
   388  000007                     	ds	2
   389  000009                     ??_StartGunFirePattern:
   390  000009                     ??_StartStrobe:
   391  000009                     GunPortInit@GLED:
   392                           	opt stack 0
   393  000009                     StopSyncStrobes@SLED_B:
   394                           	opt stack 0
   395                           
   396                           ; 2 bytes @ 0x8
   397  000009                     	ds	1
   398  00000A                     GunPortInit@TLED:
   399                           	opt stack 0
   400                           
   401                           ; 1 bytes @ 0x9
   402  00000A                     	ds	1
   403  00000B                     UpdateRabbitLEDs@buffer:
   404                           	opt stack 0
   405                           
   406                           ; 1 bytes @ 0xA
   407  00000B                     	ds	1
   408  00000C                     UpdateRabbitLEDs@i:
   409                           	opt stack 0
   410                           
   411                           ; 1 bytes @ 0xB
   412  00000C                     	ds	1
   413  00000D                     UpdateRabbitLEDs@Mask:
   414                           	opt stack 0
   415                           
   416                           ; 1 bytes @ 0xC
   417  00000D                     	ds	1
   418  00000E                     ??_newStrobe:
   419  00000E                     RabbitLightsInit@rp:
   420                           	opt stack 0
   421                           
   422                           ; 13 bytes @ 0xD
   423  00000E                     	ds	1
   424  00000F                     StartRabbitLights@i:
   425                           	opt stack 0
   426                           
   427                           ; 1 bytes @ 0xE
   428  00000F                     	ds	1
   429  000010                     StartRabbitLights@Mask:
   430                           	opt stack 0
   431  000010                     newStrobe@Strobe:
   432                           	opt stack 0
   433                           
   434                           ; 13 bytes @ 0xF
   435  000010                     	ds	1
   436  000011                     StartSyncStrobes@SLED_A:
   437                           	opt stack 0
   438                           
   439                           ; 2 bytes @ 0x10
   440  000011                     	ds	1
   441  000012                     ??_GunPortInit:
   442  000012                     ??_GunPortInit_:
   443                           
   444                           ; 1 bytes @ 0x11
   445  000012                     	ds	1
   446  000013                     StartSyncStrobes@SLED_B:
   447                           	opt stack 0
   448                           
   449                           ; 2 bytes @ 0x12
   450  000013                     	ds	1
   451  000014                     GunPortInit@gp:
   452                           	opt stack 0
   453                           
   454                           ; 17 bytes @ 0x13
   455  000014                     	ds	1
   456  000015                     StartSyncStrobes@delay:
   457                           	opt stack 0
   458                           
   459                           ; 4 bytes @ 0x14
   460  000015                     	ds	2
   461  000017                     GunPortInit_@gp:
   462                           	opt stack 0
   463                           
   464                           ; 17 bytes @ 0x16
   465  000017                     	ds	2
   466  000019                     ??_StartSyncStrobes:
   467                           
   468                           ; 1 bytes @ 0x18
   469  000019                     	ds	15
   470  000028                     ??_main:
   471                           
   472                           ; 1 bytes @ 0x27
   473  000028                     	ds	2
   474                           
   475 ;;
   476 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   477 ;;
   478 ;; *************** function _main *****************
   479 ;; Defined at:
   480 ;;		line 56 in file "main.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;  Gun3           17   47[BANK0 ] struct GunPort
   485 ;;  Gun2           17   30[BANK0 ] struct GunPort
   486 ;;  Gun1           17   13[BANK0 ] struct GunPort
   487 ;;  EFStrobe       13  103[BANK0 ] struct StrobeLED
   488 ;;  GenStrobe      13   90[BANK0 ] struct StrobeLED
   489 ;;  ACStrobe       13   77[BANK0 ] struct StrobeLED
   490 ;;  GStrobe        13   64[BANK0 ] struct StrobeLED
   491 ;;  Rabbit         13    0[BANK0 ] struct RabbitPort
   492 ;; Return value:  Size  Location     Type
   493 ;;                  1    wreg      void 
   494 ;; Registers used:
   495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   496 ;; Tracked objects:
   497 ;;		On entry : 0/0
   498 ;;		On exit  : 0/0
   499 ;;		Unchanged: 0/0
   500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   502 ;;      Locals:         0     116       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   503 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   504 ;;      Totals:         2     116       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   505 ;;Total ram usage:      118 bytes
   506 ;; Hardware stack levels required when called:    6
   507 ;; This function calls:
   508 ;;		_GunPortInit
   509 ;;		_GunPortInit_
   510 ;;		_RabbitLightsInit
   511 ;;		_SYSTEM_Initialize
   512 ;;		_StartGunFirePattern
   513 ;;		_StartRabbitLights
   514 ;;		_StartStopWatch
   515 ;;		_StartStrobe
   516 ;;		_StartSyncStrobes
   517 ;;		_StopGunFirePattern
   518 ;;		_StopRabbitLights
   519 ;;		_StopStrobe
   520 ;;		_StopSyncStrobes
   521 ;;		_StopWatch_Initialize
   522 ;;		_UpdateGunLED
   523 ;;		_UpdateRabbitLEDs
   524 ;;		_UpdateStrobeLED
   525 ;;		_newStrobe
   526 ;; This function is called by:
   527 ;;		Startup code after reset
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531                           	psect	text0
   532  001614                     __ptext0:
   533                           	opt stack 0
   534  001614                     _main:
   535                           	opt stack 25
   536                           
   537                           ;main.c: 59: SYSTEM_Initialize();
   538                           
   539                           ;incstack = 0
   540  001614  ECC7  F014         	call	_SYSTEM_Initialize	;wreg free
   541                           
   542                           ;main.c: 61: StopWatch_Initialize();
   543  001618  EC68  F014         	call	_StopWatch_Initialize	;wreg free
   544                           
   545                           ;main.c: 66: (INTCON0bits.GIE = 1);
   546  00161C  013F               	movlb	63	; () banked
   547  00161E  8FD2               	bsf	210,7,b	;volatile
   548                           
   549                           ; BSR set to: 63
   550                           ;main.c: 78: StartStopWatch();
   551  001620  ECEA  F014         	call	_StartStopWatch	;wreg free
   552                           
   553                           ;main.c: 80: GunPort Gun1 = GunPortInit(&LATC,&PORTC,&LATD,&PORTD,5,2);
   554  001624  0EBC               	movlw	188
   555  001626  6E01               	movwf	GunPortInit@OP,c
   556  001628  0E3F               	movlw	63
   557  00162A  6E02               	movwf	GunPortInit@OP+1,c
   558  00162C  0ECC               	movlw	204
   559  00162E  6E03               	movwf	GunPortInit@IP,c
   560  001630  0E3F               	movlw	63
   561  001632  6E04               	movwf	GunPortInit@IP+1,c
   562  001634  0EBD               	movlw	189
   563  001636  6E05               	movwf	GunPortInit@TP,c
   564  001638  0E3F               	movlw	63
   565  00163A  6E06               	movwf	GunPortInit@TP+1,c
   566  00163C  0ECD               	movlw	205
   567  00163E  6E07               	movwf	GunPortInit@TIP,c
   568  001640  0E3F               	movlw	63
   569  001642  6E08               	movwf	GunPortInit@TIP+1,c
   570  001644  0E05               	movlw	5
   571  001646  6E09               	movwf	GunPortInit@GLED,c
   572  001648  0E02               	movlw	2
   573  00164A  6E0A               	movwf	GunPortInit@TLED,c
   574  00164C  EC27  F012         	call	_GunPortInit	;wreg free
   575  001650  EE20  F06D         	lfsr	2,main@Gun1
   576  001654  0E10               	movlw	16
   577  001656                     u1771:
   578  001656  006F FFAF FFDB     	movff	16363,16347
   579  00165C  06E8               	decf	16360,f,c
   580  00165E  E2FB               	bc	u1771
   581                           
   582                           ;main.c: 81: GunPort Gun2 = GunPortInit(&LATC,&PORTC,&LATD,&PORTD,4,1);
   583  001660  0EBC               	movlw	188
   584  001662  6E01               	movwf	GunPortInit@OP,c
   585  001664  0E3F               	movlw	63
   586  001666  6E02               	movwf	GunPortInit@OP+1,c
   587  001668  0ECC               	movlw	204
   588  00166A  6E03               	movwf	GunPortInit@IP,c
   589  00166C  0E3F               	movlw	63
   590  00166E  6E04               	movwf	GunPortInit@IP+1,c
   591  001670  0EBD               	movlw	189
   592  001672  6E05               	movwf	GunPortInit@TP,c
   593  001674  0E3F               	movlw	63
   594  001676  6E06               	movwf	GunPortInit@TP+1,c
   595  001678  0ECD               	movlw	205
   596  00167A  6E07               	movwf	GunPortInit@TIP,c
   597  00167C  0E3F               	movlw	63
   598  00167E  6E08               	movwf	GunPortInit@TIP+1,c
   599  001680  0E04               	movlw	4
   600  001682  6E09               	movwf	GunPortInit@GLED,c
   601  001684  0E01               	movlw	1
   602  001686  6E0A               	movwf	GunPortInit@TLED,c
   603  001688  EC27  F012         	call	_GunPortInit	;wreg free
   604  00168C  EE20  F07E         	lfsr	2,main@Gun2
   605  001690  0E10               	movlw	16
   606  001692                     u1781:
   607  001692  006F FFAF FFDB     	movff	16363,16347
   608  001698  06E8               	decf	16360,f,c
   609  00169A  E2FB               	bc	u1781
   610                           
   611                           ;main.c: 82: GunPort Gun3 = GunPortInit_(&LATD,&PORTD,3,0);
   612  00169C  0EBD               	movlw	189
   613  00169E  6E01               	movwf	GunPortInit_@OP,c
   614  0016A0  0E3F               	movlw	63
   615  0016A2  6E02               	movwf	GunPortInit_@OP+1,c
   616  0016A4  0ECD               	movlw	205
   617  0016A6  6E03               	movwf	GunPortInit_@IP,c
   618  0016A8  0E3F               	movlw	63
   619  0016AA  6E04               	movwf	GunPortInit_@IP+1,c
   620  0016AC  0E03               	movlw	3
   621  0016AE  6E05               	movwf	GunPortInit_@GLED,c
   622  0016B0  0E00               	movlw	0
   623  0016B2  6E06               	movwf	GunPortInit_@TLED,c
   624  0016B4  ECDE  F012         	call	_GunPortInit_	;wreg free
   625  0016B8  EE20  F08F         	lfsr	2,main@Gun3
   626  0016BC  0E10               	movlw	16
   627  0016BE                     u1791:
   628  0016BE  006F FFAF FFDB     	movff	16363,16347
   629  0016C4  06E8               	decf	16360,f,c
   630  0016C6  E2FB               	bc	u1791
   631                           
   632                           ;main.c: 84: StrobeLED EFStrobe = newStrobe(&LATC,&PORTC,3,EF_Strobe);
   633  0016C8  0EBC               	movlw	188
   634  0016CA  6E01               	movwf	newStrobe@OP,c
   635  0016CC  0E3F               	movlw	63
   636  0016CE  6E02               	movwf	newStrobe@OP+1,c
   637  0016D0  0ECC               	movlw	204
   638  0016D2  6E03               	movwf	newStrobe@IP,c
   639  0016D4  0E3F               	movlw	63
   640  0016D6  6E04               	movwf	newStrobe@IP+1,c
   641  0016D8  0E03               	movlw	3
   642  0016DA  6E05               	movwf	newStrobe@sLED,c
   643  0016DC  0E00               	movlw	0
   644  0016DE  6E06               	movwf	newStrobe@t,c
   645  0016E0  EC7E  F013         	call	_newStrobe	;wreg free
   646  0016E4  EE20  F0C7         	lfsr	2,main@EFStrobe
   647  0016E8  0E0C               	movlw	12
   648  0016EA                     u1801:
   649  0016EA  006F FFAF FFDB     	movff	16363,16347
   650  0016F0  06E8               	decf	16360,f,c
   651  0016F2  E2FB               	bc	u1801
   652                           
   653                           ;main.c: 85: StrobeLED GStrobe = newStrobe(&LATC,&PORTC,2,G_Strobe);
   654  0016F4  0EBC               	movlw	188
   655  0016F6  6E01               	movwf	newStrobe@OP,c
   656  0016F8  0E3F               	movlw	63
   657  0016FA  6E02               	movwf	newStrobe@OP+1,c
   658  0016FC  0ECC               	movlw	204
   659  0016FE  6E03               	movwf	newStrobe@IP,c
   660  001700  0E3F               	movlw	63
   661  001702  6E04               	movwf	newStrobe@IP+1,c
   662  001704  0E02               	movlw	2
   663  001706  6E05               	movwf	newStrobe@sLED,c
   664  001708  0E01               	movlw	1
   665  00170A  6E06               	movwf	newStrobe@t,c
   666  00170C  EC7E  F013         	call	_newStrobe	;wreg free
   667  001710  EE20  F0A0         	lfsr	2,main@GStrobe
   668  001714  0E0C               	movlw	12
   669  001716                     u1811:
   670  001716  006F FFAF FFDB     	movff	16363,16347
   671  00171C  06E8               	decf	16360,f,c
   672  00171E  E2FB               	bc	u1811
   673                           
   674                           ;main.c: 86: StrobeLED ACStrobe = newStrobe(&LATC,&PORTC,0,AntiCollision);
   675  001720  0EBC               	movlw	188
   676  001722  6E01               	movwf	newStrobe@OP,c
   677  001724  0E3F               	movlw	63
   678  001726  6E02               	movwf	newStrobe@OP+1,c
   679  001728  0ECC               	movlw	204
   680  00172A  6E03               	movwf	newStrobe@IP,c
   681  00172C  0E3F               	movlw	63
   682  00172E  6E04               	movwf	newStrobe@IP+1,c
   683  001730  0E00               	movlw	0
   684  001732  6E05               	movwf	newStrobe@sLED,c
   685  001734  0E03               	movlw	3
   686  001736  6E06               	movwf	newStrobe@t,c
   687  001738  EC7E  F013         	call	_newStrobe	;wreg free
   688  00173C  EE20  F0AD         	lfsr	2,main@ACStrobe
   689  001740  0E0C               	movlw	12
   690  001742                     u1821:
   691  001742  006F FFAF FFDB     	movff	16363,16347
   692  001748  06E8               	decf	16360,f,c
   693  00174A  E2FB               	bc	u1821
   694                           
   695                           ;main.c: 87: StrobeLED GenStrobe = newStrobe(&LATC,&PORTC,1,General);
   696  00174C  0EBC               	movlw	188
   697  00174E  6E01               	movwf	newStrobe@OP,c
   698  001750  0E3F               	movlw	63
   699  001752  6E02               	movwf	newStrobe@OP+1,c
   700  001754  0ECC               	movlw	204
   701  001756  6E03               	movwf	newStrobe@IP,c
   702  001758  0E3F               	movlw	63
   703  00175A  6E04               	movwf	newStrobe@IP+1,c
   704  00175C  0E01               	movlw	1
   705  00175E  6E05               	movwf	newStrobe@sLED,c
   706  001760  0E02               	movlw	2
   707  001762  6E06               	movwf	newStrobe@t,c
   708  001764  EC7E  F013         	call	_newStrobe	;wreg free
   709  001768  EE20  F0BA         	lfsr	2,main@GenStrobe
   710  00176C  0E0C               	movlw	12
   711  00176E                     u1831:
   712  00176E  006F FFAF FFDB     	movff	16363,16347
   713  001774  06E8               	decf	16360,f,c
   714  001776  E2FB               	bc	u1831
   715                           
   716                           ;main.c: 89: RabbitPort Rabbit = RabbitLightsInit(&LATB,&PORTB,0,8);
   717  001778  0EBB               	movlw	187
   718  00177A  6E01               	movwf	RabbitLightsInit@OP,c
   719  00177C  0E3F               	movlw	63
   720  00177E  6E02               	movwf	RabbitLightsInit@OP+1,c
   721  001780  0ECB               	movlw	203
   722  001782  6E03               	movwf	RabbitLightsInit@IP,c
   723  001784  0E3F               	movlw	63
   724  001786  6E04               	movwf	RabbitLightsInit@IP+1,c
   725  001788  0E00               	movlw	0
   726  00178A  6E05               	movwf	RabbitLightsInit@SLED,c
   727  00178C  0E08               	movlw	8
   728  00178E  6E06               	movwf	RabbitLightsInit@num,c
   729  001790  EC28  F014         	call	_RabbitLightsInit	;wreg free
   730  001794  EE20  F060         	lfsr	2,main@Rabbit
   731  001798  0E0C               	movlw	12
   732  00179A                     u1841:
   733  00179A  006F FFAF FFDB     	movff	16363,16347
   734  0017A0  06E8               	decf	16360,f,c
   735  0017A2  E2FB               	bc	u1841
   736  0017A4                     
   737                           ;main.c: 93: {
   738                           ;main.c: 94: if ((PORTA & (0x01 << TRIGGER1_PIN)) == 0x00)
   739  0017A4  0E2C               	movlw	low _TRIGGER1_PIN
   740  0017A6  6EF6               	movwf	16374,c
   741  0017A8                     	if	1	;There is more than 1 active tblptr byte
   742  0017A8  0E10               	movlw	high _TRIGGER1_PIN
   743  0017AA  6EF7               	movwf	16375,c
   744  0017AC                     	endif
   745  0017AC                     	if	1	;There are 3 active tblptr bytes
   746  0017AC  0E00               	movlw	low (_TRIGGER1_PIN shr (0+16))
   747  0017AE  6EF8               	movwf	16376,c
   748  0017B0                     	endif
   749  0017B0  0008               	tblrd		*
   750  0017B2  006F FFD4  F028    	movff	16373,??_main
   751  0017B8  0E01               	movlw	1
   752  0017BA  6E29               	movwf	(??_main+1)& (0+255),c
   753  0017BC  2A28               	incf	??_main,f,c
   754  0017BE  D002               	goto	u1854
   755  0017C0                     u1855:
   756  0017C0  90D8               	bcf	16344,0,c
   757  0017C2  3629               	rlcf	??_main+1,f,c
   758  0017C4                     u1854:
   759  0017C4  2E28               	decfsz	??_main,f,c
   760  0017C6  D7FC               	goto	u1855
   761  0017C8  5029               	movf	??_main+1,w,c
   762  0017CA  013F               	movlb	63	; () banked
   763  0017CC  15CA               	andwf	202,w,b	;volatile
   764  0017CE  0900               	iorlw	0
   765  0017D0  A4D8               	btfss	16344,2,c
   766  0017D2  D015               	goto	l234
   767                           
   768                           ; BSR set to: 63
   769                           ;main.c: 95: {
   770                           ;main.c: 96: if (!Gun1.GunRUN)
   771  0017D4  0100               	movlb	0	; () banked
   772  0017D6  517C               	movf	(main@Gun1+15)& (0+255),w,b
   773  0017D8  A4D8               	btfss	16344,2,c
   774  0017DA  D006               	goto	l235
   775                           
   776                           ; BSR set to: 0
   777                           ;main.c: 97: {
   778                           ;main.c: 98: StartGunFirePattern(&Gun1);
   779  0017DC  0E6D               	movlw	low main@Gun1
   780  0017DE  6E07               	movwf	StartGunFirePattern@gp,c
   781  0017E0  0E00               	movlw	high main@Gun1
   782  0017E2  6E08               	movwf	StartGunFirePattern@gp+1,c
   783  0017E4  ECB8  F00F         	call	_StartGunFirePattern	;wreg free
   784  0017E8                     l235:
   785                           
   786                           ;main.c: 100: }
   787                           ;main.c: 101: if (!Gun2.GunRUN)
   788  0017E8  0100               	movlb	0	; () banked
   789  0017EA  518D               	movf	(main@Gun2+15)& (0+255),w,b
   790  0017EC  A4D8               	btfss	16344,2,c
   791  0017EE  D013               	goto	l237
   792                           
   793                           ; BSR set to: 0
   794                           ;main.c: 102: {
   795                           ;main.c: 103: StartGunFirePattern(&Gun2);
   796  0017F0  0E7E               	movlw	low main@Gun2
   797  0017F2  6E07               	movwf	StartGunFirePattern@gp,c
   798  0017F4  0E00               	movlw	high main@Gun2
   799  0017F6  6E08               	movwf	StartGunFirePattern@gp+1,c
   800  0017F8  ECB8  F00F         	call	_StartGunFirePattern	;wreg free
   801                           
   802                           ;main.c: 104: }
   803                           ;main.c: 105: }
   804  0017FC  D00C               	goto	l237
   805  0017FE                     l234:
   806                           
   807                           ;main.c: 106: else
   808                           ;main.c: 107: {
   809                           ;main.c: 108: StopGunFirePattern(&Gun1);
   810  0017FE  0E6D               	movlw	low main@Gun1
   811  001800  6E01               	movwf	StopGunFirePattern@gp,c
   812  001802  0E00               	movlw	high main@Gun1
   813  001804  6E02               	movwf	StopGunFirePattern@gp+1,c
   814  001806  EC84  F012         	call	_StopGunFirePattern	;wreg free
   815                           
   816                           ;main.c: 109: StopGunFirePattern(&Gun2);
   817  00180A  0E7E               	movlw	low main@Gun2
   818  00180C  6E01               	movwf	StopGunFirePattern@gp,c
   819  00180E  0E00               	movlw	high main@Gun2
   820  001810  6E02               	movwf	StopGunFirePattern@gp+1,c
   821  001812  EC84  F012         	call	_StopGunFirePattern	;wreg free
   822  001816                     l237:
   823                           
   824                           ;main.c: 110: }
   825                           ;main.c: 112: if ((PORTA & (0x01 << TRIGGER2_PIN)) == 0x00)
   826  001816  0E2B               	movlw	low _TRIGGER2_PIN
   827  001818  6EF6               	movwf	16374,c
   828  00181A                     	if	1	;There is more than 1 active tblptr byte
   829  00181A  0E10               	movlw	high _TRIGGER2_PIN
   830  00181C  6EF7               	movwf	16375,c
   831  00181E                     	endif
   832  00181E                     	if	1	;There are 3 active tblptr bytes
   833  00181E  0E00               	movlw	low (_TRIGGER2_PIN shr (0+16))
   834  001820  6EF8               	movwf	16376,c
   835  001822                     	endif
   836  001822  0008               	tblrd		*
   837  001824  006F FFD4  F028    	movff	16373,??_main
   838  00182A  0E01               	movlw	1
   839  00182C  6E29               	movwf	(??_main+1)& (0+255),c
   840  00182E  2A28               	incf	??_main,f,c
   841  001830  D002               	goto	u1894
   842  001832                     u1895:
   843  001832  90D8               	bcf	16344,0,c
   844  001834  3629               	rlcf	??_main+1,f,c
   845  001836                     u1894:
   846  001836  2E28               	decfsz	??_main,f,c
   847  001838  D7FC               	goto	u1895
   848  00183A  5029               	movf	??_main+1,w,c
   849  00183C  013F               	movlb	63	; () banked
   850  00183E  15CA               	andwf	202,w,b	;volatile
   851  001840  0900               	iorlw	0
   852  001842  A4D8               	btfss	16344,2,c
   853  001844  D00B               	goto	l238
   854                           
   855                           ; BSR set to: 63
   856                           ;main.c: 113: {
   857                           ;main.c: 114: if (!Gun3.GunRUN)
   858  001846  0100               	movlb	0	; () banked
   859  001848  519E               	movf	(main@Gun3+15)& (0+255),w,b
   860  00184A  A4D8               	btfss	16344,2,c
   861  00184C  D00D               	goto	l240
   862                           
   863                           ; BSR set to: 0
   864                           ;main.c: 115: {
   865                           ;main.c: 116: StartGunFirePattern(&Gun3);
   866  00184E  0E8F               	movlw	low main@Gun3
   867  001850  6E07               	movwf	StartGunFirePattern@gp,c
   868  001852  0E00               	movlw	high main@Gun3
   869  001854  6E08               	movwf	StartGunFirePattern@gp+1,c
   870  001856  ECB8  F00F         	call	_StartGunFirePattern	;wreg free
   871                           
   872                           ;main.c: 117: }
   873                           ;main.c: 118: }
   874  00185A  D006               	goto	l240
   875  00185C                     l238:
   876                           
   877                           ;main.c: 119: else
   878                           ;main.c: 120: {
   879                           ;main.c: 121: StopGunFirePattern(&Gun3);
   880  00185C  0E8F               	movlw	low main@Gun3
   881  00185E  6E01               	movwf	StopGunFirePattern@gp,c
   882  001860  0E00               	movlw	high main@Gun3
   883  001862  6E02               	movwf	StopGunFirePattern@gp+1,c
   884  001864  EC84  F012         	call	_StopGunFirePattern	;wreg free
   885  001868                     l240:
   886                           
   887                           ;main.c: 122: }
   888                           ;main.c: 124: if ((PORTA & (1 << STROBE1_PIN))== 0x00)
   889  001868  0E2A               	movlw	low _STROBE1_PIN
   890  00186A  6EF6               	movwf	16374,c
   891  00186C                     	if	1	;There is more than 1 active tblptr byte
   892  00186C  0E10               	movlw	high _STROBE1_PIN
   893  00186E  6EF7               	movwf	16375,c
   894  001870                     	endif
   895  001870                     	if	1	;There are 3 active tblptr bytes
   896  001870  0E00               	movlw	low (_STROBE1_PIN shr (0+16))
   897  001872  6EF8               	movwf	16376,c
   898  001874                     	endif
   899  001874  0008               	tblrd		*
   900  001876  006F FFD4  F028    	movff	16373,??_main
   901  00187C  0E01               	movlw	1
   902  00187E  6E29               	movwf	(??_main+1)& (0+255),c
   903  001880  2A28               	incf	??_main,f,c
   904  001882  D002               	goto	u1924
   905  001884                     u1925:
   906  001884  90D8               	bcf	16344,0,c
   907  001886  3629               	rlcf	??_main+1,f,c
   908  001888                     u1924:
   909  001888  2E28               	decfsz	??_main,f,c
   910  00188A  D7FC               	goto	u1925
   911  00188C  5029               	movf	??_main+1,w,c
   912  00188E  013F               	movlb	63	; () banked
   913  001890  15CA               	andwf	202,w,b	;volatile
   914  001892  0900               	iorlw	0
   915  001894  A4D8               	btfss	16344,2,c
   916  001896  D031               	goto	l241
   917                           
   918                           ; BSR set to: 63
   919                           ;main.c: 125: {
   920                           ;main.c: 126: if (!EFStrobe.StrobeRUN)
   921  001898  0100               	movlb	0	; () banked
   922  00189A  51D1               	movf	(main@EFStrobe+10)& (0+255),w,b
   923  00189C  A4D8               	btfss	16344,2,c
   924  00189E  D043               	goto	l243
   925                           
   926                           ; BSR set to: 0
   927                           ;main.c: 127: {
   928                           ;main.c: 128: StartSyncStrobes(&GenStrobe, &ACStrobe, AC_STROBE_DELAY_MS);
   929  0018A0  0EBA               	movlw	low main@GenStrobe
   930  0018A2  6E11               	movwf	StartSyncStrobes@SLED_A,c
   931  0018A4  0E00               	movlw	high main@GenStrobe
   932  0018A6  6E12               	movwf	StartSyncStrobes@SLED_A+1,c
   933  0018A8  0EAD               	movlw	low main@ACStrobe
   934  0018AA  6E13               	movwf	StartSyncStrobes@SLED_B,c
   935  0018AC  0E00               	movlw	high main@ACStrobe
   936  0018AE  6E14               	movwf	StartSyncStrobes@SLED_B+1,c
   937  0018B0  0E09               	movlw	low _AC_STROBE_DELAY_MS
   938  0018B2  6EF6               	movwf	16374,c
   939  0018B4                     	if	1	;There is more than 1 active tblptr byte
   940  0018B4  0E10               	movlw	high _AC_STROBE_DELAY_MS
   941  0018B6  6EF7               	movwf	16375,c
   942  0018B8                     	endif
   943  0018B8                     	if	1	;There are 3 active tblptr bytes
   944  0018B8  0E00               	movlw	low (_AC_STROBE_DELAY_MS shr (0+16))
   945  0018BA  6EF8               	movwf	16376,c
   946  0018BC                     	endif
   947  0018BC  0009               	tblrd		*+
   948  0018BE  006F FFD4  F015    	movff	16373,StartSyncStrobes@delay
   949  0018C4  0009               	tblrd		*+
   950  0018C6  006F FFD4  F016    	movff	16373,StartSyncStrobes@delay+1
   951  0018CC  0009               	tblrd		*+
   952  0018CE  006F FFD4  F017    	movff	16373,StartSyncStrobes@delay+2
   953  0018D4  000A               	tblrd		*-
   954  0018D6  006F FFD4  F018    	movff	16373,StartSyncStrobes@delay+3
   955  0018DC  EC0A  F011         	call	_StartSyncStrobes	;wreg free
   956                           
   957                           ;main.c: 129: StartStrobe(&EFStrobe);
   958  0018E0  0EC7               	movlw	low main@EFStrobe
   959  0018E2  6E07               	movwf	StartStrobe@SLED,c
   960  0018E4  0E00               	movlw	high main@EFStrobe
   961  0018E6  6E08               	movwf	StartStrobe@SLED+1,c
   962  0018E8  ECA0  F011         	call	_StartStrobe	;wreg free
   963                           
   964                           ;main.c: 130: StartStrobe(&GStrobe);
   965  0018EC  0EA0               	movlw	low main@GStrobe
   966  0018EE  6E07               	movwf	StartStrobe@SLED,c
   967  0018F0  0E00               	movlw	high main@GStrobe
   968  0018F2  6E08               	movwf	StartStrobe@SLED+1,c
   969  0018F4  ECA0  F011         	call	_StartStrobe	;wreg free
   970                           
   971                           ;main.c: 133: }
   972                           ;main.c: 134: }
   973  0018F8  D016               	goto	l243
   974  0018FA                     l241:
   975                           
   976                           ;main.c: 135: else
   977                           ;main.c: 136: {
   978                           ;main.c: 137: StopStrobe(&EFStrobe);
   979  0018FA  0EC7               	movlw	low main@EFStrobe
   980  0018FC  6E01               	movwf	StopStrobe@SLED,c
   981  0018FE  0E00               	movlw	high main@EFStrobe
   982  001900  6E02               	movwf	StopStrobe@SLED+1,c
   983  001902  ECF2  F013         	call	_StopStrobe	;wreg free
   984                           
   985                           ;main.c: 138: StopStrobe(&GStrobe);
   986  001906  0EA0               	movlw	low main@GStrobe
   987  001908  6E01               	movwf	StopStrobe@SLED,c
   988  00190A  0E00               	movlw	high main@GStrobe
   989  00190C  6E02               	movwf	StopStrobe@SLED+1,c
   990  00190E  ECF2  F013         	call	_StopStrobe	;wreg free
   991                           
   992                           ;main.c: 139: StopSyncStrobes(&GenStrobe, &ACStrobe);
   993  001912  0EBA               	movlw	low main@GenStrobe
   994  001914  6E07               	movwf	StopSyncStrobes@SLED_A,c
   995  001916  0E00               	movlw	high main@GenStrobe
   996  001918  6E08               	movwf	StopSyncStrobes@SLED_A+1,c
   997  00191A  0EAD               	movlw	low main@ACStrobe
   998  00191C  6E09               	movwf	StopSyncStrobes@SLED_B,c
   999  00191E  0E00               	movlw	high main@ACStrobe
  1000  001920  6E0A               	movwf	StopSyncStrobes@SLED_B+1,c
  1001  001922  EC7B  F014         	call	_StopSyncStrobes	;wreg free
  1002  001926                     l243:
  1003                           
  1004                           ;main.c: 140: }
  1005                           ;main.c: 142: if ((PORTA & (1 << STROBE2_PIN))== 0x00)
  1006  001926  0E29               	movlw	low _STROBE2_PIN
  1007  001928  6EF6               	movwf	16374,c
  1008  00192A                     	if	1	;There is more than 1 active tblptr byte
  1009  00192A  0E10               	movlw	high _STROBE2_PIN
  1010  00192C  6EF7               	movwf	16375,c
  1011  00192E                     	endif
  1012  00192E                     	if	1	;There are 3 active tblptr bytes
  1013  00192E  0E00               	movlw	low (_STROBE2_PIN shr (0+16))
  1014  001930  6EF8               	movwf	16376,c
  1015  001932                     	endif
  1016  001932  0008               	tblrd		*
  1017  001934  006F FFD4  F028    	movff	16373,??_main
  1018  00193A  0E01               	movlw	1
  1019  00193C  6E29               	movwf	(??_main+1)& (0+255),c
  1020  00193E  2A28               	incf	??_main,f,c
  1021  001940  D002               	goto	u1954
  1022  001942                     u1955:
  1023  001942  90D8               	bcf	16344,0,c
  1024  001944  3629               	rlcf	??_main+1,f,c
  1025  001946                     u1954:
  1026  001946  2E28               	decfsz	??_main,f,c
  1027  001948  D7FC               	goto	u1955
  1028  00194A  5029               	movf	??_main+1,w,c
  1029  00194C  013F               	movlb	63	; () banked
  1030  00194E  15CA               	andwf	202,w,b	;volatile
  1031  001950  0900               	iorlw	0
  1032  001952  A4D8               	btfss	16344,2,c
  1033  001954  D00B               	goto	l244
  1034                           
  1035                           ; BSR set to: 63
  1036                           ;main.c: 143: {
  1037                           ;main.c: 144: if (!Rabbit.RabbitRUN)
  1038  001956  0100               	movlb	0	; () banked
  1039  001958  516B               	movf	(main@Rabbit+11)& (0+255),w,b
  1040  00195A  A4D8               	btfss	16344,2,c
  1041  00195C  D00D               	goto	l246
  1042                           
  1043                           ; BSR set to: 0
  1044                           ;main.c: 145: {
  1045                           ;main.c: 146: StartRabbitLights(&Rabbit);
  1046  00195E  0E60               	movlw	low main@Rabbit
  1047  001960  6E05               	movwf	StartRabbitLights@rp,c
  1048  001962  0E00               	movlw	high main@Rabbit
  1049  001964  6E06               	movwf	StartRabbitLights@rp+1,c
  1050  001966  EC63  F010         	call	_StartRabbitLights	;wreg free
  1051                           
  1052                           ;main.c: 147: }
  1053                           ;main.c: 149: }
  1054  00196A  D006               	goto	l246
  1055  00196C                     l244:
  1056                           
  1057                           ;main.c: 150: else
  1058                           ;main.c: 151: {
  1059                           ;main.c: 152: StopRabbitLights(&Rabbit);
  1060  00196C  0E60               	movlw	low main@Rabbit
  1061  00196E  6E01               	movwf	StopRabbitLights@rp,c
  1062  001970  0E00               	movlw	high main@Rabbit
  1063  001972  6E02               	movwf	StopRabbitLights@rp+1,c
  1064  001974  ECBC  F013         	call	_StopRabbitLights	;wreg free
  1065  001978                     l246:
  1066                           
  1067                           ;main.c: 153: }
  1068                           ;main.c: 156: UpdateGunLED(&Gun1);
  1069  001978  0E6D               	movlw	low main@Gun1
  1070  00197A  6E05               	movwf	UpdateGunLED@gp,c
  1071  00197C  0E00               	movlw	high main@Gun1
  1072  00197E  6E06               	movwf	UpdateGunLED@gp+1,c
  1073  001980  ECED  F00C         	call	_UpdateGunLED	;wreg free
  1074                           
  1075                           ;main.c: 157: UpdateGunLED(&Gun2);
  1076  001984  0E7E               	movlw	low main@Gun2
  1077  001986  6E05               	movwf	UpdateGunLED@gp,c
  1078  001988  0E00               	movlw	high main@Gun2
  1079  00198A  6E06               	movwf	UpdateGunLED@gp+1,c
  1080  00198C  ECED  F00C         	call	_UpdateGunLED	;wreg free
  1081                           
  1082                           ;main.c: 158: UpdateGunLED(&Gun3);
  1083  001990  0E8F               	movlw	low main@Gun3
  1084  001992  6E05               	movwf	UpdateGunLED@gp,c
  1085  001994  0E00               	movlw	high main@Gun3
  1086  001996  6E06               	movwf	UpdateGunLED@gp+1,c
  1087  001998  ECED  F00C         	call	_UpdateGunLED	;wreg free
  1088                           
  1089                           ;main.c: 159: UpdateStrobeLED(&EFStrobe);
  1090  00199C  0EC7               	movlw	low main@EFStrobe
  1091  00199E  6E05               	movwf	UpdateStrobeLED@SLED,c
  1092  0019A0  0E00               	movlw	high main@EFStrobe
  1093  0019A2  6E06               	movwf	UpdateStrobeLED@SLED+1,c
  1094  0019A4  EC17  F008         	call	_UpdateStrobeLED	;wreg free
  1095                           
  1096                           ;main.c: 160: UpdateStrobeLED(&GStrobe);
  1097  0019A8  0EA0               	movlw	low main@GStrobe
  1098  0019AA  6E05               	movwf	UpdateStrobeLED@SLED,c
  1099  0019AC  0E00               	movlw	high main@GStrobe
  1100  0019AE  6E06               	movwf	UpdateStrobeLED@SLED+1,c
  1101  0019B0  EC17  F008         	call	_UpdateStrobeLED	;wreg free
  1102                           
  1103                           ;main.c: 161: UpdateStrobeLED(&GenStrobe);
  1104  0019B4  0EBA               	movlw	low main@GenStrobe
  1105  0019B6  6E05               	movwf	UpdateStrobeLED@SLED,c
  1106  0019B8  0E00               	movlw	high main@GenStrobe
  1107  0019BA  6E06               	movwf	UpdateStrobeLED@SLED+1,c
  1108  0019BC  EC17  F008         	call	_UpdateStrobeLED	;wreg free
  1109                           
  1110                           ;main.c: 162: UpdateStrobeLED(&ACStrobe);
  1111  0019C0  0EAD               	movlw	low main@ACStrobe
  1112  0019C2  6E05               	movwf	UpdateStrobeLED@SLED,c
  1113  0019C4  0E00               	movlw	high main@ACStrobe
  1114  0019C6  6E06               	movwf	UpdateStrobeLED@SLED+1,c
  1115  0019C8  EC17  F008         	call	_UpdateStrobeLED	;wreg free
  1116                           
  1117                           ;main.c: 163: UpdateRabbitLEDs(&Rabbit);
  1118  0019CC  0E60               	movlw	low main@Rabbit
  1119  0019CE  6E05               	movwf	UpdateRabbitLEDs@rp,c
  1120  0019D0  0E00               	movlw	high main@Rabbit
  1121  0019D2  6E06               	movwf	UpdateRabbitLEDs@rp+1,c
  1122  0019D4  ECAD  F00E         	call	_UpdateRabbitLEDs	;wreg free
  1123  0019D8  D6E5               	goto	l233
  1124  0019DA                     __end_of_main:
  1125                           	opt stack 0
  1126                           
  1127 ;; *************** function _newStrobe *****************
  1128 ;; Defined at:
  1129 ;;		line 301 in file "LED_Patterns.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;  OP              2    0[COMRAM] PTR  unsigned char 
  1132 ;;		 -> LATC(1), 
  1133 ;;  IP              2    2[COMRAM] PTR  unsigned char 
  1134 ;;		 -> PORTC(1), 
  1135 ;;  sLED            1    4[COMRAM] const unsigned char 
  1136 ;;  t               1    5[COMRAM] const enum E19379
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;  Strobe         13   15[COMRAM] struct StrobeLED
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  13    0[COMRAM] struct StrobeLED
  1141 ;; Registers used:
  1142 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1148 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1149 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1150 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1151 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1152 ;;Total ram usage:       28 bytes
  1153 ;; Hardware stack levels used:    1
  1154 ;; Hardware stack levels required when called:    3
  1155 ;; This function calls:
  1156 ;;		Nothing
  1157 ;; This function is called by:
  1158 ;;		_main
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           	psect	text1
  1163  0026FC                     __ptext1:
  1164                           	opt stack 0
  1165  0026FC                     _newStrobe:
  1166                           	opt stack 27
  1167                           
  1168                           ;LED_Patterns.c: 304: StrobeLED Strobe;
  1169                           ;LED_Patterns.c: 305: Strobe.OutPort = (volatile unsigned char *)OP;
  1170                           
  1171                           ;incstack = 0
  1172  0026FC  0060  F004  F010   	movff	newStrobe@OP,newStrobe@Strobe
  1173  002702  0060  F008  F011   	movff	newStrobe@OP+1,newStrobe@Strobe+1
  1174                           
  1175                           ;LED_Patterns.c: 306: Strobe.InPort = (volatile unsigned char *)IP;
  1176  002708  0060  F00C  F012   	movff	newStrobe@IP,newStrobe@Strobe+2
  1177  00270E  0060  F010  F013   	movff	newStrobe@IP+1,newStrobe@Strobe+3
  1178                           
  1179                           ;LED_Patterns.c: 307: Strobe.pin = sLED;
  1180  002714  0060  F014  F014   	movff	newStrobe@sLED,newStrobe@Strobe+4
  1181                           
  1182                           ;LED_Patterns.c: 308: Strobe.S_Type = t;
  1183  00271A  0060  F018  F015   	movff	newStrobe@t,newStrobe@Strobe+5
  1184                           
  1185                           ;LED_Patterns.c: 309: Strobe.StrobeCnt = 0;
  1186  002720  0E00               	movlw	0
  1187  002722  6E16               	movwf	newStrobe@Strobe+6,c
  1188  002724  0E00               	movlw	0
  1189  002726  6E17               	movwf	newStrobe@Strobe+7,c
  1190  002728  0E00               	movlw	0
  1191  00272A  6E18               	movwf	newStrobe@Strobe+8,c
  1192  00272C  0E00               	movlw	0
  1193  00272E  6E19               	movwf	newStrobe@Strobe+9,c
  1194                           
  1195                           ;LED_Patterns.c: 310: Strobe.StrobeRUN = 0;
  1196  002730  0E00               	movlw	0
  1197  002732  6E1A               	movwf	newStrobe@Strobe+10,c
  1198                           
  1199                           ;LED_Patterns.c: 311: Strobe.PulseCnt = 0;
  1200  002734  0E00               	movlw	0
  1201  002736  6E1B               	movwf	newStrobe@Strobe+11,c
  1202                           
  1203                           ;LED_Patterns.c: 312: Strobe.A_B = 0;
  1204  002738  0E00               	movlw	0
  1205  00273A  6E1C               	movwf	newStrobe@Strobe+12,c
  1206                           
  1207                           ;LED_Patterns.c: 314: *Strobe.OutPort |= (1 << sLED);
  1208  00273C  0060  F014  F00E   	movff	newStrobe@sLED,??_newStrobe
  1209  002742  0E01               	movlw	1
  1210  002744  6E0F               	movwf	(??_newStrobe+1)& (0+255),c
  1211  002746  2A0E               	incf	??_newStrobe,f,c
  1212  002748  D002               	goto	u1154
  1213  00274A                     u1155:
  1214  00274A  90D8               	bcf	16344,0,c
  1215  00274C  360F               	rlcf	??_newStrobe+1,f,c
  1216  00274E                     u1154:
  1217  00274E  2E0E               	decfsz	??_newStrobe,f,c
  1218  002750  D7FC               	goto	u1155
  1219  002752  0060  F043  FFD9   	movff	newStrobe@Strobe,16345
  1220  002758  0060  F047  FFDA   	movff	newStrobe@Strobe+1,16346
  1221  00275E  500F               	movf	??_newStrobe+1,w,c
  1222  002760  12DF               	iorwf	16351,f,c
  1223                           
  1224                           ;LED_Patterns.c: 316: return Strobe;
  1225  002762  EE20  F010         	lfsr	2,newStrobe@Strobe
  1226  002766  EE00  F001         	lfsr	0,?_newStrobe
  1227  00276A  0E0C               	movlw	12
  1228  00276C                     u1161:
  1229  00276C  006F FF6F FFEB     	movff	16347,16363
  1230  002772  06E8               	decf	16360,f,c
  1231  002774  E2FB               	bc	u1161
  1232  002776  0012               	return	
  1233  002778                     __end_of_newStrobe:
  1234                           	opt stack 0
  1235                           
  1236 ;; *************** function _UpdateStrobeLED *****************
  1237 ;; Defined at:
  1238 ;;		line 210 in file "LED_Patterns.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;  SLED            2    4[COMRAM] PTR struct StrobeLED
  1241 ;;		 -> main@GenStrobe(13), main@ACStrobe(13), main@GStrobe(13), main@EFStrobe(13), 
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;		None
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      void 
  1246 ;; Registers used:
  1247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1253 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;Total ram usage:       14 bytes
  1258 ;; Hardware stack levels used:    1
  1259 ;; Hardware stack levels required when called:    4
  1260 ;; This function calls:
  1261 ;;		_GetCurrentTime
  1262 ;; This function is called by:
  1263 ;;		_main
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           	psect	text2
  1268  00102E                     __ptext2:
  1269                           	opt stack 0
  1270  00102E                     _UpdateStrobeLED:
  1271                           	opt stack 26
  1272                           
  1273                           ;LED_Patterns.c: 212: if (SLED->StrobeRUN)
  1274                           
  1275                           ;incstack = 0
  1276  00102E  EE20 F00A          	lfsr	2,10
  1277  001032  5005               	movf	UpdateStrobeLED@SLED,w,c
  1278  001034  26D9               	addwf	16345,f,c
  1279  001036  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1280  001038  22DA               	addwfc	16346,f,c
  1281  00103A  50DF               	movf	16351,w,c
  1282  00103C  B4D8               	btfsc	16344,2,c
  1283  00103E  0012               	return	
  1284                           
  1285                           ;LED_Patterns.c: 213: {
  1286                           ;LED_Patterns.c: 214: if (SLED->StrobeCnt <= GetCurrentTime())
  1287  001040  EE20 F006          	lfsr	2,6
  1288  001044  5005               	movf	UpdateStrobeLED@SLED,w,c
  1289  001046  26D9               	addwf	16345,f,c
  1290  001048  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1291  00104A  22DA               	addwfc	16346,f,c
  1292  00104C  ECBA  F014         	call	_GetCurrentTime	;wreg free
  1293  001050  50DE               	movf	16350,w,c
  1294  001052  5C01               	subwf	?_GetCurrentTime,w,c
  1295  001054  50DE               	movf	16350,w,c
  1296  001056  5802               	subwfb	?_GetCurrentTime+1,w,c
  1297  001058  50DE               	movf	16350,w,c
  1298  00105A  5803               	subwfb	?_GetCurrentTime+2,w,c
  1299  00105C  50DE               	movf	16350,w,c
  1300  00105E  5804               	subwfb	?_GetCurrentTime+3,w,c
  1301  001060  A0D8               	btfss	16344,0,c
  1302  001062  0012               	return	
  1303  001064  D2C3               	goto	l355
  1304  001066                     
  1305                           ;LED_Patterns.c: 219: {
  1306                           ;LED_Patterns.c: 223: SLED->A_B = (bool)!SLED->A_B;
  1307  001066  EE20 F00C          	lfsr	2,12
  1308  00106A  5005               	movf	UpdateStrobeLED@SLED,w,c
  1309  00106C  26D9               	addwf	16345,f,c
  1310  00106E  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1311  001070  22DA               	addwfc	16346,f,c
  1312  001072  EE10 F00C          	lfsr	1,12
  1313  001076  5005               	movf	UpdateStrobeLED@SLED,w,c
  1314  001078  26E1               	addwf	16353,f,c
  1315  00107A  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1316  00107C  22E2               	addwfc	16354,f,c
  1317  00107E  50E7               	movf	16359,w,c
  1318  001080  A4D8               	btfss	16344,2,c
  1319  001082  D002               	goto	u1460
  1320  001084  0E01               	movlw	1
  1321  001086  D001               	goto	u1470
  1322  001088                     u1460:
  1323  001088  0E00               	movlw	0
  1324  00108A                     u1470:
  1325  00108A  6EDF               	movwf	16351,c
  1326                           
  1327                           ;LED_Patterns.c: 225: if (!SLED->A_B)
  1328  00108C  EE20 F00C          	lfsr	2,12
  1329  001090  5005               	movf	UpdateStrobeLED@SLED,w,c
  1330  001092  26D9               	addwf	16345,f,c
  1331  001094  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1332  001096  22DA               	addwfc	16346,f,c
  1333  001098  50DF               	movf	16351,w,c
  1334  00109A  A4D8               	btfss	16344,2,c
  1335  00109C  D050               	goto	l357
  1336                           
  1337                           ;LED_Patterns.c: 226: {
  1338                           ;LED_Patterns.c: 227: *SLED->OutPort |= (unsigned char)(1 << SLED->pin);
  1339  00109E  EE20 F004          	lfsr	2,4
  1340  0010A2  5005               	movf	UpdateStrobeLED@SLED,w,c
  1341  0010A4  26D9               	addwf	16345,f,c
  1342  0010A6  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1343  0010A8  22DA               	addwfc	16346,f,c
  1344  0010AA  50DF               	movf	16351,w,c
  1345  0010AC  6E07               	movwf	??_UpdateStrobeLED& (0+255),c
  1346  0010AE  0E01               	movlw	1
  1347  0010B0  6E08               	movwf	(??_UpdateStrobeLED+1)& (0+255),c
  1348  0010B2  2A07               	incf	??_UpdateStrobeLED,f,c
  1349  0010B4  D002               	goto	u1494
  1350  0010B6                     u1495:
  1351  0010B6  90D8               	bcf	16344,0,c
  1352  0010B8  3608               	rlcf	??_UpdateStrobeLED+1,f,c
  1353  0010BA                     u1494:
  1354  0010BA  2E07               	decfsz	??_UpdateStrobeLED,f,c
  1355  0010BC  D7FC               	goto	u1495
  1356  0010BE  0060  F017  FFD9   	movff	UpdateStrobeLED@SLED,16345
  1357  0010C4  0060  F01B  FFDA   	movff	UpdateStrobeLED@SLED+1,16346
  1358  0010CA  006F FF78  F009    	movff	16350,??_UpdateStrobeLED+2
  1359  0010D0  006F FF74  F00A    	movff	16349,??_UpdateStrobeLED+3
  1360  0010D6  0060  F027  FFD9   	movff	??_UpdateStrobeLED+2,16345
  1361  0010DC  0060  F02B  FFDA   	movff	??_UpdateStrobeLED+3,16346
  1362  0010E2  5008               	movf	??_UpdateStrobeLED+1,w,c
  1363  0010E4  12DF               	iorwf	16351,f,c
  1364                           
  1365                           ;LED_Patterns.c: 228: SLED->StrobeCnt += STROBE_OFF_TIME_MS;
  1366  0010E6  0E15               	movlw	low _STROBE_OFF_TIME_MS
  1367  0010E8  6EF6               	movwf	16374,c
  1368  0010EA                     	if	1	;There is more than 1 active tblptr byte
  1369  0010EA  0E10               	movlw	high _STROBE_OFF_TIME_MS
  1370  0010EC  6EF7               	movwf	16375,c
  1371  0010EE                     	endif
  1372  0010EE                     	if	1	;There are 3 active tblptr bytes
  1373  0010EE  0E00               	movlw	low (_STROBE_OFF_TIME_MS shr (0+16))
  1374  0010F0  6EF8               	movwf	16376,c
  1375  0010F2                     	endif
  1376  0010F2  0009               	tblrd		*+
  1377  0010F4  006F FFD4  F007    	movff	16373,??_UpdateStrobeLED
  1378  0010FA  0009               	tblrd		*+
  1379  0010FC  006F FFD4  F008    	movff	16373,??_UpdateStrobeLED+1
  1380  001102  0009               	tblrd		*+
  1381  001104  006F FFD4  F009    	movff	16373,??_UpdateStrobeLED+2
  1382  00110A  0009               	tblrd		*+
  1383  00110C  006F FFD4  F00A    	movff	16373,??_UpdateStrobeLED+3
  1384  001112  EE20 F006          	lfsr	2,6
  1385  001116  5005               	movf	UpdateStrobeLED@SLED,w,c
  1386  001118  26D9               	addwf	16345,f,c
  1387  00111A  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1388  00111C  22DA               	addwfc	16346,f,c
  1389  00111E  5007               	movf	??_UpdateStrobeLED,w,c
  1390  001120  26DE               	addwf	16350,f,c
  1391  001122  5008               	movf	??_UpdateStrobeLED+1,w,c
  1392  001124  22DE               	addwfc	16350,f,c
  1393  001126  5009               	movf	??_UpdateStrobeLED+2,w,c
  1394  001128  22DE               	addwfc	16350,f,c
  1395  00112A  500A               	movf	??_UpdateStrobeLED+3,w,c
  1396  00112C  22DE               	addwfc	16350,f,c
  1397                           
  1398                           ;LED_Patterns.c: 229: SLED->PulseCnt++;
  1399  00112E  EE20 F00B          	lfsr	2,11
  1400  001132  5005               	movf	UpdateStrobeLED@SLED,w,c
  1401  001134  26D9               	addwf	16345,f,c
  1402  001136  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1403  001138  22DA               	addwfc	16346,f,c
  1404  00113A  2ADF               	incf	16351,f,c
  1405                           
  1406                           ;LED_Patterns.c: 230: }
  1407  00113C  D054               	goto	l358
  1408  00113E                     l357:
  1409                           
  1410                           ;LED_Patterns.c: 231: else
  1411                           ;LED_Patterns.c: 232: {
  1412                           ;LED_Patterns.c: 233: if (SLED->PulseCnt < 3)
  1413  00113E  EE20 F00B          	lfsr	2,11
  1414  001142  5005               	movf	UpdateStrobeLED@SLED,w,c
  1415  001144  26D9               	addwf	16345,f,c
  1416  001146  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1417  001148  22DA               	addwfc	16346,f,c
  1418  00114A  0E03               	movlw	3
  1419  00114C  60DF               	cpfslt	16351,c
  1420  00114E  D027               	goto	l359
  1421                           
  1422                           ;LED_Patterns.c: 234: {
  1423                           ;LED_Patterns.c: 235: *SLED->OutPort &= (unsigned char)~(1<<SLED->pin);
  1424  001150  EE20 F004          	lfsr	2,4
  1425  001154  5005               	movf	UpdateStrobeLED@SLED,w,c
  1426  001156  26D9               	addwf	16345,f,c
  1427  001158  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1428  00115A  22DA               	addwfc	16346,f,c
  1429  00115C  50DF               	movf	16351,w,c
  1430  00115E  6E07               	movwf	??_UpdateStrobeLED& (0+255),c
  1431  001160  0E01               	movlw	1
  1432  001162  6E08               	movwf	(??_UpdateStrobeLED+1)& (0+255),c
  1433  001164  2A07               	incf	??_UpdateStrobeLED,f,c
  1434  001166  D002               	goto	u1514
  1435  001168                     u1515:
  1436  001168  90D8               	bcf	16344,0,c
  1437  00116A  3608               	rlcf	??_UpdateStrobeLED+1,f,c
  1438  00116C                     u1514:
  1439  00116C  2E07               	decfsz	??_UpdateStrobeLED,f,c
  1440  00116E  D7FC               	goto	u1515
  1441  001170  5008               	movf	??_UpdateStrobeLED+1,w,c
  1442  001172  0AFF               	xorlw	255
  1443  001174  6E09               	movwf	(??_UpdateStrobeLED+2)& (0+255),c
  1444  001176  0060  F017  FFD9   	movff	UpdateStrobeLED@SLED,16345
  1445  00117C  0060  F01B  FFDA   	movff	UpdateStrobeLED@SLED+1,16346
  1446  001182  006F FF78  F00A    	movff	16350,??_UpdateStrobeLED+3
  1447  001188  006F FF74  F00B    	movff	16349,??_UpdateStrobeLED+4
  1448  00118E  0060  F02B  FFD9   	movff	??_UpdateStrobeLED+3,16345
  1449  001194  0060  F02F  FFDA   	movff	??_UpdateStrobeLED+4,16346
  1450  00119A  5009               	movf	??_UpdateStrobeLED+2,w,c
  1451  00119C  16DF               	andwf	16351,f,c
  1452  00119E                     l359:
  1453                           
  1454                           ;LED_Patterns.c: 236: }
  1455                           ;LED_Patterns.c: 237: SLED->StrobeCnt += STROBE_ON_TIME_MS;
  1456  00119E  0E19               	movlw	low _STROBE_ON_TIME_MS
  1457  0011A0  6EF6               	movwf	16374,c
  1458  0011A2                     	if	1	;There is more than 1 active tblptr byte
  1459  0011A2  0E10               	movlw	high _STROBE_ON_TIME_MS
  1460  0011A4  6EF7               	movwf	16375,c
  1461  0011A6                     	endif
  1462  0011A6                     	if	1	;There are 3 active tblptr bytes
  1463  0011A6  0E00               	movlw	low (_STROBE_ON_TIME_MS shr (0+16))
  1464  0011A8  6EF8               	movwf	16376,c
  1465  0011AA                     	endif
  1466  0011AA  0009               	tblrd		*+
  1467  0011AC  006F FFD4  F007    	movff	16373,??_UpdateStrobeLED
  1468  0011B2  0009               	tblrd		*+
  1469  0011B4  006F FFD4  F008    	movff	16373,??_UpdateStrobeLED+1
  1470  0011BA  0009               	tblrd		*+
  1471  0011BC  006F FFD4  F009    	movff	16373,??_UpdateStrobeLED+2
  1472  0011C2  0009               	tblrd		*+
  1473  0011C4  006F FFD4  F00A    	movff	16373,??_UpdateStrobeLED+3
  1474  0011CA  EE20 F006          	lfsr	2,6
  1475  0011CE  5005               	movf	UpdateStrobeLED@SLED,w,c
  1476  0011D0  26D9               	addwf	16345,f,c
  1477  0011D2  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1478  0011D4  22DA               	addwfc	16346,f,c
  1479  0011D6  5007               	movf	??_UpdateStrobeLED,w,c
  1480  0011D8  26DE               	addwf	16350,f,c
  1481  0011DA  5008               	movf	??_UpdateStrobeLED+1,w,c
  1482  0011DC  22DE               	addwfc	16350,f,c
  1483  0011DE  5009               	movf	??_UpdateStrobeLED+2,w,c
  1484  0011E0  22DE               	addwfc	16350,f,c
  1485  0011E2  500A               	movf	??_UpdateStrobeLED+3,w,c
  1486  0011E4  22DE               	addwfc	16350,f,c
  1487  0011E6                     l358:
  1488                           
  1489                           ;LED_Patterns.c: 238: }
  1490                           ;LED_Patterns.c: 239: if (SLED->PulseCnt == 5)
  1491  0011E6  EE20 F00B          	lfsr	2,11
  1492  0011EA  5005               	movf	UpdateStrobeLED@SLED,w,c
  1493  0011EC  26D9               	addwf	16345,f,c
  1494  0011EE  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1495  0011F0  22DA               	addwfc	16346,f,c
  1496  0011F2  0E05               	movlw	5
  1497  0011F4  18DE               	xorwf	16350,w,c
  1498  0011F6  A4D8               	btfss	16344,2,c
  1499  0011F8  0012               	return	
  1500                           
  1501                           ;LED_Patterns.c: 240: SLED->PulseCnt = 0;
  1502  0011FA  EE20 F00B          	lfsr	2,11
  1503  0011FE  5005               	movf	UpdateStrobeLED@SLED,w,c
  1504  001200  26D9               	addwf	16345,f,c
  1505  001202  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1506  001204  22DA               	addwfc	16346,f,c
  1507  001206  0E00               	movlw	0
  1508  001208  6EDF               	movwf	16351,c
  1509                           
  1510                           ;LED_Patterns.c: 242: break;
  1511  00120A  0012               	return	
  1512  00120C                     
  1513                           ;LED_Patterns.c: 245: {
  1514                           ;LED_Patterns.c: 249: SLED->A_B = (bool)!SLED->A_B;
  1515  00120C  EE20 F00C          	lfsr	2,12
  1516  001210  5005               	movf	UpdateStrobeLED@SLED,w,c
  1517  001212  26D9               	addwf	16345,f,c
  1518  001214  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1519  001216  22DA               	addwfc	16346,f,c
  1520  001218  EE10 F00C          	lfsr	1,12
  1521  00121C  5005               	movf	UpdateStrobeLED@SLED,w,c
  1522  00121E  26E1               	addwf	16353,f,c
  1523  001220  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1524  001222  22E2               	addwfc	16354,f,c
  1525  001224  50E7               	movf	16359,w,c
  1526  001226  A4D8               	btfss	16344,2,c
  1527  001228  D002               	goto	u1530
  1528  00122A  0E01               	movlw	1
  1529  00122C  D001               	goto	u1540
  1530  00122E                     u1530:
  1531  00122E  0E00               	movlw	0
  1532  001230                     u1540:
  1533  001230  6EDF               	movwf	16351,c
  1534                           
  1535                           ;LED_Patterns.c: 251: if (!SLED->A_B)
  1536  001232  EE20 F00C          	lfsr	2,12
  1537  001236  5005               	movf	UpdateStrobeLED@SLED,w,c
  1538  001238  26D9               	addwf	16345,f,c
  1539  00123A  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1540  00123C  22DA               	addwfc	16346,f,c
  1541  00123E  50DF               	movf	16351,w,c
  1542  001240  A4D8               	btfss	16344,2,c
  1543  001242  D0B2               	goto	l363
  1544                           
  1545                           ;LED_Patterns.c: 252: {
  1546                           ;LED_Patterns.c: 253: *SLED->OutPort |= (unsigned char)(1<< SLED->pin);
  1547  001244  EE20 F004          	lfsr	2,4
  1548  001248  5005               	movf	UpdateStrobeLED@SLED,w,c
  1549  00124A  26D9               	addwf	16345,f,c
  1550  00124C  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1551  00124E  22DA               	addwfc	16346,f,c
  1552  001250  50DF               	movf	16351,w,c
  1553  001252  6E07               	movwf	??_UpdateStrobeLED& (0+255),c
  1554  001254  0E01               	movlw	1
  1555  001256  6E08               	movwf	(??_UpdateStrobeLED+1)& (0+255),c
  1556  001258  2A07               	incf	??_UpdateStrobeLED,f,c
  1557  00125A  D002               	goto	u1564
  1558  00125C                     u1565:
  1559  00125C  90D8               	bcf	16344,0,c
  1560  00125E  3608               	rlcf	??_UpdateStrobeLED+1,f,c
  1561  001260                     u1564:
  1562  001260  2E07               	decfsz	??_UpdateStrobeLED,f,c
  1563  001262  D7FC               	goto	u1565
  1564  001264  0060  F017  FFD9   	movff	UpdateStrobeLED@SLED,16345
  1565  00126A  0060  F01B  FFDA   	movff	UpdateStrobeLED@SLED+1,16346
  1566  001270  006F FF78  F009    	movff	16350,??_UpdateStrobeLED+2
  1567  001276  006F FF74  F00A    	movff	16349,??_UpdateStrobeLED+3
  1568  00127C  0060  F027  FFD9   	movff	??_UpdateStrobeLED+2,16345
  1569  001282  0060  F02B  FFDA   	movff	??_UpdateStrobeLED+3,16346
  1570  001288  5008               	movf	??_UpdateStrobeLED+1,w,c
  1571  00128A  12DF               	iorwf	16351,f,c
  1572                           
  1573                           ;LED_Patterns.c: 255: if ((SLED->PulseCnt < 2) || (SLED->PulseCnt == 3))
  1574  00128C  EE20 F00B          	lfsr	2,11
  1575  001290  5005               	movf	UpdateStrobeLED@SLED,w,c
  1576  001292  26D9               	addwf	16345,f,c
  1577  001294  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1578  001296  22DA               	addwfc	16346,f,c
  1579  001298  0E01               	movlw	1
  1580  00129A  64DF               	cpfsgt	16351,c
  1581  00129C  D00A               	goto	u1580
  1582  00129E  EE20 F00B          	lfsr	2,11
  1583  0012A2  5005               	movf	UpdateStrobeLED@SLED,w,c
  1584  0012A4  26D9               	addwf	16345,f,c
  1585  0012A6  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1586  0012A8  22DA               	addwfc	16346,f,c
  1587  0012AA  0E03               	movlw	3
  1588  0012AC  18DE               	xorwf	16350,w,c
  1589  0012AE  A4D8               	btfss	16344,2,c
  1590  0012B0  D024               	goto	l364
  1591  0012B2                     u1580:
  1592                           
  1593                           ;LED_Patterns.c: 256: SLED->StrobeCnt += STROBE_OFF_TIME_MS;
  1594  0012B2  0E15               	movlw	low _STROBE_OFF_TIME_MS
  1595  0012B4  6EF6               	movwf	16374,c
  1596  0012B6                     	if	1	;There is more than 1 active tblptr byte
  1597  0012B6  0E10               	movlw	high _STROBE_OFF_TIME_MS
  1598  0012B8  6EF7               	movwf	16375,c
  1599  0012BA                     	endif
  1600  0012BA                     	if	1	;There are 3 active tblptr bytes
  1601  0012BA  0E00               	movlw	low (_STROBE_OFF_TIME_MS shr (0+16))
  1602  0012BC  6EF8               	movwf	16376,c
  1603  0012BE                     	endif
  1604  0012BE  0009               	tblrd		*+
  1605  0012C0  006F FFD4  F007    	movff	16373,??_UpdateStrobeLED
  1606  0012C6  0009               	tblrd		*+
  1607  0012C8  006F FFD4  F008    	movff	16373,??_UpdateStrobeLED+1
  1608  0012CE  0009               	tblrd		*+
  1609  0012D0  006F FFD4  F009    	movff	16373,??_UpdateStrobeLED+2
  1610  0012D6  0009               	tblrd		*+
  1611  0012D8  006F FFD4  F00A    	movff	16373,??_UpdateStrobeLED+3
  1612  0012DE  EE20 F006          	lfsr	2,6
  1613  0012E2  5005               	movf	UpdateStrobeLED@SLED,w,c
  1614  0012E4  26D9               	addwf	16345,f,c
  1615  0012E6  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1616  0012E8  22DA               	addwfc	16346,f,c
  1617  0012EA  5007               	movf	??_UpdateStrobeLED,w,c
  1618  0012EC  26DE               	addwf	16350,f,c
  1619  0012EE  5008               	movf	??_UpdateStrobeLED+1,w,c
  1620  0012F0  22DE               	addwfc	16350,f,c
  1621  0012F2  5009               	movf	??_UpdateStrobeLED+2,w,c
  1622  0012F4  22DE               	addwfc	16350,f,c
  1623  0012F6  500A               	movf	??_UpdateStrobeLED+3,w,c
  1624  0012F8  D04E               	goto	L1
  1625  0012FA                     l364:
  1626                           
  1627                           ;LED_Patterns.c: 257: else
  1628                           ;LED_Patterns.c: 258: SLED->StrobeCnt += (2000 - STROBE_ON_TIME_MS - STROBE_OFF_TIME_MS)
      +                          ;
  1629  0012FA  0E15               	movlw	low _STROBE_OFF_TIME_MS
  1630  0012FC  6EF6               	movwf	16374,c
  1631  0012FE                     	if	1	;There is more than 1 active tblptr byte
  1632  0012FE  0E10               	movlw	high _STROBE_OFF_TIME_MS
  1633  001300  6EF7               	movwf	16375,c
  1634  001302                     	endif
  1635  001302                     	if	1	;There are 3 active tblptr bytes
  1636  001302  0E00               	movlw	low (_STROBE_OFF_TIME_MS shr (0+16))
  1637  001304  6EF8               	movwf	16376,c
  1638  001306                     	endif
  1639  001306  0009               	tblrd		*+
  1640  001308  006F FFD4  F007    	movff	16373,??_UpdateStrobeLED
  1641  00130E  0009               	tblrd		*+
  1642  001310  006F FFD4  F008    	movff	16373,??_UpdateStrobeLED+1
  1643  001316  0009               	tblrd		*+
  1644  001318  006F FFD4  F009    	movff	16373,??_UpdateStrobeLED+2
  1645  00131E  0009               	tblrd		*+
  1646  001320  006F FFD4  F00A    	movff	16373,??_UpdateStrobeLED+3
  1647  001326  0E19               	movlw	low _STROBE_ON_TIME_MS
  1648  001328  6EF6               	movwf	16374,c
  1649  00132A                     	if	1	;There is more than 1 active tblptr byte
  1650  00132A  0E10               	movlw	high _STROBE_ON_TIME_MS
  1651  00132C  6EF7               	movwf	16375,c
  1652  00132E                     	endif
  1653  00132E                     	if	1	;There are 3 active tblptr bytes
  1654  00132E  0E00               	movlw	low (_STROBE_ON_TIME_MS shr (0+16))
  1655  001330  6EF8               	movwf	16376,c
  1656  001332                     	endif
  1657  001332  5007               	movf	??_UpdateStrobeLED,w,c
  1658  001334  0009               	tblrd		*+
  1659  001336  24F5               	addwf	16373,w,c
  1660  001338  6E0B               	movwf	(??_UpdateStrobeLED+4)& (0+255),c
  1661  00133A  5008               	movf	??_UpdateStrobeLED+1,w,c
  1662  00133C  0009               	tblrd		*+
  1663  00133E  20F5               	addwfc	16373,w,c
  1664  001340  6E0C               	movwf	(??_UpdateStrobeLED+5)& (0+255),c
  1665  001342  5009               	movf	??_UpdateStrobeLED+2,w,c
  1666  001344  0009               	tblrd		*+
  1667  001346  20F5               	addwfc	16373,w,c
  1668  001348  6E0D               	movwf	(??_UpdateStrobeLED+6)& (0+255),c
  1669  00134A  500A               	movf	??_UpdateStrobeLED+3,w,c
  1670  00134C  0009               	tblrd		*+
  1671  00134E  20F5               	addwfc	16373,w,c
  1672  001350  6E0E               	movwf	(??_UpdateStrobeLED+7)& (0+255),c
  1673  001352  1E0B               	comf	??_UpdateStrobeLED+4,f,c
  1674  001354  1E0C               	comf	??_UpdateStrobeLED+5,f,c
  1675  001356  1E0D               	comf	??_UpdateStrobeLED+6,f,c
  1676  001358  1E0E               	comf	??_UpdateStrobeLED+7,f,c
  1677  00135A  2A0B               	incf	??_UpdateStrobeLED+4,f,c
  1678  00135C  0E00               	movlw	0
  1679  00135E  220C               	addwfc	??_UpdateStrobeLED+5,f,c
  1680  001360  220D               	addwfc	??_UpdateStrobeLED+6,f,c
  1681  001362  220E               	addwfc	??_UpdateStrobeLED+7,f,c
  1682  001364  0ED0               	movlw	208
  1683  001366  240B               	addwf	??_UpdateStrobeLED+4,w,c
  1684  001368  6E0F               	movwf	(??_UpdateStrobeLED+8)& (0+255),c
  1685  00136A  0E07               	movlw	7
  1686  00136C  200C               	addwfc	??_UpdateStrobeLED+5,w,c
  1687  00136E  6E10               	movwf	(??_UpdateStrobeLED+9)& (0+255),c
  1688  001370  0E00               	movlw	0
  1689  001372  200D               	addwfc	??_UpdateStrobeLED+6,w,c
  1690  001374  6E11               	movwf	(??_UpdateStrobeLED+10)& (0+255),c
  1691  001376  0E00               	movlw	0
  1692  001378  200E               	addwfc	??_UpdateStrobeLED+7,w,c
  1693  00137A  6E12               	movwf	(??_UpdateStrobeLED+11)& (0+255),c
  1694  00137C  EE20 F006          	lfsr	2,6
  1695  001380  5005               	movf	UpdateStrobeLED@SLED,w,c
  1696  001382  26D9               	addwf	16345,f,c
  1697  001384  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1698  001386  22DA               	addwfc	16346,f,c
  1699  001388  500F               	movf	??_UpdateStrobeLED+8,w,c
  1700  00138A  26DE               	addwf	16350,f,c
  1701  00138C  5010               	movf	??_UpdateStrobeLED+9,w,c
  1702  00138E  22DE               	addwfc	16350,f,c
  1703  001390  5011               	movf	??_UpdateStrobeLED+10,w,c
  1704  001392  22DE               	addwfc	16350,f,c
  1705  001394  5012               	movf	??_UpdateStrobeLED+11,w,c
  1706  001396                     L1:
  1707  001396  22DE               	addwfc	16350,f,c
  1708                           
  1709                           ;LED_Patterns.c: 260: SLED->PulseCnt++;
  1710  001398  EE20 F00B          	lfsr	2,11
  1711  00139C  5005               	movf	UpdateStrobeLED@SLED,w,c
  1712  00139E  26D9               	addwf	16345,f,c
  1713  0013A0  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1714  0013A2  22DA               	addwfc	16346,f,c
  1715  0013A4  2ADF               	incf	16351,f,c
  1716                           
  1717                           ;LED_Patterns.c: 261: }
  1718  0013A6  D05E               	goto	l368
  1719  0013A8                     l363:
  1720                           
  1721                           ;LED_Patterns.c: 262: else
  1722                           ;LED_Patterns.c: 263: {
  1723                           ;LED_Patterns.c: 264: if ((SLED->PulseCnt < 2) || (SLED->PulseCnt == 3))
  1724  0013A8  EE20 F00B          	lfsr	2,11
  1725  0013AC  5005               	movf	UpdateStrobeLED@SLED,w,c
  1726  0013AE  26D9               	addwf	16345,f,c
  1727  0013B0  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1728  0013B2  22DA               	addwfc	16346,f,c
  1729  0013B4  0E01               	movlw	1
  1730  0013B6  64DF               	cpfsgt	16351,c
  1731  0013B8  D00A               	goto	u1600
  1732  0013BA  EE20 F00B          	lfsr	2,11
  1733  0013BE  5005               	movf	UpdateStrobeLED@SLED,w,c
  1734  0013C0  26D9               	addwf	16345,f,c
  1735  0013C2  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1736  0013C4  22DA               	addwfc	16346,f,c
  1737  0013C6  0E03               	movlw	3
  1738  0013C8  18DE               	xorwf	16350,w,c
  1739  0013CA  A4D8               	btfss	16344,2,c
  1740  0013CC  D027               	goto	l369
  1741  0013CE                     u1600:
  1742                           
  1743                           ;LED_Patterns.c: 265: {
  1744                           ;LED_Patterns.c: 266: *SLED->OutPort &= (unsigned char)~(1 << SLED->pin);
  1745  0013CE  EE20 F004          	lfsr	2,4
  1746  0013D2  5005               	movf	UpdateStrobeLED@SLED,w,c
  1747  0013D4  26D9               	addwf	16345,f,c
  1748  0013D6  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1749  0013D8  22DA               	addwfc	16346,f,c
  1750  0013DA  50DF               	movf	16351,w,c
  1751  0013DC  6E07               	movwf	??_UpdateStrobeLED& (0+255),c
  1752  0013DE  0E01               	movlw	1
  1753  0013E0  6E08               	movwf	(??_UpdateStrobeLED+1)& (0+255),c
  1754  0013E2  2A07               	incf	??_UpdateStrobeLED,f,c
  1755  0013E4  D002               	goto	u1614
  1756  0013E6                     u1615:
  1757  0013E6  90D8               	bcf	16344,0,c
  1758  0013E8  3608               	rlcf	??_UpdateStrobeLED+1,f,c
  1759  0013EA                     u1614:
  1760  0013EA  2E07               	decfsz	??_UpdateStrobeLED,f,c
  1761  0013EC  D7FC               	goto	u1615
  1762  0013EE  5008               	movf	??_UpdateStrobeLED+1,w,c
  1763  0013F0  0AFF               	xorlw	255
  1764  0013F2  6E09               	movwf	(??_UpdateStrobeLED+2)& (0+255),c
  1765  0013F4  0060  F017  FFD9   	movff	UpdateStrobeLED@SLED,16345
  1766  0013FA  0060  F01B  FFDA   	movff	UpdateStrobeLED@SLED+1,16346
  1767  001400  006F FF78  F00A    	movff	16350,??_UpdateStrobeLED+3
  1768  001406  006F FF74  F00B    	movff	16349,??_UpdateStrobeLED+4
  1769  00140C  0060  F02B  FFD9   	movff	??_UpdateStrobeLED+3,16345
  1770  001412  0060  F02F  FFDA   	movff	??_UpdateStrobeLED+4,16346
  1771  001418  5009               	movf	??_UpdateStrobeLED+2,w,c
  1772  00141A  16DF               	andwf	16351,f,c
  1773  00141C                     l369:
  1774                           
  1775                           ;LED_Patterns.c: 267: }
  1776                           ;LED_Patterns.c: 269: SLED->StrobeCnt += STROBE_ON_TIME_MS;
  1777  00141C  0E19               	movlw	low _STROBE_ON_TIME_MS
  1778  00141E  6EF6               	movwf	16374,c
  1779  001420                     	if	1	;There is more than 1 active tblptr byte
  1780  001420  0E10               	movlw	high _STROBE_ON_TIME_MS
  1781  001422  6EF7               	movwf	16375,c
  1782  001424                     	endif
  1783  001424                     	if	1	;There are 3 active tblptr bytes
  1784  001424  0E00               	movlw	low (_STROBE_ON_TIME_MS shr (0+16))
  1785  001426  6EF8               	movwf	16376,c
  1786  001428                     	endif
  1787  001428  0009               	tblrd		*+
  1788  00142A  006F FFD4  F007    	movff	16373,??_UpdateStrobeLED
  1789  001430  0009               	tblrd		*+
  1790  001432  006F FFD4  F008    	movff	16373,??_UpdateStrobeLED+1
  1791  001438  0009               	tblrd		*+
  1792  00143A  006F FFD4  F009    	movff	16373,??_UpdateStrobeLED+2
  1793  001440  0009               	tblrd		*+
  1794  001442  006F FFD4  F00A    	movff	16373,??_UpdateStrobeLED+3
  1795  001448  EE20 F006          	lfsr	2,6
  1796  00144C  5005               	movf	UpdateStrobeLED@SLED,w,c
  1797  00144E  26D9               	addwf	16345,f,c
  1798  001450  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1799  001452  22DA               	addwfc	16346,f,c
  1800  001454  5007               	movf	??_UpdateStrobeLED,w,c
  1801  001456  26DE               	addwf	16350,f,c
  1802  001458  5008               	movf	??_UpdateStrobeLED+1,w,c
  1803  00145A  22DE               	addwfc	16350,f,c
  1804  00145C  5009               	movf	??_UpdateStrobeLED+2,w,c
  1805  00145E  22DE               	addwfc	16350,f,c
  1806  001460  500A               	movf	??_UpdateStrobeLED+3,w,c
  1807  001462  22DE               	addwfc	16350,f,c
  1808  001464                     l368:
  1809                           
  1810                           ;LED_Patterns.c: 270: }
  1811                           ;LED_Patterns.c: 271: if (SLED->PulseCnt == 5)
  1812  001464  EE20 F00B          	lfsr	2,11
  1813  001468  5005               	movf	UpdateStrobeLED@SLED,w,c
  1814  00146A  26D9               	addwf	16345,f,c
  1815  00146C  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1816  00146E  22DA               	addwfc	16346,f,c
  1817  001470  0E05               	movlw	5
  1818  001472  18DE               	xorwf	16350,w,c
  1819  001474  A4D8               	btfss	16344,2,c
  1820  001476  0012               	return	
  1821                           
  1822                           ;LED_Patterns.c: 272: SLED->PulseCnt = 0;
  1823  001478  EE20 F00B          	lfsr	2,11
  1824  00147C  5005               	movf	UpdateStrobeLED@SLED,w,c
  1825  00147E  26D9               	addwf	16345,f,c
  1826  001480  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1827  001482  22DA               	addwfc	16346,f,c
  1828  001484  0E00               	movlw	0
  1829  001486  6EDF               	movwf	16351,c
  1830                           
  1831                           ;LED_Patterns.c: 274: break; }
  1832  001488  0012               	return	
  1833  00148A                     
  1834                           ;LED_Patterns.c: 276: case AntiCollision:
  1835                           ;LED_Patterns.c: 277: {
  1836                           ;LED_Patterns.c: 278: SLED->A_B = (bool)!SLED->A_B;
  1837  00148A  EE20 F00C          	lfsr	2,12
  1838  00148E  5005               	movf	UpdateStrobeLED@SLED,w,c
  1839  001490  26D9               	addwf	16345,f,c
  1840  001492  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1841  001494  22DA               	addwfc	16346,f,c
  1842  001496  EE10 F00C          	lfsr	1,12
  1843  00149A  5005               	movf	UpdateStrobeLED@SLED,w,c
  1844  00149C  26E1               	addwf	16353,f,c
  1845  00149E  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1846  0014A0  22E2               	addwfc	16354,f,c
  1847  0014A2  50E7               	movf	16359,w,c
  1848  0014A4  A4D8               	btfss	16344,2,c
  1849  0014A6  D002               	goto	u1630
  1850  0014A8  0E01               	movlw	1
  1851  0014AA  D001               	goto	u1640
  1852  0014AC                     u1630:
  1853  0014AC  0E00               	movlw	0
  1854  0014AE                     u1640:
  1855  0014AE  6EDF               	movwf	16351,c
  1856                           
  1857                           ;LED_Patterns.c: 280: if (!SLED->A_B)
  1858  0014B0  EE20 F00C          	lfsr	2,12
  1859  0014B4  5005               	movf	UpdateStrobeLED@SLED,w,c
  1860  0014B6  26D9               	addwf	16345,f,c
  1861  0014B8  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1862  0014BA  22DA               	addwfc	16346,f,c
  1863  0014BC  50DF               	movf	16351,w,c
  1864  0014BE  A4D8               	btfss	16344,2,c
  1865  0014C0  D049               	goto	l375
  1866                           
  1867                           ;LED_Patterns.c: 281: {
  1868                           ;LED_Patterns.c: 282: *SLED->OutPort |= (unsigned char)(1 << SLED->pin);
  1869  0014C2  EE20 F004          	lfsr	2,4
  1870  0014C6  5005               	movf	UpdateStrobeLED@SLED,w,c
  1871  0014C8  26D9               	addwf	16345,f,c
  1872  0014CA  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1873  0014CC  22DA               	addwfc	16346,f,c
  1874  0014CE  50DF               	movf	16351,w,c
  1875  0014D0  6E07               	movwf	??_UpdateStrobeLED& (0+255),c
  1876  0014D2  0E01               	movlw	1
  1877  0014D4  6E08               	movwf	(??_UpdateStrobeLED+1)& (0+255),c
  1878  0014D6  2A07               	incf	??_UpdateStrobeLED,f,c
  1879  0014D8  D002               	goto	u1664
  1880  0014DA                     u1665:
  1881  0014DA  90D8               	bcf	16344,0,c
  1882  0014DC  3608               	rlcf	??_UpdateStrobeLED+1,f,c
  1883  0014DE                     u1664:
  1884  0014DE  2E07               	decfsz	??_UpdateStrobeLED,f,c
  1885  0014E0  D7FC               	goto	u1665
  1886  0014E2  0060  F017  FFD9   	movff	UpdateStrobeLED@SLED,16345
  1887  0014E8  0060  F01B  FFDA   	movff	UpdateStrobeLED@SLED+1,16346
  1888  0014EE  006F FF78  F009    	movff	16350,??_UpdateStrobeLED+2
  1889  0014F4  006F FF74  F00A    	movff	16349,??_UpdateStrobeLED+3
  1890  0014FA  0060  F027  FFD9   	movff	??_UpdateStrobeLED+2,16345
  1891  001500  0060  F02B  FFDA   	movff	??_UpdateStrobeLED+3,16346
  1892  001506  5008               	movf	??_UpdateStrobeLED+1,w,c
  1893  001508  12DF               	iorwf	16351,f,c
  1894                           
  1895                           ;LED_Patterns.c: 283: SLED->StrobeCnt += GEN_STROBE_OFF_TIME_MS;
  1896  00150A  0E0D               	movlw	low _GEN_STROBE_OFF_TIME_MS
  1897  00150C  6EF6               	movwf	16374,c
  1898  00150E                     	if	1	;There is more than 1 active tblptr byte
  1899  00150E  0E10               	movlw	high _GEN_STROBE_OFF_TIME_MS
  1900  001510  6EF7               	movwf	16375,c
  1901  001512                     	endif
  1902  001512                     	if	1	;There are 3 active tblptr bytes
  1903  001512  0E00               	movlw	low (_GEN_STROBE_OFF_TIME_MS shr (0+16))
  1904  001514  6EF8               	movwf	16376,c
  1905  001516                     	endif
  1906  001516  0009               	tblrd		*+
  1907  001518  006F FFD4  F007    	movff	16373,??_UpdateStrobeLED
  1908  00151E  0009               	tblrd		*+
  1909  001520  006F FFD4  F008    	movff	16373,??_UpdateStrobeLED+1
  1910  001526  0009               	tblrd		*+
  1911  001528  006F FFD4  F009    	movff	16373,??_UpdateStrobeLED+2
  1912  00152E  0009               	tblrd		*+
  1913  001530  006F FFD4  F00A    	movff	16373,??_UpdateStrobeLED+3
  1914  001536  EE20 F006          	lfsr	2,6
  1915  00153A  5005               	movf	UpdateStrobeLED@SLED,w,c
  1916  00153C  26D9               	addwf	16345,f,c
  1917  00153E  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1918  001540  22DA               	addwfc	16346,f,c
  1919  001542  5007               	movf	??_UpdateStrobeLED,w,c
  1920  001544  26DE               	addwf	16350,f,c
  1921  001546  5008               	movf	??_UpdateStrobeLED+1,w,c
  1922  001548  22DE               	addwfc	16350,f,c
  1923  00154A  5009               	movf	??_UpdateStrobeLED+2,w,c
  1924  00154C  22DE               	addwfc	16350,f,c
  1925  00154E  500A               	movf	??_UpdateStrobeLED+3,w,c
  1926  001550  22DE               	addwfc	16350,f,c
  1927                           
  1928                           ;LED_Patterns.c: 284: }
  1929  001552  0012               	return	
  1930  001554                     l375:
  1931                           
  1932                           ;LED_Patterns.c: 285: else
  1933                           ;LED_Patterns.c: 286: {
  1934                           ;LED_Patterns.c: 287: *SLED->OutPort &= (unsigned char)~(1 << SLED->pin);
  1935  001554  EE20 F004          	lfsr	2,4
  1936  001558  5005               	movf	UpdateStrobeLED@SLED,w,c
  1937  00155A  26D9               	addwf	16345,f,c
  1938  00155C  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1939  00155E  22DA               	addwfc	16346,f,c
  1940  001560  50DF               	movf	16351,w,c
  1941  001562  6E07               	movwf	??_UpdateStrobeLED& (0+255),c
  1942  001564  0E01               	movlw	1
  1943  001566  6E08               	movwf	(??_UpdateStrobeLED+1)& (0+255),c
  1944  001568  2A07               	incf	??_UpdateStrobeLED,f,c
  1945  00156A  D002               	goto	u1674
  1946  00156C                     u1675:
  1947  00156C  90D8               	bcf	16344,0,c
  1948  00156E  3608               	rlcf	??_UpdateStrobeLED+1,f,c
  1949  001570                     u1674:
  1950  001570  2E07               	decfsz	??_UpdateStrobeLED,f,c
  1951  001572  D7FC               	goto	u1675
  1952  001574  5008               	movf	??_UpdateStrobeLED+1,w,c
  1953  001576  0AFF               	xorlw	255
  1954  001578  6E09               	movwf	(??_UpdateStrobeLED+2)& (0+255),c
  1955  00157A  0060  F017  FFD9   	movff	UpdateStrobeLED@SLED,16345
  1956  001580  0060  F01B  FFDA   	movff	UpdateStrobeLED@SLED+1,16346
  1957  001586  006F FF78  F00A    	movff	16350,??_UpdateStrobeLED+3
  1958  00158C  006F FF74  F00B    	movff	16349,??_UpdateStrobeLED+4
  1959  001592  0060  F02B  FFD9   	movff	??_UpdateStrobeLED+3,16345
  1960  001598  0060  F02F  FFDA   	movff	??_UpdateStrobeLED+4,16346
  1961  00159E  5009               	movf	??_UpdateStrobeLED+2,w,c
  1962  0015A0  16DF               	andwf	16351,f,c
  1963                           
  1964                           ;LED_Patterns.c: 288: SLED->StrobeCnt += GEN_STROBE_ON_TIME_MS;
  1965  0015A2  0E11               	movlw	low _GEN_STROBE_ON_TIME_MS
  1966  0015A4  6EF6               	movwf	16374,c
  1967  0015A6                     	if	1	;There is more than 1 active tblptr byte
  1968  0015A6  0E10               	movlw	high _GEN_STROBE_ON_TIME_MS
  1969  0015A8  6EF7               	movwf	16375,c
  1970  0015AA                     	endif
  1971  0015AA                     	if	1	;There are 3 active tblptr bytes
  1972  0015AA  0E00               	movlw	low (_GEN_STROBE_ON_TIME_MS shr (0+16))
  1973  0015AC  6EF8               	movwf	16376,c
  1974  0015AE                     	endif
  1975  0015AE  0009               	tblrd		*+
  1976  0015B0  006F FFD4  F007    	movff	16373,??_UpdateStrobeLED
  1977  0015B6  0009               	tblrd		*+
  1978  0015B8  006F FFD4  F008    	movff	16373,??_UpdateStrobeLED+1
  1979  0015BE  0009               	tblrd		*+
  1980  0015C0  006F FFD4  F009    	movff	16373,??_UpdateStrobeLED+2
  1981  0015C6  0009               	tblrd		*+
  1982  0015C8  006F FFD4  F00A    	movff	16373,??_UpdateStrobeLED+3
  1983  0015CE  EE20 F006          	lfsr	2,6
  1984  0015D2  5005               	movf	UpdateStrobeLED@SLED,w,c
  1985  0015D4  26D9               	addwf	16345,f,c
  1986  0015D6  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1987  0015D8  22DA               	addwfc	16346,f,c
  1988  0015DA  5007               	movf	??_UpdateStrobeLED,w,c
  1989  0015DC  26DE               	addwf	16350,f,c
  1990  0015DE  5008               	movf	??_UpdateStrobeLED+1,w,c
  1991  0015E0  22DE               	addwfc	16350,f,c
  1992  0015E2  5009               	movf	??_UpdateStrobeLED+2,w,c
  1993  0015E4  22DE               	addwfc	16350,f,c
  1994  0015E6  500A               	movf	??_UpdateStrobeLED+3,w,c
  1995  0015E8  22DE               	addwfc	16350,f,c
  1996                           
  1997                           ;LED_Patterns.c: 294: }
  1998                           ;LED_Patterns.c: 295: }
  1999                           
  2000                           ;LED_Patterns.c: 289: }
  2001                           ;LED_Patterns.c: 292: break;
  2002  0015EA  0012               	return	
  2003  0015EC                     l355:
  2004  0015EC  EE20 F005          	lfsr	2,5
  2005  0015F0  5005               	movf	UpdateStrobeLED@SLED,w,c
  2006  0015F2  26D9               	addwf	16345,f,c
  2007  0015F4  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  2008  0015F6  22DA               	addwfc	16346,f,c
  2009  0015F8  50DF               	movf	16351,w,c
  2010                           
  2011                           ; Switch size 1, requested type "space"
  2012                           ; Number of cases is 4, Range of values is 0 to 3
  2013                           ; switch strategies available:
  2014                           ; Name         Instructions Cycles
  2015                           ; simple_byte           13     7 (average)
  2016                           ;	Chosen strategy is simple_byte
  2017  0015FA  0A00               	xorlw	0	; case 0
  2018  0015FC  B4D8               	btfsc	16344,2,c
  2019  0015FE  D533               	goto	l356
  2020  001600  0A01               	xorlw	1	; case 1
  2021  001602  B4D8               	btfsc	16344,2,c
  2022  001604  D603               	goto	l362
  2023  001606  0A03               	xorlw	3	; case 2
  2024  001608  B4D8               	btfsc	16344,2,c
  2025  00160A  D73F               	goto	l373
  2026  00160C  0A01               	xorlw	1	; case 3
  2027  00160E  A4D8               	btfss	16344,2,c
  2028  001610  0012               	return	
  2029  001612  D73B               	goto	l373
  2030  001614                     __end_of_UpdateStrobeLED:
  2031                           	opt stack 0
  2032                           
  2033 ;; *************** function _UpdateRabbitLEDs *****************
  2034 ;; Defined at:
  2035 ;;		line 355 in file "LED_Patterns.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;  rp              2    4[COMRAM] PTR struct RabbitPort
  2038 ;;		 -> main@Rabbit(13), 
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;  i               1   11[COMRAM] unsigned char 
  2041 ;;  Mask            1   12[COMRAM] unsigned char 
  2042 ;;  buffer          1   10[COMRAM] unsigned char 
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  1    wreg      void 
  2045 ;; Registers used:
  2046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2052 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2053 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2054 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;Total ram usage:        9 bytes
  2057 ;; Hardware stack levels used:    1
  2058 ;; Hardware stack levels required when called:    4
  2059 ;; This function calls:
  2060 ;;		_GetCurrentTime
  2061 ;; This function is called by:
  2062 ;;		_main
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           	psect	text3
  2067  001D5A                     __ptext3:
  2068                           	opt stack 0
  2069  001D5A                     _UpdateRabbitLEDs:
  2070                           	opt stack 26
  2071                           
  2072                           ;LED_Patterns.c: 357: if (rp->RabbitRUN)
  2073                           
  2074                           ;incstack = 0
  2075  001D5A  EE20 F00B          	lfsr	2,11
  2076  001D5E  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2077  001D60  26D9               	addwf	16345,f,c
  2078  001D62  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2079  001D64  22DA               	addwfc	16346,f,c
  2080  001D66  50DF               	movf	16351,w,c
  2081  001D68  B4D8               	btfsc	16344,2,c
  2082  001D6A  0012               	return	
  2083                           
  2084                           ;LED_Patterns.c: 358: {
  2085                           ;LED_Patterns.c: 359: if (rp->msCnt <= GetCurrentTime())
  2086  001D6C  EE20 F006          	lfsr	2,6
  2087  001D70  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2088  001D72  26D9               	addwf	16345,f,c
  2089  001D74  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2090  001D76  22DA               	addwfc	16346,f,c
  2091  001D78  ECBA  F014         	call	_GetCurrentTime	;wreg free
  2092  001D7C  50DE               	movf	16350,w,c
  2093  001D7E  5C01               	subwf	?_GetCurrentTime,w,c
  2094  001D80  50DE               	movf	16350,w,c
  2095  001D82  5802               	subwfb	?_GetCurrentTime+1,w,c
  2096  001D84  50DE               	movf	16350,w,c
  2097  001D86  5803               	subwfb	?_GetCurrentTime+2,w,c
  2098  001D88  50DE               	movf	16350,w,c
  2099  001D8A  5804               	subwfb	?_GetCurrentTime+3,w,c
  2100  001D8C  A0D8               	btfss	16344,0,c
  2101  001D8E  0012               	return	
  2102                           
  2103                           ;LED_Patterns.c: 360: {
  2104                           ;LED_Patterns.c: 361: rp->A_B = (bool)!rp->A_B;
  2105  001D90  EE20 F00C          	lfsr	2,12
  2106  001D94  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2107  001D96  26D9               	addwf	16345,f,c
  2108  001D98  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2109  001D9A  22DA               	addwfc	16346,f,c
  2110  001D9C  EE10 F00C          	lfsr	1,12
  2111  001DA0  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2112  001DA2  26E1               	addwf	16353,f,c
  2113  001DA4  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2114  001DA6  22E2               	addwfc	16354,f,c
  2115  001DA8  50E7               	movf	16359,w,c
  2116  001DAA  A4D8               	btfss	16344,2,c
  2117  001DAC  D002               	goto	u1700
  2118  001DAE  0E01               	movlw	1
  2119  001DB0  D001               	goto	u1710
  2120  001DB2                     u1700:
  2121  001DB2  0E00               	movlw	0
  2122  001DB4                     u1710:
  2123  001DB4  6EDF               	movwf	16351,c
  2124                           
  2125                           ;LED_Patterns.c: 363: unsigned char Mask = 0;
  2126  001DB6  0E00               	movlw	0
  2127  001DB8  6E0D               	movwf	UpdateRabbitLEDs@Mask,c
  2128                           
  2129                           ;LED_Patterns.c: 364: for (uint8_t i = 0; i < rp->NumLights; i++)
  2130  001DBA  0E00               	movlw	0
  2131  001DBC  6E0C               	movwf	UpdateRabbitLEDs@i,c
  2132  001DBE  D003               	goto	l394
  2133  001DC0                     
  2134                           ;LED_Patterns.c: 365: {
  2135                           ;LED_Patterns.c: 366: Mask = (unsigned char)((Mask << 1) | 1);
  2136  001DC0  80D8               	bsf	16344,0,c
  2137  001DC2  360D               	rlcf	UpdateRabbitLEDs@Mask,f,c
  2138  001DC4  2A0C               	incf	UpdateRabbitLEDs@i,f,c
  2139  001DC6                     l394:
  2140  001DC6  EE20 F005          	lfsr	2,5
  2141  001DCA  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2142  001DCC  26D9               	addwf	16345,f,c
  2143  001DCE  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2144  001DD0  22DA               	addwfc	16346,f,c
  2145  001DD2  50DE               	movf	16350,w,c
  2146  001DD4  5C0C               	subwf	UpdateRabbitLEDs@i,w,c
  2147  001DD6  A0D8               	btfss	16344,0,c
  2148  001DD8  D7F3               	goto	l395
  2149                           
  2150                           ;LED_Patterns.c: 367: }
  2151                           ;LED_Patterns.c: 369: Mask = (unsigned char)(Mask << rp->StartingLED);
  2152  001DDA  EE20 F004          	lfsr	2,4
  2153  001DDE  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2154  001DE0  26D9               	addwf	16345,f,c
  2155  001DE2  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2156  001DE4  22DA               	addwfc	16346,f,c
  2157  001DE6  50DF               	movf	16351,w,c
  2158  001DE8  6E07               	movwf	??_UpdateRabbitLEDs& (0+255),c
  2159  001DEA  0060  F034  F008   	movff	UpdateRabbitLEDs@Mask,??_UpdateRabbitLEDs+1
  2160  001DF0  2A07               	incf	??_UpdateRabbitLEDs,f,c
  2161  001DF2  D002               	goto	u1734
  2162  001DF4                     u1735:
  2163  001DF4  90D8               	bcf	16344,0,c
  2164  001DF6  3608               	rlcf	??_UpdateRabbitLEDs+1,f,c
  2165  001DF8                     u1734:
  2166  001DF8  2E07               	decfsz	??_UpdateRabbitLEDs,f,c
  2167  001DFA  D7FC               	goto	u1735
  2168  001DFC  5008               	movf	??_UpdateRabbitLEDs+1,w,c
  2169  001DFE  6E0D               	movwf	UpdateRabbitLEDs@Mask,c
  2170                           
  2171                           ;LED_Patterns.c: 371: unsigned char buffer;
  2172                           ;LED_Patterns.c: 373: if (!rp->A_B)
  2173  001E00  EE20 F00C          	lfsr	2,12
  2174  001E04  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2175  001E06  26D9               	addwf	16345,f,c
  2176  001E08  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2177  001E0A  22DA               	addwfc	16346,f,c
  2178  001E0C  50DF               	movf	16351,w,c
  2179  001E0E  A4D8               	btfss	16344,2,c
  2180  001E10  D058               	goto	l397
  2181                           
  2182                           ;LED_Patterns.c: 374: {
  2183                           ;LED_Patterns.c: 375: rp->ShiftCNT++;
  2184  001E12  EE20 F00A          	lfsr	2,10
  2185  001E16  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2186  001E18  26D9               	addwf	16345,f,c
  2187  001E1A  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2188  001E1C  22DA               	addwfc	16346,f,c
  2189  001E1E  2ADF               	incf	16351,f,c
  2190                           
  2191                           ;LED_Patterns.c: 377: if (rp->ShiftCNT == rp->NumLights)
  2192  001E20  EE20 F005          	lfsr	2,5
  2193  001E24  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2194  001E26  26D9               	addwf	16345,f,c
  2195  001E28  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2196  001E2A  22DA               	addwfc	16346,f,c
  2197  001E2C  EE10 F00A          	lfsr	1,10
  2198  001E30  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2199  001E32  26E1               	addwf	16353,f,c
  2200  001E34  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2201  001E36  22E2               	addwfc	16354,f,c
  2202  001E38  50DE               	movf	16350,w,c
  2203  001E3A  18E6               	xorwf	16358,w,c
  2204  001E3C  A4D8               	btfss	16344,2,c
  2205  001E3E  D008               	goto	l398
  2206                           
  2207                           ;LED_Patterns.c: 378: {
  2208                           ;LED_Patterns.c: 379: rp->ShiftCNT = 0;
  2209  001E40  EE20 F00A          	lfsr	2,10
  2210  001E44  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2211  001E46  26D9               	addwf	16345,f,c
  2212  001E48  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2213  001E4A  22DA               	addwfc	16346,f,c
  2214  001E4C  0E00               	movlw	0
  2215  001E4E  6EDF               	movwf	16351,c
  2216  001E50                     l398:
  2217                           
  2218                           ;LED_Patterns.c: 380: }
  2219                           ;LED_Patterns.c: 381: rp->msCnt += RABBIT_OFF_TIME_MS;
  2220  001E50  0E01               	movlw	low _RABBIT_OFF_TIME_MS
  2221  001E52  6EF6               	movwf	16374,c
  2222  001E54                     	if	1	;There is more than 1 active tblptr byte
  2223  001E54  0E10               	movlw	high _RABBIT_OFF_TIME_MS
  2224  001E56  6EF7               	movwf	16375,c
  2225  001E58                     	endif
  2226  001E58                     	if	1	;There are 3 active tblptr bytes
  2227  001E58  0E00               	movlw	low (_RABBIT_OFF_TIME_MS shr (0+16))
  2228  001E5A  6EF8               	movwf	16376,c
  2229  001E5C                     	endif
  2230  001E5C  0009               	tblrd		*+
  2231  001E5E  006F FFD4  F007    	movff	16373,??_UpdateRabbitLEDs
  2232  001E64  0009               	tblrd		*+
  2233  001E66  006F FFD4  F008    	movff	16373,??_UpdateRabbitLEDs+1
  2234  001E6C  0009               	tblrd		*+
  2235  001E6E  006F FFD4  F009    	movff	16373,??_UpdateRabbitLEDs+2
  2236  001E74  0009               	tblrd		*+
  2237  001E76  006F FFD4  F00A    	movff	16373,??_UpdateRabbitLEDs+3
  2238  001E7C  EE20 F006          	lfsr	2,6
  2239  001E80  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2240  001E82  26D9               	addwf	16345,f,c
  2241  001E84  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2242  001E86  22DA               	addwfc	16346,f,c
  2243  001E88  5007               	movf	??_UpdateRabbitLEDs,w,c
  2244  001E8A  26DE               	addwf	16350,f,c
  2245  001E8C  5008               	movf	??_UpdateRabbitLEDs+1,w,c
  2246  001E8E  22DE               	addwfc	16350,f,c
  2247  001E90  5009               	movf	??_UpdateRabbitLEDs+2,w,c
  2248  001E92  22DE               	addwfc	16350,f,c
  2249  001E94  500A               	movf	??_UpdateRabbitLEDs+3,w,c
  2250  001E96  22DE               	addwfc	16350,f,c
  2251                           
  2252                           ;LED_Patterns.c: 383: *rp->OutputPort |= Mask;
  2253  001E98  0060  F017  FFD9   	movff	UpdateRabbitLEDs@rp,16345
  2254  001E9E  0060  F01B  FFDA   	movff	UpdateRabbitLEDs@rp+1,16346
  2255  001EA4  006F FF78  F007    	movff	16350,??_UpdateRabbitLEDs
  2256  001EAA  006F FF74  F008    	movff	16349,??_UpdateRabbitLEDs+1
  2257  001EB0  0060  F01F  FFD9   	movff	??_UpdateRabbitLEDs,16345
  2258  001EB6  0060  F023  FFDA   	movff	??_UpdateRabbitLEDs+1,16346
  2259  001EBC  500D               	movf	UpdateRabbitLEDs@Mask,w,c
  2260  001EBE  12DF               	iorwf	16351,f,c
  2261                           
  2262                           ;LED_Patterns.c: 384: }
  2263  001EC0  0012               	return	
  2264  001EC2                     l397:
  2265                           
  2266                           ;LED_Patterns.c: 385: else
  2267                           ;LED_Patterns.c: 386: {
  2268                           ;LED_Patterns.c: 388: buffer = (unsigned char)(1 << (rp->StartingLED + rp->ShiftCNT));
  2269  001EC2  EE20 F00A          	lfsr	2,10
  2270  001EC6  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2271  001EC8  26D9               	addwf	16345,f,c
  2272  001ECA  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2273  001ECC  22DA               	addwfc	16346,f,c
  2274  001ECE  50DF               	movf	16351,w,c
  2275  001ED0  6E07               	movwf	??_UpdateRabbitLEDs& (0+255),c
  2276  001ED2  EE20 F004          	lfsr	2,4
  2277  001ED6  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2278  001ED8  26D9               	addwf	16345,f,c
  2279  001EDA  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2280  001EDC  22DA               	addwfc	16346,f,c
  2281  001EDE  50DF               	movf	16351,w,c
  2282  001EE0  2407               	addwf	??_UpdateRabbitLEDs,w,c
  2283  001EE2  6E08               	movwf	(??_UpdateRabbitLEDs+1)& (0+255),c
  2284  001EE4  0E01               	movlw	1
  2285  001EE6  6E09               	movwf	(??_UpdateRabbitLEDs+2)& (0+255),c
  2286  001EE8  2A08               	incf	??_UpdateRabbitLEDs+1,f,c
  2287  001EEA  D002               	goto	u1764
  2288  001EEC                     u1765:
  2289  001EEC  90D8               	bcf	16344,0,c
  2290  001EEE  3609               	rlcf	??_UpdateRabbitLEDs+2,f,c
  2291  001EF0                     u1764:
  2292  001EF0  2E08               	decfsz	??_UpdateRabbitLEDs+1,f,c
  2293  001EF2  D7FC               	goto	u1765
  2294  001EF4  5009               	movf	??_UpdateRabbitLEDs+2,w,c
  2295  001EF6  6E0B               	movwf	UpdateRabbitLEDs@buffer,c
  2296                           
  2297                           ;LED_Patterns.c: 390: *rp->OutputPort &= (unsigned char)~buffer;
  2298  001EF8  500B               	movf	UpdateRabbitLEDs@buffer,w,c
  2299  001EFA  0AFF               	xorlw	255
  2300  001EFC  6E07               	movwf	??_UpdateRabbitLEDs& (0+255),c
  2301  001EFE  0060  F017  FFD9   	movff	UpdateRabbitLEDs@rp,16345
  2302  001F04  0060  F01B  FFDA   	movff	UpdateRabbitLEDs@rp+1,16346
  2303  001F0A  006F FF78  F008    	movff	16350,??_UpdateRabbitLEDs+1
  2304  001F10  006F FF74  F009    	movff	16349,??_UpdateRabbitLEDs+2
  2305  001F16  0060  F023  FFD9   	movff	??_UpdateRabbitLEDs+1,16345
  2306  001F1C  0060  F027  FFDA   	movff	??_UpdateRabbitLEDs+2,16346
  2307  001F22  5007               	movf	??_UpdateRabbitLEDs,w,c
  2308  001F24  16DF               	andwf	16351,f,c
  2309                           
  2310                           ;LED_Patterns.c: 393: rp->msCnt += RABBIT_ON_TIME_MS;
  2311  001F26  0E05               	movlw	low _RABBIT_ON_TIME_MS
  2312  001F28  6EF6               	movwf	16374,c
  2313  001F2A                     	if	1	;There is more than 1 active tblptr byte
  2314  001F2A  0E10               	movlw	high _RABBIT_ON_TIME_MS
  2315  001F2C  6EF7               	movwf	16375,c
  2316  001F2E                     	endif
  2317  001F2E                     	if	1	;There are 3 active tblptr bytes
  2318  001F2E  0E00               	movlw	low (_RABBIT_ON_TIME_MS shr (0+16))
  2319  001F30  6EF8               	movwf	16376,c
  2320  001F32                     	endif
  2321  001F32  0009               	tblrd		*+
  2322  001F34  006F FFD4  F007    	movff	16373,??_UpdateRabbitLEDs
  2323  001F3A  0009               	tblrd		*+
  2324  001F3C  006F FFD4  F008    	movff	16373,??_UpdateRabbitLEDs+1
  2325  001F42  0009               	tblrd		*+
  2326  001F44  006F FFD4  F009    	movff	16373,??_UpdateRabbitLEDs+2
  2327  001F4A  0009               	tblrd		*+
  2328  001F4C  006F FFD4  F00A    	movff	16373,??_UpdateRabbitLEDs+3
  2329  001F52  EE20 F006          	lfsr	2,6
  2330  001F56  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2331  001F58  26D9               	addwf	16345,f,c
  2332  001F5A  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2333  001F5C  22DA               	addwfc	16346,f,c
  2334  001F5E  5007               	movf	??_UpdateRabbitLEDs,w,c
  2335  001F60  26DE               	addwf	16350,f,c
  2336  001F62  5008               	movf	??_UpdateRabbitLEDs+1,w,c
  2337  001F64  22DE               	addwfc	16350,f,c
  2338  001F66  5009               	movf	??_UpdateRabbitLEDs+2,w,c
  2339  001F68  22DE               	addwfc	16350,f,c
  2340  001F6A  500A               	movf	??_UpdateRabbitLEDs+3,w,c
  2341  001F6C  22DE               	addwfc	16350,f,c
  2342  001F6E  0012               	return	
  2343  001F70                     __end_of_UpdateRabbitLEDs:
  2344                           	opt stack 0
  2345                           
  2346 ;; *************** function _UpdateGunLED *****************
  2347 ;; Defined at:
  2348 ;;		line 89 in file "LED_Patterns.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;  gp              2    4[COMRAM] PTR struct GunPort
  2351 ;;		 -> main@Gun3(17), main@Gun2(17), main@Gun1(17), 
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;		None
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  1    wreg      void 
  2356 ;; Registers used:
  2357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2363 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2365 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2366 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2367 ;;Total ram usage:        7 bytes
  2368 ;; Hardware stack levels used:    1
  2369 ;; Hardware stack levels required when called:    4
  2370 ;; This function calls:
  2371 ;;		_GetCurrentTime
  2372 ;; This function is called by:
  2373 ;;		_main
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           	psect	text4
  2378  0019DA                     __ptext4:
  2379                           	opt stack 0
  2380  0019DA                     _UpdateGunLED:
  2381                           	opt stack 26
  2382                           
  2383                           ;LED_Patterns.c: 91: if (gp->GunRUN)
  2384                           
  2385                           ;incstack = 0
  2386  0019DA  EE20 F00F          	lfsr	2,15
  2387  0019DE  5005               	movf	UpdateGunLED@gp,w,c
  2388  0019E0  26D9               	addwf	16345,f,c
  2389  0019E2  5006               	movf	UpdateGunLED@gp+1,w,c
  2390  0019E4  22DA               	addwfc	16346,f,c
  2391  0019E6  50DF               	movf	16351,w,c
  2392  0019E8  B4D8               	btfsc	16344,2,c
  2393  0019EA  0012               	return	
  2394                           
  2395                           ;LED_Patterns.c: 92: {
  2396                           ;LED_Patterns.c: 93: if (gp->GunCnt <= GetCurrentTime())
  2397  0019EC  EE20 F00A          	lfsr	2,10
  2398  0019F0  5005               	movf	UpdateGunLED@gp,w,c
  2399  0019F2  26D9               	addwf	16345,f,c
  2400  0019F4  5006               	movf	UpdateGunLED@gp+1,w,c
  2401  0019F6  22DA               	addwfc	16346,f,c
  2402  0019F8  ECBA  F014         	call	_GetCurrentTime	;wreg free
  2403  0019FC  50DE               	movf	16350,w,c
  2404  0019FE  5C01               	subwf	?_GetCurrentTime,w,c
  2405  001A00  50DE               	movf	16350,w,c
  2406  001A02  5802               	subwfb	?_GetCurrentTime+1,w,c
  2407  001A04  50DE               	movf	16350,w,c
  2408  001A06  5803               	subwfb	?_GetCurrentTime+2,w,c
  2409  001A08  50DE               	movf	16350,w,c
  2410  001A0A  5804               	subwfb	?_GetCurrentTime+3,w,c
  2411  001A0C  A0D8               	btfss	16344,0,c
  2412  001A0E  0012               	return	
  2413                           
  2414                           ;LED_Patterns.c: 94: {
  2415                           ;LED_Patterns.c: 95: gp->A_B = (bool)!gp->A_B;
  2416  001A10  EE20 F010          	lfsr	2,16
  2417  001A14  5005               	movf	UpdateGunLED@gp,w,c
  2418  001A16  26D9               	addwf	16345,f,c
  2419  001A18  5006               	movf	UpdateGunLED@gp+1,w,c
  2420  001A1A  22DA               	addwfc	16346,f,c
  2421  001A1C  EE10 F010          	lfsr	1,16
  2422  001A20  5005               	movf	UpdateGunLED@gp,w,c
  2423  001A22  26E1               	addwf	16353,f,c
  2424  001A24  5006               	movf	UpdateGunLED@gp+1,w,c
  2425  001A26  22E2               	addwfc	16354,f,c
  2426  001A28  50E7               	movf	16359,w,c
  2427  001A2A  A4D8               	btfss	16344,2,c
  2428  001A2C  D002               	goto	u1310
  2429  001A2E  0E01               	movlw	1
  2430  001A30  D001               	goto	u1320
  2431  001A32                     u1310:
  2432  001A32  0E00               	movlw	0
  2433  001A34                     u1320:
  2434  001A34  6EDF               	movwf	16351,c
  2435                           
  2436                           ;LED_Patterns.c: 97: if (!gp->A_B)
  2437  001A36  EE20 F010          	lfsr	2,16
  2438  001A3A  5005               	movf	UpdateGunLED@gp,w,c
  2439  001A3C  26D9               	addwf	16345,f,c
  2440  001A3E  5006               	movf	UpdateGunLED@gp+1,w,c
  2441  001A40  22DA               	addwfc	16346,f,c
  2442  001A42  50DF               	movf	16351,w,c
  2443  001A44  A4D8               	btfss	16344,2,c
  2444  001A46  D096               	goto	l322
  2445                           
  2446                           ;LED_Patterns.c: 98: {
  2447                           ;LED_Patterns.c: 99: *gp->OutputPort |= (unsigned char)(1 << gp->GunLED);
  2448  001A48  EE20 F008          	lfsr	2,8
  2449  001A4C  5005               	movf	UpdateGunLED@gp,w,c
  2450  001A4E  26D9               	addwf	16345,f,c
  2451  001A50  5006               	movf	UpdateGunLED@gp+1,w,c
  2452  001A52  22DA               	addwfc	16346,f,c
  2453  001A54  50DF               	movf	16351,w,c
  2454  001A56  6E07               	movwf	??_UpdateGunLED& (0+255),c
  2455  001A58  0E01               	movlw	1
  2456  001A5A  6E08               	movwf	(??_UpdateGunLED+1)& (0+255),c
  2457  001A5C  2A07               	incf	??_UpdateGunLED,f,c
  2458  001A5E  D002               	goto	u1344
  2459  001A60                     u1345:
  2460  001A60  90D8               	bcf	16344,0,c
  2461  001A62  3608               	rlcf	??_UpdateGunLED+1,f,c
  2462  001A64                     u1344:
  2463  001A64  2E07               	decfsz	??_UpdateGunLED,f,c
  2464  001A66  D7FC               	goto	u1345
  2465  001A68  0060  F017  FFD9   	movff	UpdateGunLED@gp,16345
  2466  001A6E  0060  F01B  FFDA   	movff	UpdateGunLED@gp+1,16346
  2467  001A74  006F FF78  F009    	movff	16350,??_UpdateGunLED+2
  2468  001A7A  006F FF74  F00A    	movff	16349,??_UpdateGunLED+3
  2469  001A80  0060  F027  FFD9   	movff	??_UpdateGunLED+2,16345
  2470  001A86  0060  F02B  FFDA   	movff	??_UpdateGunLED+3,16346
  2471  001A8C  5008               	movf	??_UpdateGunLED+1,w,c
  2472  001A8E  12DF               	iorwf	16351,f,c
  2473                           
  2474                           ;LED_Patterns.c: 100: *gp->TracerPort |= (unsigned char)(1 << gp->TracerLED);
  2475  001A90  EE20 F009          	lfsr	2,9
  2476  001A94  5005               	movf	UpdateGunLED@gp,w,c
  2477  001A96  26D9               	addwf	16345,f,c
  2478  001A98  5006               	movf	UpdateGunLED@gp+1,w,c
  2479  001A9A  22DA               	addwfc	16346,f,c
  2480  001A9C  50DF               	movf	16351,w,c
  2481  001A9E  6E07               	movwf	??_UpdateGunLED& (0+255),c
  2482  001AA0  0E01               	movlw	1
  2483  001AA2  6E08               	movwf	(??_UpdateGunLED+1)& (0+255),c
  2484  001AA4  2A07               	incf	??_UpdateGunLED,f,c
  2485  001AA6  D002               	goto	u1354
  2486  001AA8                     u1355:
  2487  001AA8  90D8               	bcf	16344,0,c
  2488  001AAA  3608               	rlcf	??_UpdateGunLED+1,f,c
  2489  001AAC                     u1354:
  2490  001AAC  2E07               	decfsz	??_UpdateGunLED,f,c
  2491  001AAE  D7FC               	goto	u1355
  2492  001AB0  EE20 F004          	lfsr	2,4
  2493  001AB4  5005               	movf	UpdateGunLED@gp,w,c
  2494  001AB6  26D9               	addwf	16345,f,c
  2495  001AB8  5006               	movf	UpdateGunLED@gp+1,w,c
  2496  001ABA  22DA               	addwfc	16346,f,c
  2497  001ABC  006F FF78  F009    	movff	16350,??_UpdateGunLED+2
  2498  001AC2  006F FF74  F00A    	movff	16349,??_UpdateGunLED+3
  2499  001AC8  0060  F027  FFD9   	movff	??_UpdateGunLED+2,16345
  2500  001ACE  0060  F02B  FFDA   	movff	??_UpdateGunLED+3,16346
  2501  001AD4  5008               	movf	??_UpdateGunLED+1,w,c
  2502  001AD6  12DF               	iorwf	16351,f,c
  2503                           
  2504                           ;LED_Patterns.c: 102: if(gp->ShotsCnt == 8)
  2505  001AD8  EE20 F00E          	lfsr	2,14
  2506  001ADC  5005               	movf	UpdateGunLED@gp,w,c
  2507  001ADE  26D9               	addwf	16345,f,c
  2508  001AE0  5006               	movf	UpdateGunLED@gp+1,w,c
  2509  001AE2  22DA               	addwfc	16346,f,c
  2510  001AE4  0E08               	movlw	8
  2511  001AE6  18DE               	xorwf	16350,w,c
  2512  001AE8  A4D8               	btfss	16344,2,c
  2513  001AEA  D006               	goto	l323
  2514                           
  2515                           ;LED_Patterns.c: 103: {
  2516                           ;LED_Patterns.c: 104: gp->GunCnt += GUN_SPACE_TIME_MS;
  2517  001AEC  0E1D               	movlw	low _GUN_SPACE_TIME_MS
  2518  001AEE  6EF6               	movwf	16374,c
  2519  001AF0                     	if	1	;There is more than 1 active tblptr byte
  2520  001AF0  0E10               	movlw	high _GUN_SPACE_TIME_MS
  2521  001AF2  6EF7               	movwf	16375,c
  2522  001AF4                     	endif
  2523  001AF4                     	if	1	;There are 3 active tblptr bytes
  2524  001AF4  0E00               	movlw	low (_GUN_SPACE_TIME_MS shr (0+16))
  2525  001AF6  D005               	goto	L2
  2526  001AF8                     l323:
  2527                           
  2528                           ;LED_Patterns.c: 106: else
  2529                           ;LED_Patterns.c: 107: {
  2530                           ;LED_Patterns.c: 108: gp->GunCnt += GUN_OFF_TIME_MS;
  2531  001AF8  0E21               	movlw	low _GUN_OFF_TIME_MS
  2532  001AFA  6EF6               	movwf	16374,c
  2533  001AFC                     	if	1	;There is more than 1 active tblptr byte
  2534  001AFC  0E10               	movlw	high _GUN_OFF_TIME_MS
  2535  001AFE  6EF7               	movwf	16375,c
  2536  001B00                     	endif
  2537  001B00                     	if	1	;There are 3 active tblptr bytes
  2538  001B00  0E00               	movlw	low (_GUN_OFF_TIME_MS shr (0+16))
  2539  001B02                     L2:
  2540  001B02  6EF8               	movwf	16376,c
  2541  001B04                     	endif
  2542  001B04  0009               	tblrd		*+
  2543  001B06  006F FFD4  F007    	movff	16373,??_UpdateGunLED
  2544  001B0C  0009               	tblrd		*+
  2545  001B0E  006F FFD4  F008    	movff	16373,??_UpdateGunLED+1
  2546  001B14  0009               	tblrd		*+
  2547  001B16  006F FFD4  F009    	movff	16373,??_UpdateGunLED+2
  2548  001B1C  0009               	tblrd		*+
  2549  001B1E  006F FFD4  F00A    	movff	16373,??_UpdateGunLED+3
  2550  001B24  EE20 F00A          	lfsr	2,10
  2551  001B28  5005               	movf	UpdateGunLED@gp,w,c
  2552  001B2A  26D9               	addwf	16345,f,c
  2553  001B2C  5006               	movf	UpdateGunLED@gp+1,w,c
  2554  001B2E  22DA               	addwfc	16346,f,c
  2555  001B30  5007               	movf	??_UpdateGunLED,w,c
  2556  001B32  26DE               	addwf	16350,f,c
  2557  001B34  5008               	movf	??_UpdateGunLED+1,w,c
  2558  001B36  22DE               	addwfc	16350,f,c
  2559  001B38  5009               	movf	??_UpdateGunLED+2,w,c
  2560  001B3A  22DE               	addwfc	16350,f,c
  2561  001B3C  500A               	movf	??_UpdateGunLED+3,w,c
  2562  001B3E  22DE               	addwfc	16350,f,c
  2563                           
  2564                           ;LED_Patterns.c: 109: }
  2565                           ;LED_Patterns.c: 111: gp->ShotsCnt++;
  2566  001B40  EE20 F00E          	lfsr	2,14
  2567  001B44  5005               	movf	UpdateGunLED@gp,w,c
  2568  001B46  26D9               	addwf	16345,f,c
  2569  001B48  5006               	movf	UpdateGunLED@gp+1,w,c
  2570  001B4A  22DA               	addwfc	16346,f,c
  2571  001B4C  2ADF               	incf	16351,f,c
  2572                           
  2573                           ;LED_Patterns.c: 113: if (gp->ShotsCnt == 10)
  2574  001B4E  EE20 F00E          	lfsr	2,14
  2575  001B52  5005               	movf	UpdateGunLED@gp,w,c
  2576  001B54  26D9               	addwf	16345,f,c
  2577  001B56  5006               	movf	UpdateGunLED@gp+1,w,c
  2578  001B58  22DA               	addwfc	16346,f,c
  2579  001B5A  0E0A               	movlw	10
  2580  001B5C  18DE               	xorwf	16350,w,c
  2581  001B5E  A4D8               	btfss	16344,2,c
  2582  001B60  0012               	return	
  2583                           
  2584                           ;LED_Patterns.c: 114: {
  2585                           ;LED_Patterns.c: 115: gp->ShotsCnt = 0;
  2586  001B62  EE20 F00E          	lfsr	2,14
  2587  001B66  5005               	movf	UpdateGunLED@gp,w,c
  2588  001B68  26D9               	addwf	16345,f,c
  2589  001B6A  5006               	movf	UpdateGunLED@gp+1,w,c
  2590  001B6C  22DA               	addwfc	16346,f,c
  2591  001B6E  0E00               	movlw	0
  2592  001B70  6EDF               	movwf	16351,c
  2593                           
  2594                           ;LED_Patterns.c: 116: }
  2595                           ;LED_Patterns.c: 118: }
  2596  001B72  0012               	return	
  2597  001B74                     l322:
  2598                           
  2599                           ;LED_Patterns.c: 119: else
  2600                           ;LED_Patterns.c: 120: {
  2601                           ;LED_Patterns.c: 121: if (gp->ShotsCnt < 9)
  2602  001B74  EE20 F00E          	lfsr	2,14
  2603  001B78  5005               	movf	UpdateGunLED@gp,w,c
  2604  001B7A  26D9               	addwf	16345,f,c
  2605  001B7C  5006               	movf	UpdateGunLED@gp+1,w,c
  2606  001B7E  22DA               	addwfc	16346,f,c
  2607  001B80  0E09               	movlw	9
  2608  001B82  60DF               	cpfslt	16351,c
  2609  001B84  D070               	goto	l327
  2610                           
  2611                           ;LED_Patterns.c: 122: {
  2612                           ;LED_Patterns.c: 123: *gp->OutputPort &= (unsigned char)~(1 << gp->GunLED);
  2613  001B86  EE20 F008          	lfsr	2,8
  2614  001B8A  5005               	movf	UpdateGunLED@gp,w,c
  2615  001B8C  26D9               	addwf	16345,f,c
  2616  001B8E  5006               	movf	UpdateGunLED@gp+1,w,c
  2617  001B90  22DA               	addwfc	16346,f,c
  2618  001B92  50DF               	movf	16351,w,c
  2619  001B94  6E07               	movwf	??_UpdateGunLED& (0+255),c
  2620  001B96  0E01               	movlw	1
  2621  001B98  6E08               	movwf	(??_UpdateGunLED+1)& (0+255),c
  2622  001B9A  2A07               	incf	??_UpdateGunLED,f,c
  2623  001B9C  D002               	goto	u1394
  2624  001B9E                     u1395:
  2625  001B9E  90D8               	bcf	16344,0,c
  2626  001BA0  3608               	rlcf	??_UpdateGunLED+1,f,c
  2627  001BA2                     u1394:
  2628  001BA2  2E07               	decfsz	??_UpdateGunLED,f,c
  2629  001BA4  D7FC               	goto	u1395
  2630  001BA6  5008               	movf	??_UpdateGunLED+1,w,c
  2631  001BA8  0AFF               	xorlw	255
  2632  001BAA  6E09               	movwf	(??_UpdateGunLED+2)& (0+255),c
  2633  001BAC  0060  F017  FFD9   	movff	UpdateGunLED@gp,16345
  2634  001BB2  0060  F01B  FFDA   	movff	UpdateGunLED@gp+1,16346
  2635  001BB8  006F FF78  F00A    	movff	16350,??_UpdateGunLED+3
  2636  001BBE  006F FF74  F00B    	movff	16349,??_UpdateGunLED+4
  2637  001BC4  0060  F02B  FFD9   	movff	??_UpdateGunLED+3,16345
  2638  001BCA  0060  F02F  FFDA   	movff	??_UpdateGunLED+4,16346
  2639  001BD0  5009               	movf	??_UpdateGunLED+2,w,c
  2640  001BD2  16DF               	andwf	16351,f,c
  2641                           
  2642                           ;LED_Patterns.c: 124: *gp->TracerPort |= (unsigned char)(1 << gp->TracerLED);
  2643  001BD4  EE20 F009          	lfsr	2,9
  2644  001BD8  5005               	movf	UpdateGunLED@gp,w,c
  2645  001BDA  26D9               	addwf	16345,f,c
  2646  001BDC  5006               	movf	UpdateGunLED@gp+1,w,c
  2647  001BDE  22DA               	addwfc	16346,f,c
  2648  001BE0  50DF               	movf	16351,w,c
  2649  001BE2  6E07               	movwf	??_UpdateGunLED& (0+255),c
  2650  001BE4  0E01               	movlw	1
  2651  001BE6  6E08               	movwf	(??_UpdateGunLED+1)& (0+255),c
  2652  001BE8  2A07               	incf	??_UpdateGunLED,f,c
  2653  001BEA  D002               	goto	u1404
  2654  001BEC                     u1405:
  2655  001BEC  90D8               	bcf	16344,0,c
  2656  001BEE  3608               	rlcf	??_UpdateGunLED+1,f,c
  2657  001BF0                     u1404:
  2658  001BF0  2E07               	decfsz	??_UpdateGunLED,f,c
  2659  001BF2  D7FC               	goto	u1405
  2660  001BF4  EE20 F004          	lfsr	2,4
  2661  001BF8  5005               	movf	UpdateGunLED@gp,w,c
  2662  001BFA  26D9               	addwf	16345,f,c
  2663  001BFC  5006               	movf	UpdateGunLED@gp+1,w,c
  2664  001BFE  22DA               	addwfc	16346,f,c
  2665  001C00  006F FF78  F009    	movff	16350,??_UpdateGunLED+2
  2666  001C06  006F FF74  F00A    	movff	16349,??_UpdateGunLED+3
  2667  001C0C  0060  F027  FFD9   	movff	??_UpdateGunLED+2,16345
  2668  001C12  0060  F02B  FFDA   	movff	??_UpdateGunLED+3,16346
  2669  001C18  5008               	movf	??_UpdateGunLED+1,w,c
  2670  001C1A  12DF               	iorwf	16351,f,c
  2671                           
  2672                           ;LED_Patterns.c: 125: gp->GunCnt += GUN_ON_TIME_MS;
  2673  001C1C  0E25               	movlw	low _GUN_ON_TIME_MS
  2674  001C1E  6EF6               	movwf	16374,c
  2675  001C20                     	if	1	;There is more than 1 active tblptr byte
  2676  001C20  0E10               	movlw	high _GUN_ON_TIME_MS
  2677  001C22  6EF7               	movwf	16375,c
  2678  001C24                     	endif
  2679  001C24                     	if	1	;There are 3 active tblptr bytes
  2680  001C24  0E00               	movlw	low (_GUN_ON_TIME_MS shr (0+16))
  2681  001C26  6EF8               	movwf	16376,c
  2682  001C28                     	endif
  2683  001C28  0009               	tblrd		*+
  2684  001C2A  006F FFD4  F007    	movff	16373,??_UpdateGunLED
  2685  001C30  0009               	tblrd		*+
  2686  001C32  006F FFD4  F008    	movff	16373,??_UpdateGunLED+1
  2687  001C38  0009               	tblrd		*+
  2688  001C3A  006F FFD4  F009    	movff	16373,??_UpdateGunLED+2
  2689  001C40  0009               	tblrd		*+
  2690  001C42  006F FFD4  F00A    	movff	16373,??_UpdateGunLED+3
  2691  001C48  EE20 F00A          	lfsr	2,10
  2692  001C4C  5005               	movf	UpdateGunLED@gp,w,c
  2693  001C4E  26D9               	addwf	16345,f,c
  2694  001C50  5006               	movf	UpdateGunLED@gp+1,w,c
  2695  001C52  22DA               	addwfc	16346,f,c
  2696  001C54  5007               	movf	??_UpdateGunLED,w,c
  2697  001C56  26DE               	addwf	16350,f,c
  2698  001C58  5008               	movf	??_UpdateGunLED+1,w,c
  2699  001C5A  22DE               	addwfc	16350,f,c
  2700  001C5C  5009               	movf	??_UpdateGunLED+2,w,c
  2701  001C5E  22DE               	addwfc	16350,f,c
  2702  001C60  500A               	movf	??_UpdateGunLED+3,w,c
  2703  001C62  22DE               	addwfc	16350,f,c
  2704                           
  2705                           ;LED_Patterns.c: 127: }
  2706  001C64  0012               	return	
  2707  001C66                     l327:
  2708                           
  2709                           ;LED_Patterns.c: 128: else if(gp->ShotsCnt == 9)
  2710  001C66  EE20 F00E          	lfsr	2,14
  2711  001C6A  5005               	movf	UpdateGunLED@gp,w,c
  2712  001C6C  26D9               	addwf	16345,f,c
  2713  001C6E  5006               	movf	UpdateGunLED@gp+1,w,c
  2714  001C70  22DA               	addwfc	16346,f,c
  2715  001C72  0E09               	movlw	9
  2716  001C74  18DE               	xorwf	16350,w,c
  2717  001C76  A4D8               	btfss	16344,2,c
  2718  001C78  0012               	return	
  2719                           
  2720                           ;LED_Patterns.c: 129: {
  2721                           ;LED_Patterns.c: 130: *gp->TracerPort &= (unsigned char)~(1 << gp->TracerLED);
  2722  001C7A  EE20 F009          	lfsr	2,9
  2723  001C7E  5005               	movf	UpdateGunLED@gp,w,c
  2724  001C80  26D9               	addwf	16345,f,c
  2725  001C82  5006               	movf	UpdateGunLED@gp+1,w,c
  2726  001C84  22DA               	addwfc	16346,f,c
  2727  001C86  50DF               	movf	16351,w,c
  2728  001C88  6E07               	movwf	??_UpdateGunLED& (0+255),c
  2729  001C8A  0E01               	movlw	1
  2730  001C8C  6E08               	movwf	(??_UpdateGunLED+1)& (0+255),c
  2731  001C8E  2A07               	incf	??_UpdateGunLED,f,c
  2732  001C90  D002               	goto	u1424
  2733  001C92                     u1425:
  2734  001C92  90D8               	bcf	16344,0,c
  2735  001C94  3608               	rlcf	??_UpdateGunLED+1,f,c
  2736  001C96                     u1424:
  2737  001C96  2E07               	decfsz	??_UpdateGunLED,f,c
  2738  001C98  D7FC               	goto	u1425
  2739  001C9A  5008               	movf	??_UpdateGunLED+1,w,c
  2740  001C9C  0AFF               	xorlw	255
  2741  001C9E  6E09               	movwf	(??_UpdateGunLED+2)& (0+255),c
  2742  001CA0  EE20 F004          	lfsr	2,4
  2743  001CA4  5005               	movf	UpdateGunLED@gp,w,c
  2744  001CA6  26D9               	addwf	16345,f,c
  2745  001CA8  5006               	movf	UpdateGunLED@gp+1,w,c
  2746  001CAA  22DA               	addwfc	16346,f,c
  2747  001CAC  006F FF78  F00A    	movff	16350,??_UpdateGunLED+3
  2748  001CB2  006F FF74  F00B    	movff	16349,??_UpdateGunLED+4
  2749  001CB8  0060  F02B  FFD9   	movff	??_UpdateGunLED+3,16345
  2750  001CBE  0060  F02F  FFDA   	movff	??_UpdateGunLED+4,16346
  2751  001CC4  5009               	movf	??_UpdateGunLED+2,w,c
  2752  001CC6  16DF               	andwf	16351,f,c
  2753                           
  2754                           ;LED_Patterns.c: 131: *gp->OutputPort |= (unsigned char)(1 << gp->GunLED);
  2755  001CC8  EE20 F008          	lfsr	2,8
  2756  001CCC  5005               	movf	UpdateGunLED@gp,w,c
  2757  001CCE  26D9               	addwf	16345,f,c
  2758  001CD0  5006               	movf	UpdateGunLED@gp+1,w,c
  2759  001CD2  22DA               	addwfc	16346,f,c
  2760  001CD4  50DF               	movf	16351,w,c
  2761  001CD6  6E07               	movwf	??_UpdateGunLED& (0+255),c
  2762  001CD8  0E01               	movlw	1
  2763  001CDA  6E08               	movwf	(??_UpdateGunLED+1)& (0+255),c
  2764  001CDC  2A07               	incf	??_UpdateGunLED,f,c
  2765  001CDE  D002               	goto	u1434
  2766  001CE0                     u1435:
  2767  001CE0  90D8               	bcf	16344,0,c
  2768  001CE2  3608               	rlcf	??_UpdateGunLED+1,f,c
  2769  001CE4                     u1434:
  2770  001CE4  2E07               	decfsz	??_UpdateGunLED,f,c
  2771  001CE6  D7FC               	goto	u1435
  2772  001CE8  0060  F017  FFD9   	movff	UpdateGunLED@gp,16345
  2773  001CEE  0060  F01B  FFDA   	movff	UpdateGunLED@gp+1,16346
  2774  001CF4  006F FF78  F009    	movff	16350,??_UpdateGunLED+2
  2775  001CFA  006F FF74  F00A    	movff	16349,??_UpdateGunLED+3
  2776  001D00  0060  F027  FFD9   	movff	??_UpdateGunLED+2,16345
  2777  001D06  0060  F02B  FFDA   	movff	??_UpdateGunLED+3,16346
  2778  001D0C  5008               	movf	??_UpdateGunLED+1,w,c
  2779  001D0E  12DF               	iorwf	16351,f,c
  2780                           
  2781                           ;LED_Patterns.c: 132: gp->GunCnt += GUN_ON_TIME_MS;
  2782  001D10  0E25               	movlw	low _GUN_ON_TIME_MS
  2783  001D12  6EF6               	movwf	16374,c
  2784  001D14                     	if	1	;There is more than 1 active tblptr byte
  2785  001D14  0E10               	movlw	high _GUN_ON_TIME_MS
  2786  001D16  6EF7               	movwf	16375,c
  2787  001D18                     	endif
  2788  001D18                     	if	1	;There are 3 active tblptr bytes
  2789  001D18  0E00               	movlw	low (_GUN_ON_TIME_MS shr (0+16))
  2790  001D1A  6EF8               	movwf	16376,c
  2791  001D1C                     	endif
  2792  001D1C  0009               	tblrd		*+
  2793  001D1E  006F FFD4  F007    	movff	16373,??_UpdateGunLED
  2794  001D24  0009               	tblrd		*+
  2795  001D26  006F FFD4  F008    	movff	16373,??_UpdateGunLED+1
  2796  001D2C  0009               	tblrd		*+
  2797  001D2E  006F FFD4  F009    	movff	16373,??_UpdateGunLED+2
  2798  001D34  0009               	tblrd		*+
  2799  001D36  006F FFD4  F00A    	movff	16373,??_UpdateGunLED+3
  2800  001D3C  EE20 F00A          	lfsr	2,10
  2801  001D40  5005               	movf	UpdateGunLED@gp,w,c
  2802  001D42  26D9               	addwf	16345,f,c
  2803  001D44  5006               	movf	UpdateGunLED@gp+1,w,c
  2804  001D46  22DA               	addwfc	16346,f,c
  2805  001D48  5007               	movf	??_UpdateGunLED,w,c
  2806  001D4A  26DE               	addwf	16350,f,c
  2807  001D4C  5008               	movf	??_UpdateGunLED+1,w,c
  2808  001D4E  22DE               	addwfc	16350,f,c
  2809  001D50  5009               	movf	??_UpdateGunLED+2,w,c
  2810  001D52  22DE               	addwfc	16350,f,c
  2811  001D54  500A               	movf	??_UpdateGunLED+3,w,c
  2812  001D56  22DE               	addwfc	16350,f,c
  2813  001D58  0012               	return	
  2814  001D5A                     __end_of_UpdateGunLED:
  2815                           	opt stack 0
  2816                           
  2817 ;; *************** function _StopWatch_Initialize *****************
  2818 ;; Defined at:
  2819 ;;		line 12 in file "stop_watch.c"
  2820 ;; Parameters:    Size  Location     Type
  2821 ;;		None
  2822 ;; Auto vars:     Size  Location     Type
  2823 ;;		None
  2824 ;; Return value:  Size  Location     Type
  2825 ;;                  1    wreg      void 
  2826 ;; Registers used:
  2827 ;;		wreg, status,2, status,0, cstack
  2828 ;; Tracked objects:
  2829 ;;		On entry : 0/0
  2830 ;;		On exit  : 0/0
  2831 ;;		Unchanged: 0/0
  2832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2837 ;;Total ram usage:        0 bytes
  2838 ;; Hardware stack levels used:    1
  2839 ;; Hardware stack levels required when called:    5
  2840 ;; This function calls:
  2841 ;;		_TMR0_Initialize
  2842 ;;		_TMR0_SetInterruptHandler
  2843 ;;		_TMR0_StopTimer
  2844 ;; This function is called by:
  2845 ;;		_main
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           	psect	text5
  2850  0028D0                     __ptext5:
  2851                           	opt stack 0
  2852  0028D0                     _StopWatch_Initialize:
  2853                           	opt stack 25
  2854                           
  2855                           ;stop_watch.c: 14: TMR0_StopTimer();
  2856                           
  2857                           ;incstack = 0
  2858  0028D0  ECE7  F014         	call	_TMR0_StopTimer	;wreg free
  2859                           
  2860                           ;stop_watch.c: 16: globalTime = 0;
  2861  0028D4  0E00               	movlw	0
  2862  0028D6  6E2A               	movwf	_globalTime,c	;volatile
  2863  0028D8  0E00               	movlw	0
  2864  0028DA  6E2B               	movwf	_globalTime+1,c	;volatile
  2865  0028DC  0E00               	movlw	0
  2866  0028DE  6E2C               	movwf	_globalTime+2,c	;volatile
  2867  0028E0  0E00               	movlw	0
  2868  0028E2  6E2D               	movwf	_globalTime+3,c	;volatile
  2869                           
  2870                           ;stop_watch.c: 18: TMR0_Initialize();
  2871  0028E4  EC51  F014         	call	_TMR0_Initialize	;wreg free
  2872                           
  2873                           ;stop_watch.c: 20: TMR0_SetInterruptHandler(StopWatchISR);
  2874  0028E8  0EC0               	movlw	low _StopWatchISR
  2875  0028EA  6E01               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
  2876  0028EC  0E29               	movlw	high _StopWatchISR
  2877  0028EE  6E02               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
  2878  0028F0  ECD9  F014         	call	_TMR0_SetInterruptHandler	;wreg free
  2879  0028F4  0012               	return		;funcret
  2880  0028F6                     __end_of_StopWatch_Initialize:
  2881                           	opt stack 0
  2882                           
  2883 ;; *************** function _TMR0_StopTimer *****************
  2884 ;; Defined at:
  2885 ;;		line 92 in file "mcc_generated_files/tmr0.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;		None
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;		None
  2890 ;; Return value:  Size  Location     Type
  2891 ;;                  1    wreg      void 
  2892 ;; Registers used:
  2893 ;;		None
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2903 ;;Total ram usage:        0 bytes
  2904 ;; Hardware stack levels used:    1
  2905 ;; Hardware stack levels required when called:    3
  2906 ;; This function calls:
  2907 ;;		Nothing
  2908 ;; This function is called by:
  2909 ;;		_StopWatch_Initialize
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           	psect	text6
  2914  0029CE                     __ptext6:
  2915                           	opt stack 0
  2916  0029CE                     _TMR0_StopTimer:
  2917                           	opt stack 26
  2918                           
  2919                           ;tmr0.c: 95: T0CON0bits.T0EN = 0;
  2920                           
  2921                           ;incstack = 0
  2922  0029CE  013F               	movlb	63	; () banked
  2923  0029D0  9FB8               	bcf	184,7,b	;volatile
  2924                           
  2925                           ; BSR set to: 63
  2926  0029D2  0012               	return		;funcret
  2927  0029D4                     __end_of_TMR0_StopTimer:
  2928                           	opt stack 0
  2929                           
  2930 ;; *************** function _StopSyncStrobes *****************
  2931 ;; Defined at:
  2932 ;;		line 204 in file "LED_Patterns.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;  SLED_A          2    6[COMRAM] PTR struct StrobeLED
  2935 ;;		 -> main@GenStrobe(13), 
  2936 ;;  SLED_B          2    8[COMRAM] PTR struct StrobeLED
  2937 ;;		 -> main@ACStrobe(13), 
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;		None
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  1    wreg      void 
  2942 ;; Registers used:
  2943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2949 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2952 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2953 ;;Total ram usage:        4 bytes
  2954 ;; Hardware stack levels used:    1
  2955 ;; Hardware stack levels required when called:    4
  2956 ;; This function calls:
  2957 ;;		_StopStrobe
  2958 ;; This function is called by:
  2959 ;;		_main
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           	psect	text7
  2964  0028F6                     __ptext7:
  2965                           	opt stack 0
  2966  0028F6                     _StopSyncStrobes:
  2967                           	opt stack 26
  2968                           
  2969                           ;LED_Patterns.c: 206: StopStrobe(SLED_A);
  2970                           
  2971                           ; BSR set to: 63
  2972                           ;incstack = 0
  2973  0028F6  0060  F01C  F001   	movff	StopSyncStrobes@SLED_A,StopStrobe@SLED
  2974  0028FC  0060  F020  F002   	movff	StopSyncStrobes@SLED_A+1,StopStrobe@SLED+1
  2975  002902  ECF2  F013         	call	_StopStrobe	;wreg free
  2976                           
  2977                           ;LED_Patterns.c: 207: StopStrobe(SLED_B);
  2978  002906  0060  F024  F001   	movff	StopSyncStrobes@SLED_B,StopStrobe@SLED
  2979  00290C  0060  F028  F002   	movff	StopSyncStrobes@SLED_B+1,StopStrobe@SLED+1
  2980  002912  ECF2  F013         	call	_StopStrobe	;wreg free
  2981  002916  0012               	return		;funcret
  2982  002918                     __end_of_StopSyncStrobes:
  2983                           	opt stack 0
  2984                           
  2985 ;; *************** function _StopRabbitLights *****************
  2986 ;; Defined at:
  2987 ;;		line 399 in file "LED_Patterns.c"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;  rp              2    0[COMRAM] PTR struct RabbitPort
  2990 ;;		 -> main@Rabbit(13), 
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;		None
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  1    wreg      void 
  2995 ;; Registers used:
  2996 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3002 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3004 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3005 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3006 ;;Total ram usage:        6 bytes
  3007 ;; Hardware stack levels used:    1
  3008 ;; Hardware stack levels required when called:    3
  3009 ;; This function calls:
  3010 ;;		Nothing
  3011 ;; This function is called by:
  3012 ;;		_main
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015                           
  3016                           	psect	text8
  3017  002778                     __ptext8:
  3018                           	opt stack 0
  3019  002778                     _StopRabbitLights:
  3020                           	opt stack 27
  3021                           
  3022                           ;LED_Patterns.c: 401: if (rp->RabbitRUN)
  3023                           
  3024                           ;incstack = 0
  3025  002778  EE20 F00B          	lfsr	2,11
  3026  00277C  5001               	movf	StopRabbitLights@rp,w,c
  3027  00277E  26D9               	addwf	16345,f,c
  3028  002780  5002               	movf	StopRabbitLights@rp+1,w,c
  3029  002782  22DA               	addwfc	16346,f,c
  3030  002784  50DF               	movf	16351,w,c
  3031  002786  B4D8               	btfsc	16344,2,c
  3032  002788  0012               	return	
  3033                           
  3034                           ;LED_Patterns.c: 402: {
  3035                           ;LED_Patterns.c: 403: rp->RabbitRUN = 0;
  3036  00278A  EE20 F00B          	lfsr	2,11
  3037  00278E  5001               	movf	StopRabbitLights@rp,w,c
  3038  002790  26D9               	addwf	16345,f,c
  3039  002792  5002               	movf	StopRabbitLights@rp+1,w,c
  3040  002794  22DA               	addwfc	16346,f,c
  3041  002796  0E00               	movlw	0
  3042  002798  6EDF               	movwf	16351,c
  3043                           
  3044                           ;LED_Patterns.c: 404: *rp->OutputPort |= (unsigned char)(0x0F << rp->StartingLED);
  3045  00279A  EE20 F004          	lfsr	2,4
  3046  00279E  5001               	movf	StopRabbitLights@rp,w,c
  3047  0027A0  26D9               	addwf	16345,f,c
  3048  0027A2  5002               	movf	StopRabbitLights@rp+1,w,c
  3049  0027A4  22DA               	addwfc	16346,f,c
  3050  0027A6  50DF               	movf	16351,w,c
  3051  0027A8  6E03               	movwf	??_StopRabbitLights& (0+255),c
  3052  0027AA  0E0F               	movlw	15
  3053  0027AC  6E04               	movwf	(??_StopRabbitLights+1)& (0+255),c
  3054  0027AE  2A03               	incf	??_StopRabbitLights,f,c
  3055  0027B0  D002               	goto	u1284
  3056  0027B2                     u1285:
  3057  0027B2  90D8               	bcf	16344,0,c
  3058  0027B4  3604               	rlcf	??_StopRabbitLights+1,f,c
  3059  0027B6                     u1284:
  3060  0027B6  2E03               	decfsz	??_StopRabbitLights,f,c
  3061  0027B8  D7FC               	goto	u1285
  3062  0027BA  0060  F007  FFD9   	movff	StopRabbitLights@rp,16345
  3063  0027C0  0060  F00B  FFDA   	movff	StopRabbitLights@rp+1,16346
  3064  0027C6  006F FF78  F005    	movff	16350,??_StopRabbitLights+2
  3065  0027CC  006F FF74  F006    	movff	16349,??_StopRabbitLights+3
  3066  0027D2  0060  F017  FFD9   	movff	??_StopRabbitLights+2,16345
  3067  0027D8  0060  F01B  FFDA   	movff	??_StopRabbitLights+3,16346
  3068  0027DE  5004               	movf	??_StopRabbitLights+1,w,c
  3069  0027E0  12DF               	iorwf	16351,f,c
  3070  0027E2  0012               	return	
  3071  0027E4                     __end_of_StopRabbitLights:
  3072                           	opt stack 0
  3073                           
  3074 ;; *************** function _StartSyncStrobes *****************
  3075 ;; Defined at:
  3076 ;;		line 171 in file "LED_Patterns.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;  SLED_A          2   16[COMRAM] PTR struct StrobeLED
  3079 ;;		 -> main@GenStrobe(13), 
  3080 ;;  SLED_B          2   18[COMRAM] PTR struct StrobeLED
  3081 ;;		 -> main@ACStrobe(13), 
  3082 ;;  delay           4   20[COMRAM] unsigned long 
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;		None
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      void 
  3087 ;; Registers used:
  3088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3094 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3096 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3097 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3098 ;;Total ram usage:       16 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; Hardware stack levels required when called:    5
  3101 ;; This function calls:
  3102 ;;		_StartStrobe
  3103 ;;		_StopStrobe
  3104 ;; This function is called by:
  3105 ;;		_main
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109                           	psect	text9
  3110  002214                     __ptext9:
  3111                           	opt stack 0
  3112  002214                     _StartSyncStrobes:
  3113                           	opt stack 25
  3114                           
  3115                           ;LED_Patterns.c: 174: StartStrobe(SLED_A);
  3116                           
  3117                           ;incstack = 0
  3118  002214  0060  F044  F007   	movff	StartSyncStrobes@SLED_A,StartStrobe@SLED
  3119  00221A  0060  F048  F008   	movff	StartSyncStrobes@SLED_A+1,StartStrobe@SLED+1
  3120  002220  ECA0  F011         	call	_StartStrobe	;wreg free
  3121                           
  3122                           ;LED_Patterns.c: 176: if (delay < 10)
  3123  002224  5018               	movf	StartSyncStrobes@delay+3,w,c
  3124  002226  1017               	iorwf	StartSyncStrobes@delay+2,w,c
  3125  002228  1016               	iorwf	StartSyncStrobes@delay+1,w,c
  3126  00222A  E10C               	bnz	l1642
  3127  00222C  0E0A               	movlw	10
  3128  00222E  5C15               	subwf	StartSyncStrobes@delay,w,c
  3129  002230  B0D8               	btfsc	16344,0,c
  3130  002232  D008               	goto	l341
  3131                           
  3132                           ;LED_Patterns.c: 177: delay = 10;
  3133  002234  0E0A               	movlw	10
  3134  002236  6E15               	movwf	StartSyncStrobes@delay,c
  3135  002238  0E00               	movlw	0
  3136  00223A  6E16               	movwf	StartSyncStrobes@delay+1,c
  3137  00223C  0E00               	movlw	0
  3138  00223E  6E17               	movwf	StartSyncStrobes@delay+2,c
  3139  002240  0E00               	movlw	0
  3140  002242  6E18               	movwf	StartSyncStrobes@delay+3,c
  3141  002244                     l341:
  3142  002244                     l1642:
  3143                           
  3144                           ;LED_Patterns.c: 185: if (SLED_B->StrobeRUN)
  3145  002244  EE20 F00A          	lfsr	2,10
  3146  002248  5013               	movf	StartSyncStrobes@SLED_B,w,c
  3147  00224A  26D9               	addwf	16345,f,c
  3148  00224C  5014               	movf	StartSyncStrobes@SLED_B+1,w,c
  3149  00224E  22DA               	addwfc	16346,f,c
  3150  002250  50DF               	movf	16351,w,c
  3151  002252  B4D8               	btfsc	16344,2,c
  3152  002254  D008               	goto	l342
  3153                           
  3154                           ;LED_Patterns.c: 186: StopStrobe(SLED_B);
  3155  002256  0060  F04C  F001   	movff	StartSyncStrobes@SLED_B,StopStrobe@SLED
  3156  00225C  0060  F050  F002   	movff	StartSyncStrobes@SLED_B+1,StopStrobe@SLED+1
  3157  002262  ECF2  F013         	call	_StopStrobe	;wreg free
  3158  002266                     l342:
  3159                           
  3160                           ;LED_Patterns.c: 188: SLED_B->StrobeCnt = SLED_A->StrobeCnt + delay;
  3161  002266  EE20 F006          	lfsr	2,6
  3162  00226A  5011               	movf	StartSyncStrobes@SLED_A,w,c
  3163  00226C  26D9               	addwf	16345,f,c
  3164  00226E  5012               	movf	StartSyncStrobes@SLED_A+1,w,c
  3165  002270  22DA               	addwfc	16346,f,c
  3166  002272  006F FF78  F019    	movff	16350,??_StartSyncStrobes
  3167  002278  006F FF78  F01A    	movff	16350,??_StartSyncStrobes+1
  3168  00227E  006F FF78  F01B    	movff	16350,??_StartSyncStrobes+2
  3169  002284  006F FF78  F01C    	movff	16350,??_StartSyncStrobes+3
  3170  00228A  5015               	movf	StartSyncStrobes@delay,w,c
  3171  00228C  2419               	addwf	??_StartSyncStrobes,w,c
  3172  00228E  6E1D               	movwf	(??_StartSyncStrobes+4)& (0+255),c
  3173  002290  5016               	movf	StartSyncStrobes@delay+1,w,c
  3174  002292  201A               	addwfc	??_StartSyncStrobes+1,w,c
  3175  002294  6E1E               	movwf	(??_StartSyncStrobes+5)& (0+255),c
  3176  002296  5017               	movf	StartSyncStrobes@delay+2,w,c
  3177  002298  201B               	addwfc	??_StartSyncStrobes+2,w,c
  3178  00229A  6E1F               	movwf	(??_StartSyncStrobes+6)& (0+255),c
  3179  00229C  5018               	movf	StartSyncStrobes@delay+3,w,c
  3180  00229E  201C               	addwfc	??_StartSyncStrobes+3,w,c
  3181  0022A0  6E20               	movwf	(??_StartSyncStrobes+7)& (0+255),c
  3182  0022A2  EE20 F006          	lfsr	2,6
  3183  0022A6  5013               	movf	StartSyncStrobes@SLED_B,w,c
  3184  0022A8  26D9               	addwf	16345,f,c
  3185  0022AA  5014               	movf	StartSyncStrobes@SLED_B+1,w,c
  3186  0022AC  22DA               	addwfc	16346,f,c
  3187  0022AE  0060  F077  FFDE   	movff	??_StartSyncStrobes+4,16350
  3188  0022B4  0060  F07B  FFDE   	movff	??_StartSyncStrobes+5,16350
  3189  0022BA  0060  F07F  FFDE   	movff	??_StartSyncStrobes+6,16350
  3190  0022C0  0060  F083  FFDE   	movff	??_StartSyncStrobes+7,16350
  3191                           
  3192                           ;LED_Patterns.c: 189: SLED_B->StrobeRUN = 1;
  3193  0022C6  EE20 F00A          	lfsr	2,10
  3194  0022CA  5013               	movf	StartSyncStrobes@SLED_B,w,c
  3195  0022CC  26D9               	addwf	16345,f,c
  3196  0022CE  5014               	movf	StartSyncStrobes@SLED_B+1,w,c
  3197  0022D0  22DA               	addwfc	16346,f,c
  3198  0022D2  0E01               	movlw	1
  3199  0022D4  6EDF               	movwf	16351,c
  3200                           
  3201                           ;LED_Patterns.c: 190: SLED_B->A_B = 0;
  3202  0022D6  EE20 F00C          	lfsr	2,12
  3203  0022DA  5013               	movf	StartSyncStrobes@SLED_B,w,c
  3204  0022DC  26D9               	addwf	16345,f,c
  3205  0022DE  5014               	movf	StartSyncStrobes@SLED_B+1,w,c
  3206  0022E0  22DA               	addwfc	16346,f,c
  3207  0022E2  0E00               	movlw	0
  3208  0022E4  6EDF               	movwf	16351,c
  3209                           
  3210                           ;LED_Patterns.c: 191: SLED_B->PulseCnt = 0;
  3211  0022E6  EE20 F00B          	lfsr	2,11
  3212  0022EA  5013               	movf	StartSyncStrobes@SLED_B,w,c
  3213  0022EC  26D9               	addwf	16345,f,c
  3214  0022EE  5014               	movf	StartSyncStrobes@SLED_B+1,w,c
  3215  0022F0  22DA               	addwfc	16346,f,c
  3216  0022F2  0E00               	movlw	0
  3217  0022F4  6EDF               	movwf	16351,c
  3218                           
  3219                           ;LED_Patterns.c: 192: *SLED_B->OutPort |= (unsigned char)(1 << SLED_B->pin);
  3220  0022F6  EE20 F004          	lfsr	2,4
  3221  0022FA  5013               	movf	StartSyncStrobes@SLED_B,w,c
  3222  0022FC  26D9               	addwf	16345,f,c
  3223  0022FE  5014               	movf	StartSyncStrobes@SLED_B+1,w,c
  3224  002300  22DA               	addwfc	16346,f,c
  3225  002302  50DF               	movf	16351,w,c
  3226  002304  6E19               	movwf	??_StartSyncStrobes& (0+255),c
  3227  002306  0E01               	movlw	1
  3228  002308  6E1A               	movwf	(??_StartSyncStrobes+1)& (0+255),c
  3229  00230A  2A19               	incf	??_StartSyncStrobes,f,c
  3230  00230C  D002               	goto	u1234
  3231  00230E                     u1235:
  3232  00230E  90D8               	bcf	16344,0,c
  3233  002310  361A               	rlcf	??_StartSyncStrobes+1,f,c
  3234  002312                     u1234:
  3235  002312  2E19               	decfsz	??_StartSyncStrobes,f,c
  3236  002314  D7FC               	goto	u1235
  3237  002316  0060  F04F  FFD9   	movff	StartSyncStrobes@SLED_B,16345
  3238  00231C  0060  F053  FFDA   	movff	StartSyncStrobes@SLED_B+1,16346
  3239  002322  006F FF78  F01B    	movff	16350,??_StartSyncStrobes+2
  3240  002328  006F FF74  F01C    	movff	16349,??_StartSyncStrobes+3
  3241  00232E  0060  F06F  FFD9   	movff	??_StartSyncStrobes+2,16345
  3242  002334  0060  F073  FFDA   	movff	??_StartSyncStrobes+3,16346
  3243  00233A  501A               	movf	??_StartSyncStrobes+1,w,c
  3244  00233C  12DF               	iorwf	16351,f,c
  3245  00233E  0012               	return		;funcret
  3246  002340                     __end_of_StartSyncStrobes:
  3247                           	opt stack 0
  3248                           
  3249 ;; *************** function _StartStrobe *****************
  3250 ;; Defined at:
  3251 ;;		line 156 in file "LED_Patterns.c"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;  SLED            2    6[COMRAM] PTR struct StrobeLED
  3254 ;;		 -> main@GenStrobe(13), main@GStrobe(13), main@EFStrobe(13), 
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;		None
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  1    wreg      void 
  3259 ;; Registers used:
  3260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3266 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3268 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3269 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3270 ;;Total ram usage:       10 bytes
  3271 ;; Hardware stack levels used:    1
  3272 ;; Hardware stack levels required when called:    4
  3273 ;; This function calls:
  3274 ;;		_GetCurrentTime
  3275 ;;		_StopStrobe
  3276 ;; This function is called by:
  3277 ;;		_main
  3278 ;;		_StartSyncStrobes
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282                           	psect	text10
  3283  002340                     __ptext10:
  3284                           	opt stack 0
  3285  002340                     _StartStrobe:
  3286                           	opt stack 25
  3287                           
  3288                           ;LED_Patterns.c: 158: if (SLED->StrobeRUN)
  3289                           
  3290                           ;incstack = 0
  3291  002340  EE20 F00A          	lfsr	2,10
  3292  002344  5007               	movf	StartStrobe@SLED,w,c
  3293  002346  26D9               	addwf	16345,f,c
  3294  002348  5008               	movf	StartStrobe@SLED+1,w,c
  3295  00234A  22DA               	addwfc	16346,f,c
  3296  00234C  50DF               	movf	16351,w,c
  3297  00234E  B4D8               	btfsc	16344,2,c
  3298  002350  D008               	goto	l337
  3299                           
  3300                           ;LED_Patterns.c: 159: StopStrobe(SLED);
  3301  002352  0060  F01C  F001   	movff	StartStrobe@SLED,StopStrobe@SLED
  3302  002358  0060  F020  F002   	movff	StartStrobe@SLED+1,StopStrobe@SLED+1
  3303  00235E  ECF2  F013         	call	_StopStrobe	;wreg free
  3304  002362                     l337:
  3305                           
  3306                           ;LED_Patterns.c: 161: SLED->StrobeCnt = STROBE_ON_TIME_MS + GetCurrentTime();
  3307  002362  0E19               	movlw	low _STROBE_ON_TIME_MS
  3308  002364  6EF6               	movwf	16374,c
  3309  002366                     	if	1	;There is more than 1 active tblptr byte
  3310  002366  0E10               	movlw	high _STROBE_ON_TIME_MS
  3311  002368  6EF7               	movwf	16375,c
  3312  00236A                     	endif
  3313  00236A                     	if	1	;There are 3 active tblptr bytes
  3314  00236A  0E00               	movlw	low (_STROBE_ON_TIME_MS shr (0+16))
  3315  00236C  6EF8               	movwf	16376,c
  3316  00236E                     	endif
  3317  00236E  0009               	tblrd		*+
  3318  002370  006F FFD4  F009    	movff	16373,??_StartStrobe
  3319  002376  0009               	tblrd		*+
  3320  002378  006F FFD4  F00A    	movff	16373,??_StartStrobe+1
  3321  00237E  0009               	tblrd		*+
  3322  002380  006F FFD4  F00B    	movff	16373,??_StartStrobe+2
  3323  002386  0009               	tblrd		*+
  3324  002388  006F FFD4  F00C    	movff	16373,??_StartStrobe+3
  3325  00238E  ECBA  F014         	call	_GetCurrentTime	;wreg free
  3326  002392  5009               	movf	??_StartStrobe,w,c
  3327  002394  2401               	addwf	?_GetCurrentTime,w,c
  3328  002396  6E0D               	movwf	(??_StartStrobe+4)& (0+255),c
  3329  002398  500A               	movf	??_StartStrobe+1,w,c
  3330  00239A  2002               	addwfc	?_GetCurrentTime+1,w,c
  3331  00239C  6E0E               	movwf	(??_StartStrobe+5)& (0+255),c
  3332  00239E  500B               	movf	??_StartStrobe+2,w,c
  3333  0023A0  2003               	addwfc	?_GetCurrentTime+2,w,c
  3334  0023A2  6E0F               	movwf	(??_StartStrobe+6)& (0+255),c
  3335  0023A4  500C               	movf	??_StartStrobe+3,w,c
  3336  0023A6  2004               	addwfc	?_GetCurrentTime+3,w,c
  3337  0023A8  6E10               	movwf	(??_StartStrobe+7)& (0+255),c
  3338  0023AA  EE20 F006          	lfsr	2,6
  3339  0023AE  5007               	movf	StartStrobe@SLED,w,c
  3340  0023B0  26D9               	addwf	16345,f,c
  3341  0023B2  5008               	movf	StartStrobe@SLED+1,w,c
  3342  0023B4  22DA               	addwfc	16346,f,c
  3343  0023B6  0060  F037  FFDE   	movff	??_StartStrobe+4,16350
  3344  0023BC  0060  F03B  FFDE   	movff	??_StartStrobe+5,16350
  3345  0023C2  0060  F03F  FFDE   	movff	??_StartStrobe+6,16350
  3346  0023C8  0060  F043  FFDE   	movff	??_StartStrobe+7,16350
  3347                           
  3348                           ;LED_Patterns.c: 162: SLED->StrobeRUN = 1;
  3349  0023CE  EE20 F00A          	lfsr	2,10
  3350  0023D2  5007               	movf	StartStrobe@SLED,w,c
  3351  0023D4  26D9               	addwf	16345,f,c
  3352  0023D6  5008               	movf	StartStrobe@SLED+1,w,c
  3353  0023D8  22DA               	addwfc	16346,f,c
  3354  0023DA  0E01               	movlw	1
  3355  0023DC  6EDF               	movwf	16351,c
  3356                           
  3357                           ;LED_Patterns.c: 163: SLED->A_B = 1;
  3358  0023DE  EE20 F00C          	lfsr	2,12
  3359  0023E2  5007               	movf	StartStrobe@SLED,w,c
  3360  0023E4  26D9               	addwf	16345,f,c
  3361  0023E6  5008               	movf	StartStrobe@SLED+1,w,c
  3362  0023E8  22DA               	addwfc	16346,f,c
  3363  0023EA  0E01               	movlw	1
  3364  0023EC  6EDF               	movwf	16351,c
  3365                           
  3366                           ;LED_Patterns.c: 164: SLED->PulseCnt = 0;
  3367  0023EE  EE20 F00B          	lfsr	2,11
  3368  0023F2  5007               	movf	StartStrobe@SLED,w,c
  3369  0023F4  26D9               	addwf	16345,f,c
  3370  0023F6  5008               	movf	StartStrobe@SLED+1,w,c
  3371  0023F8  22DA               	addwfc	16346,f,c
  3372  0023FA  0E00               	movlw	0
  3373  0023FC  6EDF               	movwf	16351,c
  3374                           
  3375                           ;LED_Patterns.c: 165: *SLED->OutPort &= (unsigned char)~(1 << SLED->pin);
  3376  0023FE  EE20 F004          	lfsr	2,4
  3377  002402  5007               	movf	StartStrobe@SLED,w,c
  3378  002404  26D9               	addwf	16345,f,c
  3379  002406  5008               	movf	StartStrobe@SLED+1,w,c
  3380  002408  22DA               	addwfc	16346,f,c
  3381  00240A  50DF               	movf	16351,w,c
  3382  00240C  6E09               	movwf	??_StartStrobe& (0+255),c
  3383  00240E  0E01               	movlw	1
  3384  002410  6E0A               	movwf	(??_StartStrobe+1)& (0+255),c
  3385  002412  2A09               	incf	??_StartStrobe,f,c
  3386  002414  D002               	goto	u1084
  3387  002416                     u1085:
  3388  002416  90D8               	bcf	16344,0,c
  3389  002418  360A               	rlcf	??_StartStrobe+1,f,c
  3390  00241A                     u1084:
  3391  00241A  2E09               	decfsz	??_StartStrobe,f,c
  3392  00241C  D7FC               	goto	u1085
  3393  00241E  500A               	movf	??_StartStrobe+1,w,c
  3394  002420  0AFF               	xorlw	255
  3395  002422  6E0B               	movwf	(??_StartStrobe+2)& (0+255),c
  3396  002424  0060  F01F  FFD9   	movff	StartStrobe@SLED,16345
  3397  00242A  0060  F023  FFDA   	movff	StartStrobe@SLED+1,16346
  3398  002430  006F FF78  F00C    	movff	16350,??_StartStrobe+3
  3399  002436  006F FF74  F00D    	movff	16349,??_StartStrobe+4
  3400  00243C  0060  F033  FFD9   	movff	??_StartStrobe+3,16345
  3401  002442  0060  F037  FFDA   	movff	??_StartStrobe+4,16346
  3402  002448  500B               	movf	??_StartStrobe+2,w,c
  3403  00244A  16DF               	andwf	16351,f,c
  3404  00244C  0012               	return		;funcret
  3405  00244E                     __end_of_StartStrobe:
  3406                           	opt stack 0
  3407                           
  3408 ;; *************** function _StopStrobe *****************
  3409 ;; Defined at:
  3410 ;;		line 196 in file "LED_Patterns.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;  SLED            2    0[COMRAM] PTR struct StrobeLED
  3413 ;;		 -> main@GenStrobe(13), main@ACStrobe(13), main@GStrobe(13), main@EFStrobe(13), 
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;		None
  3416 ;; Return value:  Size  Location     Type
  3417 ;;                  1    wreg      void 
  3418 ;; Registers used:
  3419 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3420 ;; Tracked objects:
  3421 ;;		On entry : 0/0
  3422 ;;		On exit  : 0/0
  3423 ;;		Unchanged: 0/0
  3424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3425 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3427 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3428 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3429 ;;Total ram usage:        6 bytes
  3430 ;; Hardware stack levels used:    1
  3431 ;; Hardware stack levels required when called:    3
  3432 ;; This function calls:
  3433 ;;		Nothing
  3434 ;; This function is called by:
  3435 ;;		_main
  3436 ;;		_StartStrobe
  3437 ;;		_StartSyncStrobes
  3438 ;;		_StopSyncStrobes
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           	psect	text11
  3443  0027E4                     __ptext11:
  3444                           	opt stack 0
  3445  0027E4                     _StopStrobe:
  3446                           	opt stack 26
  3447                           
  3448                           ;LED_Patterns.c: 198: if (SLED->StrobeRUN)
  3449                           
  3450                           ;incstack = 0
  3451  0027E4  EE20 F00A          	lfsr	2,10
  3452  0027E8  5001               	movf	StopStrobe@SLED,w,c
  3453  0027EA  26D9               	addwf	16345,f,c
  3454  0027EC  5002               	movf	StopStrobe@SLED+1,w,c
  3455  0027EE  22DA               	addwfc	16346,f,c
  3456  0027F0  50DF               	movf	16351,w,c
  3457  0027F2  B4D8               	btfsc	16344,2,c
  3458  0027F4  0012               	return	
  3459                           
  3460                           ;LED_Patterns.c: 199: {
  3461                           ;LED_Patterns.c: 200: SLED->StrobeRUN = 0;
  3462  0027F6  EE20 F00A          	lfsr	2,10
  3463  0027FA  5001               	movf	StopStrobe@SLED,w,c
  3464  0027FC  26D9               	addwf	16345,f,c
  3465  0027FE  5002               	movf	StopStrobe@SLED+1,w,c
  3466  002800  22DA               	addwfc	16346,f,c
  3467  002802  0E00               	movlw	0
  3468  002804  6EDF               	movwf	16351,c
  3469                           
  3470                           ;LED_Patterns.c: 201: *SLED->OutPort |= (unsigned char)(1 << SLED->pin);
  3471  002806  EE20 F004          	lfsr	2,4
  3472  00280A  5001               	movf	StopStrobe@SLED,w,c
  3473  00280C  26D9               	addwf	16345,f,c
  3474  00280E  5002               	movf	StopStrobe@SLED+1,w,c
  3475  002810  22DA               	addwfc	16346,f,c
  3476  002812  50DF               	movf	16351,w,c
  3477  002814  6E03               	movwf	??_StopStrobe& (0+255),c
  3478  002816  0E01               	movlw	1
  3479  002818  6E04               	movwf	(??_StopStrobe+1)& (0+255),c
  3480  00281A  2A03               	incf	??_StopStrobe,f,c
  3481  00281C  D002               	goto	u1034
  3482  00281E                     u1035:
  3483  00281E  90D8               	bcf	16344,0,c
  3484  002820  3604               	rlcf	??_StopStrobe+1,f,c
  3485  002822                     u1034:
  3486  002822  2E03               	decfsz	??_StopStrobe,f,c
  3487  002824  D7FC               	goto	u1035
  3488  002826  0060  F007  FFD9   	movff	StopStrobe@SLED,16345
  3489  00282C  0060  F00B  FFDA   	movff	StopStrobe@SLED+1,16346
  3490  002832  006F FF78  F005    	movff	16350,??_StopStrobe+2
  3491  002838  006F FF74  F006    	movff	16349,??_StopStrobe+3
  3492  00283E  0060  F017  FFD9   	movff	??_StopStrobe+2,16345
  3493  002844  0060  F01B  FFDA   	movff	??_StopStrobe+3,16346
  3494  00284A  5004               	movf	??_StopStrobe+1,w,c
  3495  00284C  12DF               	iorwf	16351,f,c
  3496  00284E  0012               	return	
  3497  002850                     __end_of_StopStrobe:
  3498                           	opt stack 0
  3499                           
  3500 ;; *************** function _StartStopWatch *****************
  3501 ;; Defined at:
  3502 ;;		line 26 in file "stop_watch.c"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;		None
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;		None
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  1    wreg      void 
  3509 ;; Registers used:
  3510 ;;		cstack
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3520 ;;Total ram usage:        0 bytes
  3521 ;; Hardware stack levels used:    1
  3522 ;; Hardware stack levels required when called:    4
  3523 ;; This function calls:
  3524 ;;		_TMR0_StartTimer
  3525 ;; This function is called by:
  3526 ;;		_main
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           	psect	text12
  3531  0029D4                     __ptext12:
  3532                           	opt stack 0
  3533  0029D4                     _StartStopWatch:
  3534                           	opt stack 26
  3535                           
  3536                           ;stop_watch.c: 28: TMR0_StartTimer();
  3537                           
  3538                           ;incstack = 0
  3539  0029D4  ECED  F014         	call	_TMR0_StartTimer	;wreg free
  3540  0029D8  0012               	return		;funcret
  3541  0029DA                     __end_of_StartStopWatch:
  3542                           	opt stack 0
  3543                           
  3544 ;; *************** function _TMR0_StartTimer *****************
  3545 ;; Defined at:
  3546 ;;		line 86 in file "mcc_generated_files/tmr0.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;		None
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;		None
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  1    wreg      void 
  3553 ;; Registers used:
  3554 ;;		None
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3564 ;;Total ram usage:        0 bytes
  3565 ;; Hardware stack levels used:    1
  3566 ;; Hardware stack levels required when called:    3
  3567 ;; This function calls:
  3568 ;;		Nothing
  3569 ;; This function is called by:
  3570 ;;		_StartStopWatch
  3571 ;; This function uses a non-reentrant model
  3572 ;;
  3573                           
  3574                           	psect	text13
  3575  0029DA                     __ptext13:
  3576                           	opt stack 0
  3577  0029DA                     _TMR0_StartTimer:
  3578                           	opt stack 26
  3579                           
  3580                           ;tmr0.c: 89: T0CON0bits.T0EN = 1;
  3581                           
  3582                           ;incstack = 0
  3583  0029DA  013F               	movlb	63	; () banked
  3584  0029DC  8FB8               	bsf	184,7,b	;volatile
  3585                           
  3586                           ; BSR set to: 63
  3587  0029DE  0012               	return		;funcret
  3588  0029E0                     __end_of_TMR0_StartTimer:
  3589                           	opt stack 0
  3590                           
  3591 ;; *************** function _StartRabbitLights *****************
  3592 ;; Defined at:
  3593 ;;		line 336 in file "LED_Patterns.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;  rp              2    4[COMRAM] PTR struct RabbitPort
  3596 ;;		 -> main@Rabbit(13), 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  i               1   14[COMRAM] unsigned char 
  3599 ;;  Mask            1   15[COMRAM] unsigned char 
  3600 ;; Return value:  Size  Location     Type
  3601 ;;                  1    wreg      void 
  3602 ;; Registers used:
  3603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3609 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3610 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3611 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3612 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3613 ;;Total ram usage:       12 bytes
  3614 ;; Hardware stack levels used:    1
  3615 ;; Hardware stack levels required when called:    4
  3616 ;; This function calls:
  3617 ;;		_GetCurrentTime
  3618 ;; This function is called by:
  3619 ;;		_main
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           	psect	text14
  3624  0020C6                     __ptext14:
  3625                           	opt stack 0
  3626  0020C6                     _StartRabbitLights:
  3627                           	opt stack 26
  3628                           
  3629                           ;LED_Patterns.c: 338: rp->msCnt = RABBIT_ON_TIME_MS + GetCurrentTime();
  3630                           
  3631                           ; BSR set to: 63
  3632                           ;incstack = 0
  3633  0020C6  0E05               	movlw	low _RABBIT_ON_TIME_MS
  3634  0020C8  6EF6               	movwf	16374,c
  3635  0020CA                     	if	1	;There is more than 1 active tblptr byte
  3636  0020CA  0E10               	movlw	high _RABBIT_ON_TIME_MS
  3637  0020CC  6EF7               	movwf	16375,c
  3638  0020CE                     	endif
  3639  0020CE                     	if	1	;There are 3 active tblptr bytes
  3640  0020CE  0E00               	movlw	low (_RABBIT_ON_TIME_MS shr (0+16))
  3641  0020D0  6EF8               	movwf	16376,c
  3642  0020D2                     	endif
  3643  0020D2  0009               	tblrd		*+
  3644  0020D4  006F FFD4  F007    	movff	16373,??_StartRabbitLights
  3645  0020DA  0009               	tblrd		*+
  3646  0020DC  006F FFD4  F008    	movff	16373,??_StartRabbitLights+1
  3647  0020E2  0009               	tblrd		*+
  3648  0020E4  006F FFD4  F009    	movff	16373,??_StartRabbitLights+2
  3649  0020EA  0009               	tblrd		*+
  3650  0020EC  006F FFD4  F00A    	movff	16373,??_StartRabbitLights+3
  3651  0020F2  ECBA  F014         	call	_GetCurrentTime	;wreg free
  3652  0020F6  5007               	movf	??_StartRabbitLights,w,c
  3653  0020F8  2401               	addwf	?_GetCurrentTime,w,c
  3654  0020FA  6E0B               	movwf	(??_StartRabbitLights+4)& (0+255),c
  3655  0020FC  5008               	movf	??_StartRabbitLights+1,w,c
  3656  0020FE  2002               	addwfc	?_GetCurrentTime+1,w,c
  3657  002100  6E0C               	movwf	(??_StartRabbitLights+5)& (0+255),c
  3658  002102  5009               	movf	??_StartRabbitLights+2,w,c
  3659  002104  2003               	addwfc	?_GetCurrentTime+2,w,c
  3660  002106  6E0D               	movwf	(??_StartRabbitLights+6)& (0+255),c
  3661  002108  500A               	movf	??_StartRabbitLights+3,w,c
  3662  00210A  2004               	addwfc	?_GetCurrentTime+3,w,c
  3663  00210C  6E0E               	movwf	(??_StartRabbitLights+7)& (0+255),c
  3664  00210E  EE20 F006          	lfsr	2,6
  3665  002112  5005               	movf	StartRabbitLights@rp,w,c
  3666  002114  26D9               	addwf	16345,f,c
  3667  002116  5006               	movf	StartRabbitLights@rp+1,w,c
  3668  002118  22DA               	addwfc	16346,f,c
  3669  00211A  0060  F02F  FFDE   	movff	??_StartRabbitLights+4,16350
  3670  002120  0060  F033  FFDE   	movff	??_StartRabbitLights+5,16350
  3671  002126  0060  F037  FFDE   	movff	??_StartRabbitLights+6,16350
  3672  00212C  0060  F03B  FFDE   	movff	??_StartRabbitLights+7,16350
  3673                           
  3674                           ;LED_Patterns.c: 339: rp->RabbitRUN = 1;
  3675  002132  EE20 F00B          	lfsr	2,11
  3676  002136  5005               	movf	StartRabbitLights@rp,w,c
  3677  002138  26D9               	addwf	16345,f,c
  3678  00213A  5006               	movf	StartRabbitLights@rp+1,w,c
  3679  00213C  22DA               	addwfc	16346,f,c
  3680  00213E  0E01               	movlw	1
  3681  002140  6EDF               	movwf	16351,c
  3682                           
  3683                           ;LED_Patterns.c: 340: rp->A_B = 1;
  3684  002142  EE20 F00C          	lfsr	2,12
  3685  002146  5005               	movf	StartRabbitLights@rp,w,c
  3686  002148  26D9               	addwf	16345,f,c
  3687  00214A  5006               	movf	StartRabbitLights@rp+1,w,c
  3688  00214C  22DA               	addwfc	16346,f,c
  3689  00214E  0E01               	movlw	1
  3690  002150  6EDF               	movwf	16351,c
  3691                           
  3692                           ;LED_Patterns.c: 342: unsigned char Mask = 0;
  3693  002152  0E00               	movlw	0
  3694  002154  6E10               	movwf	StartRabbitLights@Mask,c
  3695                           
  3696                           ;LED_Patterns.c: 344: for (uint8_t i = 0; i < rp->NumLights; i++)
  3697  002156  0E00               	movlw	0
  3698  002158  6E0F               	movwf	StartRabbitLights@i,c
  3699  00215A  D003               	goto	l386
  3700  00215C                     
  3701                           ;LED_Patterns.c: 345: {
  3702                           ;LED_Patterns.c: 346: Mask = (unsigned char)((Mask << 1) | 1);
  3703  00215C  80D8               	bsf	16344,0,c
  3704  00215E  3610               	rlcf	StartRabbitLights@Mask,f,c
  3705  002160  2A0F               	incf	StartRabbitLights@i,f,c
  3706  002162                     l386:
  3707  002162  EE20 F005          	lfsr	2,5
  3708  002166  5005               	movf	StartRabbitLights@rp,w,c
  3709  002168  26D9               	addwf	16345,f,c
  3710  00216A  5006               	movf	StartRabbitLights@rp+1,w,c
  3711  00216C  22DA               	addwfc	16346,f,c
  3712  00216E  50DE               	movf	16350,w,c
  3713  002170  5C0F               	subwf	StartRabbitLights@i,w,c
  3714  002172  A0D8               	btfss	16344,0,c
  3715  002174  D7F3               	goto	l387
  3716                           
  3717                           ;LED_Patterns.c: 347: }
  3718                           ;LED_Patterns.c: 349: Mask = (unsigned char)(Mask << rp->StartingLED);
  3719  002176  EE20 F004          	lfsr	2,4
  3720  00217A  5005               	movf	StartRabbitLights@rp,w,c
  3721  00217C  26D9               	addwf	16345,f,c
  3722  00217E  5006               	movf	StartRabbitLights@rp+1,w,c
  3723  002180  22DA               	addwfc	16346,f,c
  3724  002182  50DF               	movf	16351,w,c
  3725  002184  6E07               	movwf	??_StartRabbitLights& (0+255),c
  3726  002186  0060  F040  F008   	movff	StartRabbitLights@Mask,??_StartRabbitLights+1
  3727  00218C  2A07               	incf	??_StartRabbitLights,f,c
  3728  00218E  D002               	goto	u1254
  3729  002190                     u1255:
  3730  002190  90D8               	bcf	16344,0,c
  3731  002192  3608               	rlcf	??_StartRabbitLights+1,f,c
  3732  002194                     u1254:
  3733  002194  2E07               	decfsz	??_StartRabbitLights,f,c
  3734  002196  D7FC               	goto	u1255
  3735  002198  5008               	movf	??_StartRabbitLights+1,w,c
  3736  00219A  6E10               	movwf	StartRabbitLights@Mask,c
  3737                           
  3738                           ;LED_Patterns.c: 351: *rp->OutputPort |= Mask;
  3739  00219C  0060  F017  FFD9   	movff	StartRabbitLights@rp,16345
  3740  0021A2  0060  F01B  FFDA   	movff	StartRabbitLights@rp+1,16346
  3741  0021A8  006F FF78  F007    	movff	16350,??_StartRabbitLights
  3742  0021AE  006F FF74  F008    	movff	16349,??_StartRabbitLights+1
  3743  0021B4  0060  F01F  FFD9   	movff	??_StartRabbitLights,16345
  3744  0021BA  0060  F023  FFDA   	movff	??_StartRabbitLights+1,16346
  3745  0021C0  5010               	movf	StartRabbitLights@Mask,w,c
  3746  0021C2  12DF               	iorwf	16351,f,c
  3747                           
  3748                           ;LED_Patterns.c: 352: *rp->OutputPort &= (unsigned char)~(1 << rp->StartingLED);
  3749  0021C4  EE20 F004          	lfsr	2,4
  3750  0021C8  5005               	movf	StartRabbitLights@rp,w,c
  3751  0021CA  26D9               	addwf	16345,f,c
  3752  0021CC  5006               	movf	StartRabbitLights@rp+1,w,c
  3753  0021CE  22DA               	addwfc	16346,f,c
  3754  0021D0  50DF               	movf	16351,w,c
  3755  0021D2  6E07               	movwf	??_StartRabbitLights& (0+255),c
  3756  0021D4  0E01               	movlw	1
  3757  0021D6  6E08               	movwf	(??_StartRabbitLights+1)& (0+255),c
  3758  0021D8  2A07               	incf	??_StartRabbitLights,f,c
  3759  0021DA  D002               	goto	u1264
  3760  0021DC                     u1265:
  3761  0021DC  90D8               	bcf	16344,0,c
  3762  0021DE  3608               	rlcf	??_StartRabbitLights+1,f,c
  3763  0021E0                     u1264:
  3764  0021E0  2E07               	decfsz	??_StartRabbitLights,f,c
  3765  0021E2  D7FC               	goto	u1265
  3766  0021E4  5008               	movf	??_StartRabbitLights+1,w,c
  3767  0021E6  0AFF               	xorlw	255
  3768  0021E8  6E09               	movwf	(??_StartRabbitLights+2)& (0+255),c
  3769  0021EA  0060  F017  FFD9   	movff	StartRabbitLights@rp,16345
  3770  0021F0  0060  F01B  FFDA   	movff	StartRabbitLights@rp+1,16346
  3771  0021F6  006F FF78  F00A    	movff	16350,??_StartRabbitLights+3
  3772  0021FC  006F FF74  F00B    	movff	16349,??_StartRabbitLights+4
  3773  002202  0060  F02B  FFD9   	movff	??_StartRabbitLights+3,16345
  3774  002208  0060  F02F  FFDA   	movff	??_StartRabbitLights+4,16346
  3775  00220E  5009               	movf	??_StartRabbitLights+2,w,c
  3776  002210  16DF               	andwf	16351,f,c
  3777  002212  0012               	return		;funcret
  3778  002214                     __end_of_StartRabbitLights:
  3779                           	opt stack 0
  3780                           
  3781 ;; *************** function _StartGunFirePattern *****************
  3782 ;; Defined at:
  3783 ;;		line 71 in file "LED_Patterns.c"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;  gp              2    6[COMRAM] PTR struct GunPort
  3786 ;;		 -> main@Gun3(17), main@Gun2(17), main@Gun1(17), 
  3787 ;; Auto vars:     Size  Location     Type
  3788 ;;		None
  3789 ;; Return value:  Size  Location     Type
  3790 ;;                  1    wreg      void 
  3791 ;; Registers used:
  3792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3793 ;; Tracked objects:
  3794 ;;		On entry : 0/0
  3795 ;;		On exit  : 0/0
  3796 ;;		Unchanged: 0/0
  3797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3798 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3800 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3801 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3802 ;;Total ram usage:       10 bytes
  3803 ;; Hardware stack levels used:    1
  3804 ;; Hardware stack levels required when called:    4
  3805 ;; This function calls:
  3806 ;;		_GetCurrentTime
  3807 ;;		_StopGunFirePattern
  3808 ;; This function is called by:
  3809 ;;		_main
  3810 ;; This function uses a non-reentrant model
  3811 ;;
  3812                           
  3813                           	psect	text15
  3814  001F70                     __ptext15:
  3815                           	opt stack 0
  3816  001F70                     _StartGunFirePattern:
  3817                           	opt stack 26
  3818                           
  3819                           ;LED_Patterns.c: 73: if (gp->GunRUN)
  3820                           
  3821                           ;incstack = 0
  3822  001F70  EE20 F00F          	lfsr	2,15
  3823  001F74  5007               	movf	StartGunFirePattern@gp,w,c
  3824  001F76  26D9               	addwf	16345,f,c
  3825  001F78  5008               	movf	StartGunFirePattern@gp+1,w,c
  3826  001F7A  22DA               	addwfc	16346,f,c
  3827  001F7C  50DF               	movf	16351,w,c
  3828  001F7E  B4D8               	btfsc	16344,2,c
  3829  001F80  D008               	goto	l316
  3830                           
  3831                           ;LED_Patterns.c: 74: StopGunFirePattern(gp);
  3832  001F82  0060  F01C  F001   	movff	StartGunFirePattern@gp,StopGunFirePattern@gp
  3833  001F88  0060  F020  F002   	movff	StartGunFirePattern@gp+1,StopGunFirePattern@gp+1
  3834  001F8E  EC84  F012         	call	_StopGunFirePattern	;wreg free
  3835  001F92                     l316:
  3836                           
  3837                           ;LED_Patterns.c: 76: gp->GunCnt = GUN_ON_TIME_MS + GetCurrentTime();
  3838  001F92  0E25               	movlw	low _GUN_ON_TIME_MS
  3839  001F94  6EF6               	movwf	16374,c
  3840  001F96                     	if	1	;There is more than 1 active tblptr byte
  3841  001F96  0E10               	movlw	high _GUN_ON_TIME_MS
  3842  001F98  6EF7               	movwf	16375,c
  3843  001F9A                     	endif
  3844  001F9A                     	if	1	;There are 3 active tblptr bytes
  3845  001F9A  0E00               	movlw	low (_GUN_ON_TIME_MS shr (0+16))
  3846  001F9C  6EF8               	movwf	16376,c
  3847  001F9E                     	endif
  3848  001F9E  0009               	tblrd		*+
  3849  001FA0  006F FFD4  F009    	movff	16373,??_StartGunFirePattern
  3850  001FA6  0009               	tblrd		*+
  3851  001FA8  006F FFD4  F00A    	movff	16373,??_StartGunFirePattern+1
  3852  001FAE  0009               	tblrd		*+
  3853  001FB0  006F FFD4  F00B    	movff	16373,??_StartGunFirePattern+2
  3854  001FB6  0009               	tblrd		*+
  3855  001FB8  006F FFD4  F00C    	movff	16373,??_StartGunFirePattern+3
  3856  001FBE  ECBA  F014         	call	_GetCurrentTime	;wreg free
  3857  001FC2  5009               	movf	??_StartGunFirePattern,w,c
  3858  001FC4  2401               	addwf	?_GetCurrentTime,w,c
  3859  001FC6  6E0D               	movwf	(??_StartGunFirePattern+4)& (0+255),c
  3860  001FC8  500A               	movf	??_StartGunFirePattern+1,w,c
  3861  001FCA  2002               	addwfc	?_GetCurrentTime+1,w,c
  3862  001FCC  6E0E               	movwf	(??_StartGunFirePattern+5)& (0+255),c
  3863  001FCE  500B               	movf	??_StartGunFirePattern+2,w,c
  3864  001FD0  2003               	addwfc	?_GetCurrentTime+2,w,c
  3865  001FD2  6E0F               	movwf	(??_StartGunFirePattern+6)& (0+255),c
  3866  001FD4  500C               	movf	??_StartGunFirePattern+3,w,c
  3867  001FD6  2004               	addwfc	?_GetCurrentTime+3,w,c
  3868  001FD8  6E10               	movwf	(??_StartGunFirePattern+7)& (0+255),c
  3869  001FDA  EE20 F00A          	lfsr	2,10
  3870  001FDE  5007               	movf	StartGunFirePattern@gp,w,c
  3871  001FE0  26D9               	addwf	16345,f,c
  3872  001FE2  5008               	movf	StartGunFirePattern@gp+1,w,c
  3873  001FE4  22DA               	addwfc	16346,f,c
  3874  001FE6  0060  F037  FFDE   	movff	??_StartGunFirePattern+4,16350
  3875  001FEC  0060  F03B  FFDE   	movff	??_StartGunFirePattern+5,16350
  3876  001FF2  0060  F03F  FFDE   	movff	??_StartGunFirePattern+6,16350
  3877  001FF8  0060  F043  FFDE   	movff	??_StartGunFirePattern+7,16350
  3878                           
  3879                           ;LED_Patterns.c: 77: gp->GunRUN = 1;
  3880  001FFE  EE20 F00F          	lfsr	2,15
  3881  002002  5007               	movf	StartGunFirePattern@gp,w,c
  3882  002004  26D9               	addwf	16345,f,c
  3883  002006  5008               	movf	StartGunFirePattern@gp+1,w,c
  3884  002008  22DA               	addwfc	16346,f,c
  3885  00200A  0E01               	movlw	1
  3886  00200C  6EDF               	movwf	16351,c
  3887                           
  3888                           ;LED_Patterns.c: 78: gp->ShotsCnt = 0;
  3889  00200E  EE20 F00E          	lfsr	2,14
  3890  002012  5007               	movf	StartGunFirePattern@gp,w,c
  3891  002014  26D9               	addwf	16345,f,c
  3892  002016  5008               	movf	StartGunFirePattern@gp+1,w,c
  3893  002018  22DA               	addwfc	16346,f,c
  3894  00201A  0E00               	movlw	0
  3895  00201C  6EDF               	movwf	16351,c
  3896                           
  3897                           ;LED_Patterns.c: 79: gp->A_B = 1;
  3898  00201E  EE20 F010          	lfsr	2,16
  3899  002022  5007               	movf	StartGunFirePattern@gp,w,c
  3900  002024  26D9               	addwf	16345,f,c
  3901  002026  5008               	movf	StartGunFirePattern@gp+1,w,c
  3902  002028  22DA               	addwfc	16346,f,c
  3903  00202A  0E01               	movlw	1
  3904  00202C  6EDF               	movwf	16351,c
  3905                           
  3906                           ;LED_Patterns.c: 81: *gp->OutputPort &= (unsigned char)~(1 << gp->GunLED);
  3907  00202E  EE20 F008          	lfsr	2,8
  3908  002032  5007               	movf	StartGunFirePattern@gp,w,c
  3909  002034  26D9               	addwf	16345,f,c
  3910  002036  5008               	movf	StartGunFirePattern@gp+1,w,c
  3911  002038  22DA               	addwfc	16346,f,c
  3912  00203A  50DF               	movf	16351,w,c
  3913  00203C  6E09               	movwf	??_StartGunFirePattern& (0+255),c
  3914  00203E  0E01               	movlw	1
  3915  002040  6E0A               	movwf	(??_StartGunFirePattern+1)& (0+255),c
  3916  002042  2A09               	incf	??_StartGunFirePattern,f,c
  3917  002044  D002               	goto	u1194
  3918  002046                     u1195:
  3919  002046  90D8               	bcf	16344,0,c
  3920  002048  360A               	rlcf	??_StartGunFirePattern+1,f,c
  3921  00204A                     u1194:
  3922  00204A  2E09               	decfsz	??_StartGunFirePattern,f,c
  3923  00204C  D7FC               	goto	u1195
  3924  00204E  500A               	movf	??_StartGunFirePattern+1,w,c
  3925  002050  0AFF               	xorlw	255
  3926  002052  6E0B               	movwf	(??_StartGunFirePattern+2)& (0+255),c
  3927  002054  0060  F01F  FFD9   	movff	StartGunFirePattern@gp,16345
  3928  00205A  0060  F023  FFDA   	movff	StartGunFirePattern@gp+1,16346
  3929  002060  006F FF78  F00C    	movff	16350,??_StartGunFirePattern+3
  3930  002066  006F FF74  F00D    	movff	16349,??_StartGunFirePattern+4
  3931  00206C  0060  F033  FFD9   	movff	??_StartGunFirePattern+3,16345
  3932  002072  0060  F037  FFDA   	movff	??_StartGunFirePattern+4,16346
  3933  002078  500B               	movf	??_StartGunFirePattern+2,w,c
  3934  00207A  16DF               	andwf	16351,f,c
  3935                           
  3936                           ;LED_Patterns.c: 82: *gp->TracerPort |= (unsigned char)(1 << gp->TracerLED);
  3937  00207C  EE20 F009          	lfsr	2,9
  3938  002080  5007               	movf	StartGunFirePattern@gp,w,c
  3939  002082  26D9               	addwf	16345,f,c
  3940  002084  5008               	movf	StartGunFirePattern@gp+1,w,c
  3941  002086  22DA               	addwfc	16346,f,c
  3942  002088  50DF               	movf	16351,w,c
  3943  00208A  6E09               	movwf	??_StartGunFirePattern& (0+255),c
  3944  00208C  0E01               	movlw	1
  3945  00208E  6E0A               	movwf	(??_StartGunFirePattern+1)& (0+255),c
  3946  002090  2A09               	incf	??_StartGunFirePattern,f,c
  3947  002092  D002               	goto	u1204
  3948  002094                     u1205:
  3949  002094  90D8               	bcf	16344,0,c
  3950  002096  360A               	rlcf	??_StartGunFirePattern+1,f,c
  3951  002098                     u1204:
  3952  002098  2E09               	decfsz	??_StartGunFirePattern,f,c
  3953  00209A  D7FC               	goto	u1205
  3954  00209C  EE20 F004          	lfsr	2,4
  3955  0020A0  5007               	movf	StartGunFirePattern@gp,w,c
  3956  0020A2  26D9               	addwf	16345,f,c
  3957  0020A4  5008               	movf	StartGunFirePattern@gp+1,w,c
  3958  0020A6  22DA               	addwfc	16346,f,c
  3959  0020A8  006F FF78  F00B    	movff	16350,??_StartGunFirePattern+2
  3960  0020AE  006F FF74  F00C    	movff	16349,??_StartGunFirePattern+3
  3961  0020B4  0060  F02F  FFD9   	movff	??_StartGunFirePattern+2,16345
  3962  0020BA  0060  F033  FFDA   	movff	??_StartGunFirePattern+3,16346
  3963  0020C0  500A               	movf	??_StartGunFirePattern+1,w,c
  3964  0020C2  12DF               	iorwf	16351,f,c
  3965  0020C4  0012               	return		;funcret
  3966  0020C6                     __end_of_StartGunFirePattern:
  3967                           	opt stack 0
  3968                           
  3969 ;; *************** function _StopGunFirePattern *****************
  3970 ;; Defined at:
  3971 ;;		line 143 in file "LED_Patterns.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;  gp              2    0[COMRAM] PTR struct GunPort
  3974 ;;		 -> main@Gun3(17), main@Gun2(17), main@Gun1(17), 
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;		None
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  1    wreg      void 
  3979 ;; Registers used:
  3980 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3986 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3988 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3989 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3990 ;;Total ram usage:        6 bytes
  3991 ;; Hardware stack levels used:    1
  3992 ;; Hardware stack levels required when called:    3
  3993 ;; This function calls:
  3994 ;;		Nothing
  3995 ;; This function is called by:
  3996 ;;		_main
  3997 ;;		_StartGunFirePattern
  3998 ;; This function uses a non-reentrant model
  3999 ;;
  4000                           
  4001                           	psect	text16
  4002  002508                     __ptext16:
  4003                           	opt stack 0
  4004  002508                     _StopGunFirePattern:
  4005                           	opt stack 27
  4006                           
  4007                           ;LED_Patterns.c: 145: if (gp->GunRUN)
  4008                           
  4009                           ;incstack = 0
  4010  002508  EE20 F00F          	lfsr	2,15
  4011  00250C  5001               	movf	StopGunFirePattern@gp,w,c
  4012  00250E  26D9               	addwf	16345,f,c
  4013  002510  5002               	movf	StopGunFirePattern@gp+1,w,c
  4014  002512  22DA               	addwfc	16346,f,c
  4015  002514  50DF               	movf	16351,w,c
  4016  002516  B4D8               	btfsc	16344,2,c
  4017  002518  0012               	return	
  4018                           
  4019                           ;LED_Patterns.c: 146: {
  4020                           ;LED_Patterns.c: 147: gp->GunRUN = 0;
  4021  00251A  EE20 F00F          	lfsr	2,15
  4022  00251E  5001               	movf	StopGunFirePattern@gp,w,c
  4023  002520  26D9               	addwf	16345,f,c
  4024  002522  5002               	movf	StopGunFirePattern@gp+1,w,c
  4025  002524  22DA               	addwfc	16346,f,c
  4026  002526  0E00               	movlw	0
  4027  002528  6EDF               	movwf	16351,c
  4028                           
  4029                           ;LED_Patterns.c: 148: *gp->OutputPort |= (unsigned char)(1 << gp->GunLED);
  4030  00252A  EE20 F008          	lfsr	2,8
  4031  00252E  5001               	movf	StopGunFirePattern@gp,w,c
  4032  002530  26D9               	addwf	16345,f,c
  4033  002532  5002               	movf	StopGunFirePattern@gp+1,w,c
  4034  002534  22DA               	addwfc	16346,f,c
  4035  002536  50DF               	movf	16351,w,c
  4036  002538  6E03               	movwf	??_StopGunFirePattern& (0+255),c
  4037  00253A  0E01               	movlw	1
  4038  00253C  6E04               	movwf	(??_StopGunFirePattern+1)& (0+255),c
  4039  00253E  2A03               	incf	??_StopGunFirePattern,f,c
  4040  002540  D002               	goto	u1054
  4041  002542                     u1055:
  4042  002542  90D8               	bcf	16344,0,c
  4043  002544  3604               	rlcf	??_StopGunFirePattern+1,f,c
  4044  002546                     u1054:
  4045  002546  2E03               	decfsz	??_StopGunFirePattern,f,c
  4046  002548  D7FC               	goto	u1055
  4047  00254A  0060  F007  FFD9   	movff	StopGunFirePattern@gp,16345
  4048  002550  0060  F00B  FFDA   	movff	StopGunFirePattern@gp+1,16346
  4049  002556  006F FF78  F005    	movff	16350,??_StopGunFirePattern+2
  4050  00255C  006F FF74  F006    	movff	16349,??_StopGunFirePattern+3
  4051  002562  0060  F017  FFD9   	movff	??_StopGunFirePattern+2,16345
  4052  002568  0060  F01B  FFDA   	movff	??_StopGunFirePattern+3,16346
  4053  00256E  5004               	movf	??_StopGunFirePattern+1,w,c
  4054  002570  12DF               	iorwf	16351,f,c
  4055                           
  4056                           ;LED_Patterns.c: 149: *gp->TracerPort |= (unsigned char)(1 << gp->TracerLED);
  4057  002572  EE20 F009          	lfsr	2,9
  4058  002576  5001               	movf	StopGunFirePattern@gp,w,c
  4059  002578  26D9               	addwf	16345,f,c
  4060  00257A  5002               	movf	StopGunFirePattern@gp+1,w,c
  4061  00257C  22DA               	addwfc	16346,f,c
  4062  00257E  50DF               	movf	16351,w,c
  4063  002580  6E03               	movwf	??_StopGunFirePattern& (0+255),c
  4064  002582  0E01               	movlw	1
  4065  002584  6E04               	movwf	(??_StopGunFirePattern+1)& (0+255),c
  4066  002586  2A03               	incf	??_StopGunFirePattern,f,c
  4067  002588  D002               	goto	u1064
  4068  00258A                     u1065:
  4069  00258A  90D8               	bcf	16344,0,c
  4070  00258C  3604               	rlcf	??_StopGunFirePattern+1,f,c
  4071  00258E                     u1064:
  4072  00258E  2E03               	decfsz	??_StopGunFirePattern,f,c
  4073  002590  D7FC               	goto	u1065
  4074  002592  EE20 F004          	lfsr	2,4
  4075  002596  5001               	movf	StopGunFirePattern@gp,w,c
  4076  002598  26D9               	addwf	16345,f,c
  4077  00259A  5002               	movf	StopGunFirePattern@gp+1,w,c
  4078  00259C  22DA               	addwfc	16346,f,c
  4079  00259E  006F FF78  F005    	movff	16350,??_StopGunFirePattern+2
  4080  0025A4  006F FF74  F006    	movff	16349,??_StopGunFirePattern+3
  4081  0025AA  0060  F017  FFD9   	movff	??_StopGunFirePattern+2,16345
  4082  0025B0  0060  F01B  FFDA   	movff	??_StopGunFirePattern+3,16346
  4083  0025B6  5004               	movf	??_StopGunFirePattern+1,w,c
  4084  0025B8  12DF               	iorwf	16351,f,c
  4085  0025BA  0012               	return	
  4086  0025BC                     __end_of_StopGunFirePattern:
  4087                           	opt stack 0
  4088                           
  4089 ;; *************** function _GetCurrentTime *****************
  4090 ;; Defined at:
  4091 ;;		line 30 in file "stop_watch.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;		None
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;		None
  4096 ;; Return value:  Size  Location     Type
  4097 ;;                  4    0[COMRAM] unsigned long 
  4098 ;; Registers used:
  4099 ;;		None
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4105 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4108 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4109 ;;Total ram usage:        4 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:    3
  4112 ;; This function calls:
  4113 ;;		Nothing
  4114 ;; This function is called by:
  4115 ;;		_StartGunFirePattern
  4116 ;;		_UpdateGunLED
  4117 ;;		_StartStrobe
  4118 ;;		_UpdateStrobeLED
  4119 ;;		_StartRabbitLights
  4120 ;;		_UpdateRabbitLEDs
  4121 ;;		__delayms
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           	psect	text17
  4126  002974                     __ptext17:
  4127                           	opt stack 0
  4128  002974                     _GetCurrentTime:
  4129                           	opt stack 26
  4130                           
  4131                           ;stop_watch.c: 32: return globalTime;
  4132                           
  4133                           ;incstack = 0
  4134  002974  0060  F0A8  F001   	movff	_globalTime,?_GetCurrentTime	;volatile
  4135  00297A  0060  F0AC  F002   	movff	_globalTime+1,?_GetCurrentTime+1	;volatile
  4136  002980  0060  F0B0  F003   	movff	_globalTime+2,?_GetCurrentTime+2	;volatile
  4137  002986  0060  F0B4  F004   	movff	_globalTime+3,?_GetCurrentTime+3	;volatile
  4138  00298C  0012               	return		;funcret
  4139  00298E                     __end_of_GetCurrentTime:
  4140                           	opt stack 0
  4141                           
  4142 ;; *************** function _SYSTEM_Initialize *****************
  4143 ;; Defined at:
  4144 ;;		line 101 in file "mcc_generated_files/mcc.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;		None
  4147 ;; Auto vars:     Size  Location     Type
  4148 ;;		None
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  1    wreg      void 
  4151 ;; Registers used:
  4152 ;;		wreg, status,2, status,0, cstack
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 0/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4162 ;;Total ram usage:        0 bytes
  4163 ;; Hardware stack levels used:    1
  4164 ;; Hardware stack levels required when called:    5
  4165 ;; This function calls:
  4166 ;;		_INTERRUPT_Initialize
  4167 ;;		_OSCILLATOR_Initialize
  4168 ;;		_PIN_MANAGER_Initialize
  4169 ;;		_TMR0_Initialize
  4170 ;; This function is called by:
  4171 ;;		_main
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           	psect	text18
  4176  00298E                     __ptext18:
  4177                           	opt stack 0
  4178  00298E                     _SYSTEM_Initialize:
  4179                           	opt stack 25
  4180                           
  4181                           ;mcc.c: 103: INTERRUPT_Initialize();
  4182                           
  4183                           ;incstack = 0
  4184  00298E  ECF0  F014         	call	_INTERRUPT_Initialize	;wreg free
  4185                           
  4186                           ;mcc.c: 104: PIN_MANAGER_Initialize();
  4187  002992  EC36  F013         	call	_PIN_MANAGER_Initialize	;wreg free
  4188                           
  4189                           ;mcc.c: 105: OSCILLATOR_Initialize();
  4190  002996  EC9D  F014         	call	_OSCILLATOR_Initialize	;wreg free
  4191                           
  4192                           ;mcc.c: 106: TMR0_Initialize();
  4193  00299A  EC51  F014         	call	_TMR0_Initialize	;wreg free
  4194  00299E  0012               	return		;funcret
  4195  0029A0                     __end_of_SYSTEM_Initialize:
  4196                           	opt stack 0
  4197                           
  4198 ;; *************** function _TMR0_Initialize *****************
  4199 ;; Defined at:
  4200 ;;		line 60 in file "mcc_generated_files/tmr0.c"
  4201 ;; Parameters:    Size  Location     Type
  4202 ;;		None
  4203 ;; Auto vars:     Size  Location     Type
  4204 ;;		None
  4205 ;; Return value:  Size  Location     Type
  4206 ;;                  1    wreg      void 
  4207 ;; Registers used:
  4208 ;;		wreg, status,2, status,0, cstack
  4209 ;; Tracked objects:
  4210 ;;		On entry : 0/0
  4211 ;;		On exit  : 0/0
  4212 ;;		Unchanged: 0/0
  4213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4218 ;;Total ram usage:        0 bytes
  4219 ;; Hardware stack levels used:    1
  4220 ;; Hardware stack levels required when called:    4
  4221 ;; This function calls:
  4222 ;;		_TMR0_SetInterruptHandler
  4223 ;; This function is called by:
  4224 ;;		_SYSTEM_Initialize
  4225 ;;		_StopWatch_Initialize
  4226 ;; This function uses a non-reentrant model
  4227 ;;
  4228                           
  4229                           	psect	text19
  4230  0028A2                     __ptext19:
  4231                           	opt stack 0
  4232  0028A2                     _TMR0_Initialize:
  4233                           	opt stack 25
  4234                           
  4235                           ;tmr0.c: 65: T0CON1 = 0x68;
  4236                           
  4237                           ;incstack = 0
  4238  0028A2  0E68               	movlw	104
  4239  0028A4  013F               	movlb	63	; () banked
  4240  0028A6  6FB9               	movwf	185,b	;volatile
  4241                           
  4242                           ;tmr0.c: 68: TMR0H = 0xF9;
  4243  0028A8  0EF9               	movlw	249
  4244  0028AA  013F               	movlb	63	; () banked
  4245  0028AC  6FB7               	movwf	183,b	;volatile
  4246                           
  4247                           ;tmr0.c: 71: TMR0L = 0x00;
  4248  0028AE  0E00               	movlw	0
  4249  0028B0  013F               	movlb	63	; () banked
  4250  0028B2  6FB6               	movwf	182,b	;volatile
  4251                           
  4252                           ; BSR set to: 63
  4253                           ;tmr0.c: 74: PIR3bits.TMR0IF = 0;
  4254  0028B4  0139               	movlb	57	; () banked
  4255  0028B6  9FA3               	bcf	163,7,b	;volatile
  4256                           
  4257                           ; BSR set to: 57
  4258                           ;tmr0.c: 77: PIE3bits.TMR0IE = 1;
  4259  0028B8  0139               	movlb	57	; () banked
  4260  0028BA  8F93               	bsf	147,7,b	;volatile
  4261                           
  4262                           ; BSR set to: 57
  4263                           ;tmr0.c: 80: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  4264  0028BC  0EE6               	movlw	low _TMR0_DefaultInterruptHandler
  4265  0028BE  6E01               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
  4266  0028C0  0E29               	movlw	high _TMR0_DefaultInterruptHandler
  4267  0028C2  6E02               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
  4268  0028C4  ECD9  F014         	call	_TMR0_SetInterruptHandler	;wreg free
  4269                           
  4270                           ;tmr0.c: 83: T0CON0 = 0x80;
  4271  0028C8  0E80               	movlw	128
  4272  0028CA  013F               	movlb	63	; () banked
  4273  0028CC  6FB8               	movwf	184,b	;volatile
  4274                           
  4275                           ; BSR set to: 63
  4276  0028CE  0012               	return		;funcret
  4277  0028D0                     __end_of_TMR0_Initialize:
  4278                           	opt stack 0
  4279                           
  4280 ;; *************** function _TMR0_SetInterruptHandler *****************
  4281 ;; Defined at:
  4282 ;;		line 133 in file "mcc_generated_files/tmr0.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
  4285 ;;		 -> StopWatchISR(1), TMR0_DefaultInterruptHandler(1), 
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;		None
  4288 ;; Return value:  Size  Location     Type
  4289 ;;                  1    wreg      void 
  4290 ;; Registers used:
  4291 ;;		wreg, status,2, status,0
  4292 ;; Tracked objects:
  4293 ;;		On entry : 0/0
  4294 ;;		On exit  : 0/0
  4295 ;;		Unchanged: 0/0
  4296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4300 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4301 ;;Total ram usage:        2 bytes
  4302 ;; Hardware stack levels used:    1
  4303 ;; Hardware stack levels required when called:    3
  4304 ;; This function calls:
  4305 ;;		Nothing
  4306 ;; This function is called by:
  4307 ;;		_TMR0_Initialize
  4308 ;;		_StopWatch_Initialize
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           	psect	text20
  4313  0029B2                     __ptext20:
  4314                           	opt stack 0
  4315  0029B2                     _TMR0_SetInterruptHandler:
  4316                           	opt stack 26
  4317                           
  4318                           ;tmr0.c: 134: TMR0_InterruptHandler = InterruptHandler;
  4319                           
  4320                           ; BSR set to: 63
  4321                           ;incstack = 0
  4322  0029B2  0060  F004  F02E   	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  4323  0029B8  0060  F008  F02F   	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  4324  0029BE  0012               	return		;funcret
  4325  0029C0                     __end_of_TMR0_SetInterruptHandler:
  4326                           	opt stack 0
  4327                           
  4328 ;; *************** function _PIN_MANAGER_Initialize *****************
  4329 ;; Defined at:
  4330 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;		None
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;		None
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  1    wreg      void 
  4337 ;; Registers used:
  4338 ;;		wreg, status,2
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4348 ;;Total ram usage:        0 bytes
  4349 ;; Hardware stack levels used:    1
  4350 ;; Hardware stack levels required when called:    3
  4351 ;; This function calls:
  4352 ;;		Nothing
  4353 ;; This function is called by:
  4354 ;;		_SYSTEM_Initialize
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           	psect	text21
  4359  00266C                     __ptext21:
  4360                           	opt stack 0
  4361  00266C                     _PIN_MANAGER_Initialize:
  4362                           	opt stack 26
  4363                           
  4364                           ;pin_manager.c: 57: LATE = 0x00;
  4365                           
  4366                           ;incstack = 0
  4367  00266C  0E00               	movlw	0
  4368  00266E  013F               	movlb	63	; () banked
  4369  002670  6FBE               	movwf	190,b	;volatile
  4370                           
  4371                           ; BSR set to: 63
  4372                           ;pin_manager.c: 58: LATD = 0xFF;
  4373  002672  013F               	movlb	63	; () banked
  4374  002674  69BD               	setf	189,b	;volatile
  4375                           
  4376                           ;pin_manager.c: 59: LATA = 0x00;
  4377  002676  0E00               	movlw	0
  4378  002678  013F               	movlb	63	; () banked
  4379  00267A  6FBA               	movwf	186,b	;volatile
  4380                           
  4381                           ; BSR set to: 63
  4382                           ;pin_manager.c: 60: LATB = 0xFF;
  4383  00267C  013F               	movlb	63	; () banked
  4384  00267E  69BB               	setf	187,b	;volatile
  4385                           
  4386                           ; BSR set to: 63
  4387                           ;pin_manager.c: 61: LATC = 0xFF;
  4388  002680  013F               	movlb	63	; () banked
  4389  002682  69BC               	setf	188,b	;volatile
  4390                           
  4391                           ;pin_manager.c: 66: TRISE = 0x07;
  4392  002684  0E07               	movlw	7
  4393  002686  013F               	movlb	63	; () banked
  4394  002688  6FC6               	movwf	198,b	;volatile
  4395                           
  4396                           ; BSR set to: 63
  4397                           ;pin_manager.c: 67: TRISA = 0xFF;
  4398  00268A  013F               	movlb	63	; () banked
  4399  00268C  69C2               	setf	194,b	;volatile
  4400                           
  4401                           ;pin_manager.c: 68: TRISB = 0x00;
  4402  00268E  0E00               	movlw	0
  4403  002690  013F               	movlb	63	; () banked
  4404  002692  6FC3               	movwf	195,b	;volatile
  4405                           
  4406                           ;pin_manager.c: 69: TRISC = 0x00;
  4407  002694  0E00               	movlw	0
  4408  002696  013F               	movlb	63	; () banked
  4409  002698  6FC4               	movwf	196,b	;volatile
  4410                           
  4411                           ;pin_manager.c: 70: TRISD = 0x00;
  4412  00269A  0E00               	movlw	0
  4413  00269C  013F               	movlb	63	; () banked
  4414  00269E  6FC5               	movwf	197,b	;volatile
  4415                           
  4416                           ;pin_manager.c: 75: ANSELC = 0x00;
  4417  0026A0  0E00               	movlw	0
  4418  0026A2  013A               	movlb	58	; () banked
  4419  0026A4  6F60               	movwf	96,b	;volatile
  4420                           
  4421                           ;pin_manager.c: 76: ANSELB = 0x00;
  4422  0026A6  0E00               	movlw	0
  4423  0026A8  013A               	movlb	58	; () banked
  4424  0026AA  6F50               	movwf	80,b	;volatile
  4425                           
  4426                           ;pin_manager.c: 77: ANSELD = 0x00;
  4427  0026AC  0E00               	movlw	0
  4428  0026AE  013A               	movlb	58	; () banked
  4429  0026B0  6F70               	movwf	112,b	;volatile
  4430                           
  4431                           ;pin_manager.c: 78: ANSELE = 0x07;
  4432  0026B2  0E07               	movlw	7
  4433  0026B4  013A               	movlb	58	; () banked
  4434  0026B6  6F80               	movwf	128,b	;volatile
  4435                           
  4436                           ;pin_manager.c: 79: ANSELA = 0x00;
  4437  0026B8  0E00               	movlw	0
  4438  0026BA  013A               	movlb	58	; () banked
  4439  0026BC  6F40               	movwf	64,b	;volatile
  4440                           
  4441                           ;pin_manager.c: 84: WPUD = 0x00;
  4442  0026BE  0E00               	movlw	0
  4443  0026C0  013A               	movlb	58	; () banked
  4444  0026C2  6F71               	movwf	113,b	;volatile
  4445                           
  4446                           ;pin_manager.c: 85: WPUE = 0x00;
  4447  0026C4  0E00               	movlw	0
  4448  0026C6  013A               	movlb	58	; () banked
  4449  0026C8  6F81               	movwf	129,b	;volatile
  4450                           
  4451                           ;pin_manager.c: 86: WPUB = 0x00;
  4452  0026CA  0E00               	movlw	0
  4453  0026CC  013A               	movlb	58	; () banked
  4454  0026CE  6F51               	movwf	81,b	;volatile
  4455                           
  4456                           ;pin_manager.c: 87: WPUA = 0x00;
  4457  0026D0  0E00               	movlw	0
  4458  0026D2  013A               	movlb	58	; () banked
  4459  0026D4  6F41               	movwf	65,b	;volatile
  4460                           
  4461                           ;pin_manager.c: 88: WPUC = 0x00;
  4462  0026D6  0E00               	movlw	0
  4463  0026D8  013A               	movlb	58	; () banked
  4464  0026DA  6F61               	movwf	97,b	;volatile
  4465                           
  4466                           ;pin_manager.c: 93: ODCONE = 0x00;
  4467  0026DC  0E00               	movlw	0
  4468  0026DE  013A               	movlb	58	; () banked
  4469  0026E0  6F82               	movwf	130,b	;volatile
  4470                           
  4471                           ;pin_manager.c: 94: ODCONA = 0x00;
  4472  0026E2  0E00               	movlw	0
  4473  0026E4  013A               	movlb	58	; () banked
  4474  0026E6  6F42               	movwf	66,b	;volatile
  4475                           
  4476                           ;pin_manager.c: 95: ODCONB = 0x00;
  4477  0026E8  0E00               	movlw	0
  4478  0026EA  013A               	movlb	58	; () banked
  4479  0026EC  6F52               	movwf	82,b	;volatile
  4480                           
  4481                           ;pin_manager.c: 96: ODCONC = 0x00;
  4482  0026EE  0E00               	movlw	0
  4483  0026F0  013A               	movlb	58	; () banked
  4484  0026F2  6F62               	movwf	98,b	;volatile
  4485                           
  4486                           ;pin_manager.c: 97: ODCOND = 0x00;
  4487  0026F4  0E00               	movlw	0
  4488  0026F6  013A               	movlb	58	; () banked
  4489  0026F8  6F72               	movwf	114,b	;volatile
  4490                           
  4491                           ; BSR set to: 58
  4492  0026FA  0012               	return		;funcret
  4493  0026FC                     __end_of_PIN_MANAGER_Initialize:
  4494                           	opt stack 0
  4495                           
  4496 ;; *************** function _OSCILLATOR_Initialize *****************
  4497 ;; Defined at:
  4498 ;;		line 109 in file "mcc_generated_files/mcc.c"
  4499 ;; Parameters:    Size  Location     Type
  4500 ;;		None
  4501 ;; Auto vars:     Size  Location     Type
  4502 ;;		None
  4503 ;; Return value:  Size  Location     Type
  4504 ;;                  1    wreg      void 
  4505 ;; Registers used:
  4506 ;;		wreg, status,2
  4507 ;; Tracked objects:
  4508 ;;		On entry : 0/0
  4509 ;;		On exit  : 0/0
  4510 ;;		Unchanged: 0/0
  4511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4516 ;;Total ram usage:        0 bytes
  4517 ;; Hardware stack levels used:    1
  4518 ;; Hardware stack levels required when called:    3
  4519 ;; This function calls:
  4520 ;;		Nothing
  4521 ;; This function is called by:
  4522 ;;		_SYSTEM_Initialize
  4523 ;; This function uses a non-reentrant model
  4524 ;;
  4525                           
  4526                           	psect	text22
  4527  00293A                     __ptext22:
  4528                           	opt stack 0
  4529  00293A                     _OSCILLATOR_Initialize:
  4530                           	opt stack 26
  4531                           
  4532                           ;mcc.c: 112: OSCCON1 = 0x60;
  4533                           
  4534                           ; BSR set to: 58
  4535                           ;incstack = 0
  4536  00293A  0E60               	movlw	96
  4537  00293C  0139               	movlb	57	; () banked
  4538  00293E  6FD9               	movwf	217,b	;volatile
  4539                           
  4540                           ;mcc.c: 114: OSCCON3 = 0x00;
  4541  002940  0E00               	movlw	0
  4542  002942  0139               	movlb	57	; () banked
  4543  002944  6FDB               	movwf	219,b	;volatile
  4544                           
  4545                           ;mcc.c: 116: OSCEN = 0x00;
  4546  002946  0E00               	movlw	0
  4547  002948  0139               	movlb	57	; () banked
  4548  00294A  6FDD               	movwf	221,b	;volatile
  4549                           
  4550                           ;mcc.c: 118: OSCFRQ = 0x08;
  4551  00294C  0E08               	movlw	8
  4552  00294E  0139               	movlb	57	; () banked
  4553  002950  6FDF               	movwf	223,b	;volatile
  4554                           
  4555                           ;mcc.c: 120: OSCTUNE = 0x00;
  4556  002952  0E00               	movlw	0
  4557  002954  0139               	movlb	57	; () banked
  4558  002956  6FDE               	movwf	222,b	;volatile
  4559                           
  4560                           ; BSR set to: 57
  4561  002958  0012               	return		;funcret
  4562  00295A                     __end_of_OSCILLATOR_Initialize:
  4563                           	opt stack 0
  4564                           
  4565 ;; *************** function _INTERRUPT_Initialize *****************
  4566 ;; Defined at:
  4567 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;		None
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;		None
  4572 ;; Return value:  Size  Location     Type
  4573 ;;                  1    wreg      void 
  4574 ;; Registers used:
  4575 ;;		None
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/0
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4585 ;;Total ram usage:        0 bytes
  4586 ;; Hardware stack levels used:    1
  4587 ;; Hardware stack levels required when called:    3
  4588 ;; This function calls:
  4589 ;;		Nothing
  4590 ;; This function is called by:
  4591 ;;		_SYSTEM_Initialize
  4592 ;; This function uses a non-reentrant model
  4593 ;;
  4594                           
  4595                           	psect	text23
  4596  0029E0                     __ptext23:
  4597                           	opt stack 0
  4598  0029E0                     _INTERRUPT_Initialize:
  4599                           	opt stack 26
  4600                           
  4601                           ;interrupt_manager.c: 54: INTCON0bits.IPEN = 0;
  4602                           
  4603                           ; BSR set to: 57
  4604                           ;incstack = 0
  4605  0029E0  013F               	movlb	63	; () banked
  4606  0029E2  9BD2               	bcf	210,5,b	;volatile
  4607                           
  4608                           ; BSR set to: 63
  4609  0029E4  0012               	return		;funcret
  4610  0029E6                     __end_of_INTERRUPT_Initialize:
  4611                           	opt stack 0
  4612                           
  4613 ;; *************** function _RabbitLightsInit *****************
  4614 ;; Defined at:
  4615 ;;		line 319 in file "LED_Patterns.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;  OP              2    0[COMRAM] PTR  unsigned char 
  4618 ;;		 -> LATB(1), 
  4619 ;;  IP              2    2[COMRAM] PTR  unsigned char 
  4620 ;;		 -> PORTB(1), 
  4621 ;;  SLED            1    4[COMRAM] const unsigned char 
  4622 ;;  num             1    5[COMRAM] const unsigned char 
  4623 ;; Auto vars:     Size  Location     Type
  4624 ;;  rp             13   13[COMRAM] struct RabbitPort
  4625 ;; Return value:  Size  Location     Type
  4626 ;;                  13    0[COMRAM] struct RabbitPort
  4627 ;; Registers used:
  4628 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  4629 ;; Tracked objects:
  4630 ;;		On entry : 0/0
  4631 ;;		On exit  : 0/0
  4632 ;;		Unchanged: 0/0
  4633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4634 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4635 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4637 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4638 ;;Total ram usage:       26 bytes
  4639 ;; Hardware stack levels used:    1
  4640 ;; Hardware stack levels required when called:    3
  4641 ;; This function calls:
  4642 ;;		Nothing
  4643 ;; This function is called by:
  4644 ;;		_main
  4645 ;; This function uses a non-reentrant model
  4646 ;;
  4647                           
  4648                           	psect	text24
  4649  002850                     __ptext24:
  4650                           	opt stack 0
  4651  002850                     _RabbitLightsInit:
  4652                           	opt stack 27
  4653                           
  4654                           ;LED_Patterns.c: 321: RabbitPort rp;
  4655                           ;LED_Patterns.c: 323: rp.OutputPort = (volatile unsigned char *)OP;
  4656                           
  4657                           ; BSR set to: 63
  4658                           ;incstack = 0
  4659  002850  0060  F004  F00E   	movff	RabbitLightsInit@OP,RabbitLightsInit@rp
  4660  002856  0060  F008  F00F   	movff	RabbitLightsInit@OP+1,RabbitLightsInit@rp+1
  4661                           
  4662                           ;LED_Patterns.c: 324: rp.InputPort = (volatile unsigned char *)IP;
  4663  00285C  0060  F00C  F010   	movff	RabbitLightsInit@IP,RabbitLightsInit@rp+2
  4664  002862  0060  F010  F011   	movff	RabbitLightsInit@IP+1,RabbitLightsInit@rp+3
  4665                           
  4666                           ;LED_Patterns.c: 325: rp.StartingLED = SLED;
  4667  002868  0060  F014  F012   	movff	RabbitLightsInit@SLED,RabbitLightsInit@rp+4
  4668                           
  4669                           ;LED_Patterns.c: 326: rp.NumLights = num;
  4670  00286E  0060  F018  F013   	movff	RabbitLightsInit@num,RabbitLightsInit@rp+5
  4671                           
  4672                           ;LED_Patterns.c: 328: rp.RabbitRUN = 0;
  4673  002874  0E00               	movlw	0
  4674  002876  6E19               	movwf	RabbitLightsInit@rp+11,c
  4675                           
  4676                           ;LED_Patterns.c: 329: rp.ShiftCNT = 0;
  4677  002878  0E00               	movlw	0
  4678  00287A  6E18               	movwf	RabbitLightsInit@rp+10,c
  4679                           
  4680                           ;LED_Patterns.c: 330: rp.msCnt = 0;
  4681  00287C  0E00               	movlw	0
  4682  00287E  6E14               	movwf	RabbitLightsInit@rp+6,c
  4683  002880  0E00               	movlw	0
  4684  002882  6E15               	movwf	RabbitLightsInit@rp+7,c
  4685  002884  0E00               	movlw	0
  4686  002886  6E16               	movwf	RabbitLightsInit@rp+8,c
  4687  002888  0E00               	movlw	0
  4688  00288A  6E17               	movwf	RabbitLightsInit@rp+9,c
  4689                           
  4690                           ;LED_Patterns.c: 332: return rp;
  4691  00288C  EE20  F00E         	lfsr	2,RabbitLightsInit@rp
  4692  002890  EE00  F001         	lfsr	0,?_RabbitLightsInit
  4693  002894  0E0C               	movlw	12
  4694  002896                     u1171:
  4695  002896  006F FF6F FFEB     	movff	16347,16363
  4696  00289C  06E8               	decf	16360,f,c
  4697  00289E  E2FB               	bc	u1171
  4698  0028A0  0012               	return	
  4699  0028A2                     __end_of_RabbitLightsInit:
  4700                           	opt stack 0
  4701                           
  4702 ;; *************** function _GunPortInit_ *****************
  4703 ;; Defined at:
  4704 ;;		line 12 in file "LED_Patterns.c"
  4705 ;; Parameters:    Size  Location     Type
  4706 ;;  OP              2    0[COMRAM] PTR  unsigned char 
  4707 ;;		 -> LATD(1), 
  4708 ;;  IP              2    2[COMRAM] PTR  unsigned char 
  4709 ;;		 -> PORTD(1), 
  4710 ;;  GLED            1    4[COMRAM] const unsigned char 
  4711 ;;  TLED            1    5[COMRAM] const unsigned char 
  4712 ;; Auto vars:     Size  Location     Type
  4713 ;;  gp             17   22[COMRAM] struct GunPort
  4714 ;; Return value:  Size  Location     Type
  4715 ;;                  17    0[COMRAM] struct GunPort
  4716 ;; Registers used:
  4717 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  4718 ;; Tracked objects:
  4719 ;;		On entry : 0/0
  4720 ;;		On exit  : 0/0
  4721 ;;		Unchanged: 0/0
  4722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4723 ;;      Params:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4724 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4725 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4726 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4727 ;;Total ram usage:       39 bytes
  4728 ;; Hardware stack levels used:    1
  4729 ;; Hardware stack levels required when called:    3
  4730 ;; This function calls:
  4731 ;;		Nothing
  4732 ;; This function is called by:
  4733 ;;		_main
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           
  4737                           	psect	text25
  4738  0025BC                     __ptext25:
  4739                           	opt stack 0
  4740  0025BC                     _GunPortInit_:
  4741                           	opt stack 27
  4742                           
  4743                           ;LED_Patterns.c: 14: GunPort gp;
  4744                           ;LED_Patterns.c: 16: gp.OutputPort = (volatile unsigned char *)OP;
  4745                           
  4746                           ;incstack = 0
  4747  0025BC  0060  F004  F017   	movff	GunPortInit_@OP,GunPortInit_@gp
  4748  0025C2  0060  F008  F018   	movff	GunPortInit_@OP+1,GunPortInit_@gp+1
  4749                           
  4750                           ;LED_Patterns.c: 17: gp.InputPort = (volatile unsigned char *)IP;
  4751  0025C8  0060  F00C  F019   	movff	GunPortInit_@IP,GunPortInit_@gp+2
  4752  0025CE  0060  F010  F01A   	movff	GunPortInit_@IP+1,GunPortInit_@gp+3
  4753                           
  4754                           ;LED_Patterns.c: 18: gp.TracerPort = (volatile unsigned char *)OP;
  4755  0025D4  0060  F004  F01B   	movff	GunPortInit_@OP,GunPortInit_@gp+4
  4756  0025DA  0060  F008  F01C   	movff	GunPortInit_@OP+1,GunPortInit_@gp+5
  4757                           
  4758                           ;LED_Patterns.c: 19: gp.TracerInPort = (volatile unsigned char *)IP;
  4759  0025E0  0060  F00C  F01D   	movff	GunPortInit_@IP,GunPortInit_@gp+6
  4760  0025E6  0060  F010  F01E   	movff	GunPortInit_@IP+1,GunPortInit_@gp+7
  4761                           
  4762                           ;LED_Patterns.c: 21: gp.GunLED = GLED;
  4763  0025EC  0060  F014  F01F   	movff	GunPortInit_@GLED,GunPortInit_@gp+8
  4764                           
  4765                           ;LED_Patterns.c: 22: gp.TracerLED = TLED;
  4766  0025F2  0060  F018  F020   	movff	GunPortInit_@TLED,GunPortInit_@gp+9
  4767                           
  4768                           ;LED_Patterns.c: 24: gp.GunCnt = 0;
  4769  0025F8  0E00               	movlw	0
  4770  0025FA  6E21               	movwf	GunPortInit_@gp+10,c
  4771  0025FC  0E00               	movlw	0
  4772  0025FE  6E22               	movwf	GunPortInit_@gp+11,c
  4773  002600  0E00               	movlw	0
  4774  002602  6E23               	movwf	GunPortInit_@gp+12,c
  4775  002604  0E00               	movlw	0
  4776  002606  6E24               	movwf	GunPortInit_@gp+13,c
  4777                           
  4778                           ;LED_Patterns.c: 25: gp.ShotsCnt = 0;
  4779  002608  0E00               	movlw	0
  4780  00260A  6E25               	movwf	GunPortInit_@gp+14,c
  4781                           
  4782                           ;LED_Patterns.c: 28: gp.GunRUN = 0;
  4783  00260C  0E00               	movlw	0
  4784  00260E  6E26               	movwf	GunPortInit_@gp+15,c
  4785                           
  4786                           ;LED_Patterns.c: 29: gp.A_B = 0;
  4787  002610  0E00               	movlw	0
  4788  002612  6E27               	movwf	GunPortInit_@gp+16,c
  4789                           
  4790                           ;LED_Patterns.c: 31: *gp.OutputPort |= ((1 << GLED) | (1 << TLED));
  4791  002614  0060  F018  F012   	movff	GunPortInit_@TLED,??_GunPortInit_
  4792  00261A  0E01               	movlw	1
  4793  00261C  6E13               	movwf	(??_GunPortInit_+1)& (0+255),c
  4794  00261E  2A12               	incf	??_GunPortInit_,f,c
  4795  002620  D002               	goto	u1124
  4796  002622                     u1125:
  4797  002622  90D8               	bcf	16344,0,c
  4798  002624  3613               	rlcf	??_GunPortInit_+1,f,c
  4799  002626                     u1124:
  4800  002626  2E12               	decfsz	??_GunPortInit_,f,c
  4801  002628  D7FC               	goto	u1125
  4802  00262A  0060  F014  F014   	movff	GunPortInit_@GLED,??_GunPortInit_+2
  4803  002630  0E01               	movlw	1
  4804  002632  6E15               	movwf	(??_GunPortInit_+3)& (0+255),c
  4805  002634  2A14               	incf	??_GunPortInit_+2,f,c
  4806  002636  D002               	goto	u1134
  4807  002638                     u1135:
  4808  002638  90D8               	bcf	16344,0,c
  4809  00263A  3615               	rlcf	??_GunPortInit_+3,f,c
  4810  00263C                     u1134:
  4811  00263C  2E14               	decfsz	??_GunPortInit_+2,f,c
  4812  00263E  D7FC               	goto	u1135
  4813  002640  5015               	movf	??_GunPortInit_+3,w,c
  4814  002642  1013               	iorwf	??_GunPortInit_+1,w,c
  4815  002644  6E16               	movwf	(??_GunPortInit_+4)& (0+255),c
  4816  002646  0060  F05F  FFD9   	movff	GunPortInit_@gp,16345
  4817  00264C  0060  F063  FFDA   	movff	GunPortInit_@gp+1,16346
  4818  002652  5016               	movf	??_GunPortInit_+4,w,c
  4819  002654  12DF               	iorwf	16351,f,c
  4820                           
  4821                           ;LED_Patterns.c: 33: return gp;
  4822  002656  EE20  F017         	lfsr	2,GunPortInit_@gp
  4823  00265A  EE00  F001         	lfsr	0,?_GunPortInit_
  4824  00265E  0E10               	movlw	16
  4825  002660                     u1141:
  4826  002660  006F FF6F FFEB     	movff	16347,16363
  4827  002666  06E8               	decf	16360,f,c
  4828  002668  E2FB               	bc	u1141
  4829  00266A  0012               	return	
  4830  00266C                     __end_of_GunPortInit_:
  4831                           	opt stack 0
  4832                           
  4833 ;; *************** function _GunPortInit *****************
  4834 ;; Defined at:
  4835 ;;		line 41 in file "LED_Patterns.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;  OP              2    0[COMRAM] PTR  unsigned char 
  4838 ;;		 -> LATC(1), 
  4839 ;;  IP              2    2[COMRAM] PTR  unsigned char 
  4840 ;;		 -> PORTC(1), 
  4841 ;;  TP              2    4[COMRAM] PTR  unsigned char 
  4842 ;;		 -> LATD(1), 
  4843 ;;  TIP             2    6[COMRAM] PTR  unsigned char 
  4844 ;;		 -> PORTD(1), 
  4845 ;;  GLED            1    8[COMRAM] const unsigned char 
  4846 ;;  TLED            1    9[COMRAM] const unsigned char 
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;  gp             17   19[COMRAM] struct GunPort
  4849 ;; Return value:  Size  Location     Type
  4850 ;;                  17    0[COMRAM] struct GunPort
  4851 ;; Registers used:
  4852 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  4853 ;; Tracked objects:
  4854 ;;		On entry : 0/0
  4855 ;;		On exit  : 0/0
  4856 ;;		Unchanged: 0/0
  4857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4858 ;;      Params:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4859 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4860 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4861 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4862 ;;Total ram usage:       36 bytes
  4863 ;; Hardware stack levels used:    1
  4864 ;; Hardware stack levels required when called:    3
  4865 ;; This function calls:
  4866 ;;		Nothing
  4867 ;; This function is called by:
  4868 ;;		_main
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872                           	psect	text26
  4873  00244E                     __ptext26:
  4874                           	opt stack 0
  4875  00244E                     _GunPortInit:
  4876                           	opt stack 27
  4877                           
  4878                           ;LED_Patterns.c: 43: GunPort gp;
  4879                           ;LED_Patterns.c: 45: gp.OutputPort = (volatile unsigned char *)OP;
  4880                           
  4881                           ;incstack = 0
  4882  00244E  0060  F004  F014   	movff	GunPortInit@OP,GunPortInit@gp
  4883  002454  0060  F008  F015   	movff	GunPortInit@OP+1,GunPortInit@gp+1
  4884                           
  4885                           ;LED_Patterns.c: 46: gp.InputPort = (volatile unsigned char *)IP;
  4886  00245A  0060  F00C  F016   	movff	GunPortInit@IP,GunPortInit@gp+2
  4887  002460  0060  F010  F017   	movff	GunPortInit@IP+1,GunPortInit@gp+3
  4888                           
  4889                           ;LED_Patterns.c: 47: gp.TracerPort = (volatile unsigned char *)TP;
  4890  002466  0060  F014  F018   	movff	GunPortInit@TP,GunPortInit@gp+4
  4891  00246C  0060  F018  F019   	movff	GunPortInit@TP+1,GunPortInit@gp+5
  4892                           
  4893                           ;LED_Patterns.c: 48: gp.TracerInPort = (volatile unsigned char *)TIP;
  4894  002472  0060  F01C  F01A   	movff	GunPortInit@TIP,GunPortInit@gp+6
  4895  002478  0060  F020  F01B   	movff	GunPortInit@TIP+1,GunPortInit@gp+7
  4896                           
  4897                           ;LED_Patterns.c: 50: gp.GunLED = GLED;
  4898  00247E  0060  F024  F01C   	movff	GunPortInit@GLED,GunPortInit@gp+8
  4899                           
  4900                           ;LED_Patterns.c: 51: gp.TracerLED = TLED;
  4901  002484  0060  F028  F01D   	movff	GunPortInit@TLED,GunPortInit@gp+9
  4902                           
  4903                           ;LED_Patterns.c: 53: gp.GunCnt = 0;
  4904  00248A  0E00               	movlw	0
  4905  00248C  6E1E               	movwf	GunPortInit@gp+10,c
  4906  00248E  0E00               	movlw	0
  4907  002490  6E1F               	movwf	GunPortInit@gp+11,c
  4908  002492  0E00               	movlw	0
  4909  002494  6E20               	movwf	GunPortInit@gp+12,c
  4910  002496  0E00               	movlw	0
  4911  002498  6E21               	movwf	GunPortInit@gp+13,c
  4912                           
  4913                           ;LED_Patterns.c: 54: gp.ShotsCnt = 0;
  4914  00249A  0E00               	movlw	0
  4915  00249C  6E22               	movwf	GunPortInit@gp+14,c
  4916                           
  4917                           ;LED_Patterns.c: 57: gp.GunRUN = 0;
  4918  00249E  0E00               	movlw	0
  4919  0024A0  6E23               	movwf	GunPortInit@gp+15,c
  4920                           
  4921                           ;LED_Patterns.c: 58: gp.A_B = 0;
  4922  0024A2  0E00               	movlw	0
  4923  0024A4  6E24               	movwf	GunPortInit@gp+16,c
  4924                           
  4925                           ;LED_Patterns.c: 60: *gp.OutputPort |= (1 << GLED);
  4926  0024A6  0060  F024  F012   	movff	GunPortInit@GLED,??_GunPortInit
  4927  0024AC  0E01               	movlw	1
  4928  0024AE  6E13               	movwf	(??_GunPortInit+1)& (0+255),c
  4929  0024B0  2A12               	incf	??_GunPortInit,f,c
  4930  0024B2  D002               	goto	u1094
  4931  0024B4                     u1095:
  4932  0024B4  90D8               	bcf	16344,0,c
  4933  0024B6  3613               	rlcf	??_GunPortInit+1,f,c
  4934  0024B8                     u1094:
  4935  0024B8  2E12               	decfsz	??_GunPortInit,f,c
  4936  0024BA  D7FC               	goto	u1095
  4937  0024BC  0060  F053  FFD9   	movff	GunPortInit@gp,16345
  4938  0024C2  0060  F057  FFDA   	movff	GunPortInit@gp+1,16346
  4939  0024C8  5013               	movf	??_GunPortInit+1,w,c
  4940  0024CA  12DF               	iorwf	16351,f,c
  4941                           
  4942                           ;LED_Patterns.c: 61: *gp.TracerPort |= (1 << TLED);
  4943  0024CC  0060  F028  F012   	movff	GunPortInit@TLED,??_GunPortInit
  4944  0024D2  0E01               	movlw	1
  4945  0024D4  6E13               	movwf	(??_GunPortInit+1)& (0+255),c
  4946  0024D6  2A12               	incf	??_GunPortInit,f,c
  4947  0024D8  D002               	goto	u1104
  4948  0024DA                     u1105:
  4949  0024DA  90D8               	bcf	16344,0,c
  4950  0024DC  3613               	rlcf	??_GunPortInit+1,f,c
  4951  0024DE                     u1104:
  4952  0024DE  2E12               	decfsz	??_GunPortInit,f,c
  4953  0024E0  D7FC               	goto	u1105
  4954  0024E2  0060  F063  FFD9   	movff	GunPortInit@gp+4,16345
  4955  0024E8  0060  F067  FFDA   	movff	GunPortInit@gp+5,16346
  4956  0024EE  5013               	movf	??_GunPortInit+1,w,c
  4957  0024F0  12DF               	iorwf	16351,f,c
  4958                           
  4959                           ;LED_Patterns.c: 63: return gp;
  4960  0024F2  EE20  F014         	lfsr	2,GunPortInit@gp
  4961  0024F6  EE00  F001         	lfsr	0,?_GunPortInit
  4962  0024FA  0E10               	movlw	16
  4963  0024FC                     u1111:
  4964  0024FC  006F FF6F FFEB     	movff	16347,16363
  4965  002502  06E8               	decf	16360,f,c
  4966  002504  E2FB               	bc	u1111
  4967  002506  0012               	return	
  4968  002508                     __end_of_GunPortInit:
  4969                           	opt stack 0
  4970                           
  4971 ;; *************** function _INTERRUPT_InterruptManager *****************
  4972 ;; Defined at:
  4973 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;		None
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;		None
  4978 ;; Return value:  Size  Location     Type
  4979 ;;                  1    wreg      void 
  4980 ;; Registers used:
  4981 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4982 ;; Tracked objects:
  4983 ;;		On entry : 0/0
  4984 ;;		On exit  : 0/0
  4985 ;;		Unchanged: 0/0
  4986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4991 ;;Total ram usage:        0 bytes
  4992 ;; Hardware stack levels used:    1
  4993 ;; Hardware stack levels required when called:    2
  4994 ;; This function calls:
  4995 ;;		_TMR0_ISR
  4996 ;; This function is called by:
  4997 ;;		Interrupt level 2
  4998 ;; This function uses a non-reentrant model
  4999 ;;
  5000                           
  5001                           	psect	text27
  5002  0029A0                     __ptext27:
  5003                           	opt stack 0
  5004  0029A0                     _INTERRUPT_InterruptManager:
  5005                           	opt stack 25
  5006                           
  5007                           ;interrupt_manager.c: 60: if(PIE3bits.TMR0IE == 1 && PIR3bits.TMR0IF == 1)
  5008                           
  5009                           ;incstack = 0
  5010  0029A0  0139               	movlb	57	; () banked
  5011  0029A2  AF93               	btfss	147,7,b	;volatile
  5012  0029A4  0011               	retfie		f
  5013                           
  5014                           ; BSR set to: 57
  5015  0029A6  0139               	movlb	57	; () banked
  5016  0029A8  AFA3               	btfss	163,7,b	;volatile
  5017  0029AA  0011               	retfie		f
  5018                           
  5019                           ; BSR set to: 57
  5020                           ;interrupt_manager.c: 61: {
  5021                           ;interrupt_manager.c: 62: TMR0_ISR();
  5022  0029AC  EC8C  F014         	call	_TMR0_ISR	;wreg free
  5023                           
  5024                           ;interrupt_manager.c: 63: }
  5025  0029B0  0011               	retfie		f
  5026  0029B2                     __end_of_INTERRUPT_InterruptManager:
  5027                           	opt stack 0
  5028                           
  5029 ;; *************** function _TMR0_ISR *****************
  5030 ;; Defined at:
  5031 ;;		line 120 in file "mcc_generated_files/tmr0.c"
  5032 ;; Parameters:    Size  Location     Type
  5033 ;;		None
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;		None
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  1    wreg      void 
  5038 ;; Registers used:
  5039 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5049 ;;Total ram usage:        0 bytes
  5050 ;; Hardware stack levels used:    1
  5051 ;; Hardware stack levels required when called:    1
  5052 ;; This function calls:
  5053 ;;		Absolute function
  5054 ;;		_StopWatchISR
  5055 ;;		_TMR0_DefaultInterruptHandler
  5056 ;; This function is called by:
  5057 ;;		_INTERRUPT_InterruptManager
  5058 ;; This function uses a non-reentrant model
  5059 ;;
  5060                           
  5061                           	psect	text28
  5062  002918                     __ptext28:
  5063                           	opt stack 0
  5064  002918                     _TMR0_ISR:
  5065                           	opt stack 25
  5066                           
  5067                           ;tmr0.c: 123: PIR3bits.TMR0IF = 0;
  5068                           
  5069                           ;incstack = 0
  5070  002918  0139               	movlb	57	; () banked
  5071  00291A  9FA3               	bcf	163,7,b	;volatile
  5072                           
  5073                           ; BSR set to: 57
  5074                           ;tmr0.c: 124: if(TMR0_InterruptHandler)
  5075  00291C  502E               	movf	_TMR0_InterruptHandler,w,c
  5076  00291E  102F               	iorwf	_TMR0_InterruptHandler+1,w,c
  5077  002920  B4D8               	btfsc	16344,2,c
  5078  002922  0012               	return	
  5079                           
  5080                           ; BSR set to: 57
  5081                           ;tmr0.c: 125: {
  5082                           ;tmr0.c: 126: TMR0_InterruptHandler();
  5083  002924  D801               	call	i2u9_48
  5084  002926  0012               	return	
  5085  002928                     i2u9_48:
  5086  002928  0005               	push	
  5087  00292A  6EFA               	movwf	16378,c
  5088  00292C  502E               	movf	_TMR0_InterruptHandler,w,c
  5089  00292E  6EFD               	movwf	16381,c
  5090  002930  502F               	movf	_TMR0_InterruptHandler+1,w,c
  5091  002932  6EFE               	movwf	16382,c
  5092  002934  6AFF               	clrf	16383,c
  5093  002936  50FA               	movf	16378,w,c
  5094  002938  0012               	return		;indir
  5095  00293A                     __end_of_TMR0_ISR:
  5096                           	opt stack 0
  5097                           
  5098 ;; *************** function _StopWatchISR *****************
  5099 ;; Defined at:
  5100 ;;		line 35 in file "stop_watch.c"
  5101 ;; Parameters:    Size  Location     Type
  5102 ;;		None
  5103 ;; Auto vars:     Size  Location     Type
  5104 ;;		None
  5105 ;; Return value:  Size  Location     Type
  5106 ;;                  1    wreg      void 
  5107 ;; Registers used:
  5108 ;;		wreg, status,2, status,0
  5109 ;; Tracked objects:
  5110 ;;		On entry : 0/0
  5111 ;;		On exit  : 0/0
  5112 ;;		Unchanged: 0/0
  5113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5118 ;;Total ram usage:        0 bytes
  5119 ;; Hardware stack levels used:    1
  5120 ;; This function calls:
  5121 ;;		Nothing
  5122 ;; This function is called by:
  5123 ;;		_StopWatch_Initialize
  5124 ;;		_TMR0_ISR
  5125 ;; This function uses a non-reentrant model
  5126 ;;
  5127                           
  5128                           	psect	text29
  5129  0029C0                     __ptext29:
  5130                           	opt stack 0
  5131  0029C0                     _StopWatchISR:
  5132                           	opt stack 25
  5133                           
  5134                           ;stop_watch.c: 37: globalTime++;
  5135                           
  5136                           ;incstack = 0
  5137  0029C0  0E01               	movlw	1
  5138  0029C2  262A               	addwf	_globalTime,f,c	;volatile
  5139  0029C4  0E00               	movlw	0
  5140  0029C6  222B               	addwfc	_globalTime+1,f,c	;volatile
  5141  0029C8  222C               	addwfc	_globalTime+2,f,c	;volatile
  5142  0029CA  222D               	addwfc	_globalTime+3,f,c	;volatile
  5143  0029CC  0012               	return		;funcret
  5144  0029CE                     __end_of_StopWatchISR:
  5145                           	opt stack 0
  5146                           
  5147 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5148 ;; Defined at:
  5149 ;;		line 137 in file "mcc_generated_files/tmr0.c"
  5150 ;; Parameters:    Size  Location     Type
  5151 ;;		None
  5152 ;; Auto vars:     Size  Location     Type
  5153 ;;		None
  5154 ;; Return value:  Size  Location     Type
  5155 ;;                  1    wreg      void 
  5156 ;; Registers used:
  5157 ;;		None
  5158 ;; Tracked objects:
  5159 ;;		On entry : 0/0
  5160 ;;		On exit  : 0/0
  5161 ;;		Unchanged: 0/0
  5162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5167 ;;Total ram usage:        0 bytes
  5168 ;; Hardware stack levels used:    1
  5169 ;; This function calls:
  5170 ;;		Nothing
  5171 ;; This function is called by:
  5172 ;;		_TMR0_Initialize
  5173 ;;		_TMR0_ISR
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           	psect	text30
  5178  0029E6                     __ptext30:
  5179                           	opt stack 0
  5180  0029E6                     _TMR0_DefaultInterruptHandler:
  5181                           	opt stack 25
  5182                           
  5183                           ;incstack = 0
  5184  0029E6  0012               	return		;funcret
  5185  0029E8                     __end_of_TMR0_DefaultInterruptHandler:
  5186                           	opt stack 0
  5187                           
  5188                           ;
  5189                           ; Interrupt Vector Table @ 0x8
  5190                           ;
  5191                           
  5192                           	psect	ivt0x8
  5193  000008                     __pivt0x8:
  5194                           	opt stack 0
  5195  000008                     ivt0x8_base:
  5196                           	opt stack 0
  5197                           
  5198                           ; high-priority vector
  5199  000008  EFD0  F014         	goto	_INTERRUPT_InterruptManager
  5200  000018                     	org	16
  5201                           
  5202                           ; low-priority vector
  5203  000018  00C0               	trap
  5204                           
  5205                           	psect	text31
  5206  000000                     __ptext31:
  5207                           	opt stack 0
  5208                           
  5209                           	psect	rparam


Data Sizes:
    Strings     0
    Constant    44
    Data        0
    BSS         4
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     41      47
    BANK0           160    116     116
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    ?_RabbitLightsInit.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR_8[1]), 

    ?_RabbitLightsInit.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(SFR_8[1]), 

    ?_newStrobe.InPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR_8[1]), 

    ?_newStrobe.OutPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), 

    ?_GunPortInit.TracerInPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), 

    ?_GunPortInit.TracerPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATD(SFR_8[1]), 

    ?_GunPortInit.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), PORTC(SFR_8[1]), 

    ?_GunPortInit.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), LATD(SFR_8[1]), 

    ?_GunPortInit_.TracerInPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), 

    ?_GunPortInit_.TracerPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATD(SFR_8[1]), 

    ?_GunPortInit_.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), PORTC(SFR_8[1]), 

    ?_GunPortInit_.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), LATD(SFR_8[1]), 

    StopRabbitLights@rp.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR_8[1]), 

    StopRabbitLights@rp.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(SFR_8[1]), 

    StopRabbitLights@rp	PTR struct RabbitPort size(2) Largest target is 15
		 -> main@Rabbit(BANK0[13]), 

    UpdateRabbitLEDs@rp.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR_8[1]), 

    UpdateRabbitLEDs@rp.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(SFR_8[1]), 

    UpdateRabbitLEDs@rp	PTR struct RabbitPort size(2) Largest target is 15
		 -> main@Rabbit(BANK0[13]), 

    StartRabbitLights@rp.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR_8[1]), 

    StartRabbitLights@rp.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(SFR_8[1]), 

    StartRabbitLights@rp	PTR struct RabbitPort size(2) Largest target is 15
		 -> main@Rabbit(BANK0[13]), 

    RabbitLightsInit@IP	PTR  unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR_8[1]), 

    RabbitLightsInit@OP	PTR  unsigned char  size(2) Largest target is 1
		 -> LATB(SFR_8[1]), 

    rp.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR_8[1]), 

    rp.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(SFR_8[1]), 

    newStrobe@IP	PTR  unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR_8[1]), 

    newStrobe@OP	PTR  unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), 

    Strobe.InPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR_8[1]), 

    Strobe.OutPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), 

    UpdateStrobeLED@SLED.InPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR_8[1]), 

    UpdateStrobeLED@SLED.OutPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), 

    UpdateStrobeLED@SLED	PTR struct StrobeLED size(2) Largest target is 15
		 -> main@GenStrobe(BANK0[13]), main@ACStrobe(BANK0[13]), main@GStrobe(BANK0[13]), main@EFStrobe(BANK0[13]), 

    StopSyncStrobes@SLED_B	PTR struct StrobeLED size(2) Largest target is 15
		 -> main@ACStrobe(BANK0[13]), 

    StopSyncStrobes@SLED_A	PTR struct StrobeLED size(2) Largest target is 15
		 -> main@GenStrobe(BANK0[13]), 

    StopStrobe@SLED.InPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR_8[1]), 

    StopStrobe@SLED.OutPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), 

    StopStrobe@SLED	PTR struct StrobeLED size(2) Largest target is 15
		 -> main@GenStrobe(BANK0[13]), main@ACStrobe(BANK0[13]), main@GStrobe(BANK0[13]), main@EFStrobe(BANK0[13]), 

    StartSyncStrobes@SLED_A.InPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR_8[1]), 

    StartSyncStrobes@SLED_A.OutPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), 

    StartSyncStrobes@SLED_B.InPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR_8[1]), 

    StartSyncStrobes@SLED_B.OutPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), 

    StartSyncStrobes@SLED_B	PTR struct StrobeLED size(2) Largest target is 15
		 -> main@ACStrobe(BANK0[13]), 

    StartSyncStrobes@SLED_A	PTR struct StrobeLED size(2) Largest target is 15
		 -> main@GenStrobe(BANK0[13]), 

    StartStrobe@SLED.InPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR_8[1]), 

    StartStrobe@SLED.OutPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), 

    StartStrobe@SLED	PTR struct StrobeLED size(2) Largest target is 15
		 -> main@GenStrobe(BANK0[13]), main@GStrobe(BANK0[13]), main@EFStrobe(BANK0[13]), 

    StopGunFirePattern@gp.TracerInPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), 

    StopGunFirePattern@gp.TracerPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATD(SFR_8[1]), 

    StopGunFirePattern@gp.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), PORTC(SFR_8[1]), 

    StopGunFirePattern@gp.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), LATD(SFR_8[1]), 

    StopGunFirePattern@gp	PTR struct GunPort size(2) Largest target is 21
		 -> main@Gun3(BANK0[17]), main@Gun2(BANK0[17]), main@Gun1(BANK0[17]), 

    UpdateGunLED@gp.TracerInPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), 

    UpdateGunLED@gp.TracerPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATD(SFR_8[1]), 

    UpdateGunLED@gp.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), PORTC(SFR_8[1]), 

    UpdateGunLED@gp.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), LATD(SFR_8[1]), 

    UpdateGunLED@gp	PTR struct GunPort size(2) Largest target is 21
		 -> main@Gun3(BANK0[17]), main@Gun2(BANK0[17]), main@Gun1(BANK0[17]), 

    StartGunFirePattern@gp.TracerInPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), 

    StartGunFirePattern@gp.TracerPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATD(SFR_8[1]), 

    StartGunFirePattern@gp.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), PORTC(SFR_8[1]), 

    StartGunFirePattern@gp.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), LATD(SFR_8[1]), 

    StartGunFirePattern@gp	PTR struct GunPort size(2) Largest target is 21
		 -> main@Gun3(BANK0[17]), main@Gun2(BANK0[17]), main@Gun1(BANK0[17]), 

    GunPortInit@TIP	PTR  unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), 

    GunPortInit@TP	PTR  unsigned char  size(2) Largest target is 1
		 -> LATD(SFR_8[1]), 

    GunPortInit@IP	PTR  unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR_8[1]), 

    GunPortInit@OP	PTR  unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), 

    gp.TracerInPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), 

    gp.TracerPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATD(SFR_8[1]), 

    gp.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), PORTC(SFR_8[1]), 

    gp.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), LATD(SFR_8[1]), 

    GunPortInit_@IP	PTR  unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), 

    GunPortInit_@OP	PTR  unsigned char  size(2) Largest target is 1
		 -> LATD(SFR_8[1]), 

    gp.TracerInPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), 

    gp.TracerPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATD(SFR_8[1]), 

    gp.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), PORTC(SFR_8[1]), 

    gp.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), LATD(SFR_8[1]), 

    S403RabbitPort$InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR_8[1]), 

    Rabbit.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR_8[1]), 

    S403RabbitPort$OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(SFR_8[1]), 

    Rabbit.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(SFR_8[1]), 

    GenStrobe.InPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR_8[1]), 

    GenStrobe.OutPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), 

    ACStrobe.InPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR_8[1]), 

    ACStrobe.OutPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), 

    GStrobe.InPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR_8[1]), 

    GStrobe.OutPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), 

    S386StrobeLED$InPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR_8[1]), 

    EFStrobe.InPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR_8[1]), 

    S386StrobeLED$OutPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), 

    EFStrobe.OutPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), 

    Gun3.TracerInPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), 

    Gun3.TracerPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATD(SFR_8[1]), 

    Gun3.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), PORTC(SFR_8[1]), 

    Gun3.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), LATD(SFR_8[1]), 

    Gun2.TracerInPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), 

    Gun2.TracerPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATD(SFR_8[1]), 

    Gun2.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), PORTC(SFR_8[1]), 

    Gun2.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), LATD(SFR_8[1]), 

    S348GunPort$TracerInPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), 

    Gun1.TracerInPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), 

    S348GunPort$TracerPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATD(SFR_8[1]), 

    Gun1.TracerPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATD(SFR_8[1]), 

    S348GunPort$InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), PORTC(SFR_8[1]), 

    Gun1.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), PORTC(SFR_8[1]), 

    S348GunPort$OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), LATD(SFR_8[1]), 

    Gun1.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), LATD(SFR_8[1]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> StopWatchISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> StopWatchISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_GunPortInit_
    _UpdateStrobeLED->_GetCurrentTime
    _UpdateRabbitLEDs->_GetCurrentTime
    _UpdateGunLED->_GetCurrentTime
    _StopWatch_Initialize->_TMR0_SetInterruptHandler
    _StopSyncStrobes->_StopStrobe
    _StartSyncStrobes->_StartStrobe
    _StartStrobe->_StopStrobe
    _StartRabbitLights->_GetCurrentTime
    _StartGunFirePattern->_StopGunFirePattern
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               118   118      0   14539
                                             39 COMRAM     2     2      0
                                              0 BANK0    116   116      0
                        _GunPortInit
                       _GunPortInit_
                   _RabbitLightsInit
                  _SYSTEM_Initialize
                _StartGunFirePattern
                  _StartRabbitLights
                     _StartStopWatch
                        _StartStrobe
                   _StartSyncStrobes
                 _StopGunFirePattern
                   _StopRabbitLights
                         _StopStrobe
                    _StopSyncStrobes
               _StopWatch_Initialize
                       _UpdateGunLED
                   _UpdateRabbitLEDs
                    _UpdateStrobeLED
                          _newStrobe
 ---------------------------------------------------------------------------------
 (1) _newStrobe                                           28    15     13    1539
                                              0 COMRAM    28    15     13
 ---------------------------------------------------------------------------------
 (1) _UpdateStrobeLED                                     14    12      2    1228
                                              4 COMRAM    14    12      2
                     _GetCurrentTime
 ---------------------------------------------------------------------------------
 (1) _UpdateRabbitLEDs                                     9     7      2     566
                                              4 COMRAM     9     7      2
                     _GetCurrentTime
 ---------------------------------------------------------------------------------
 (1) _UpdateGunLED                                         7     5      2     822
                                              4 COMRAM     7     5      2
                     _GetCurrentTime
 ---------------------------------------------------------------------------------
 (1) _StopWatch_Initialize                                 0     0      0     348
                    _TMR0_Initialize
           _TMR0_SetInterruptHandler
                     _TMR0_StopTimer
 ---------------------------------------------------------------------------------
 (2) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _StopSyncStrobes                                      4     0      4     740
                                              6 COMRAM     4     0      4
                         _StopStrobe
 ---------------------------------------------------------------------------------
 (1) _StopRabbitLights                                     6     4      2     164
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _StartSyncStrobes                                    16     8      8    1985
                                             16 COMRAM    16     8      8
                        _StartStrobe
                         _StopStrobe
 ---------------------------------------------------------------------------------
 (2) _StartStrobe                                         10     8      2     948
                                              6 COMRAM    10     8      2
                     _GetCurrentTime
                         _StopStrobe
 ---------------------------------------------------------------------------------
 (2) _StopStrobe                                           6     4      2     544
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _StartStopWatch                                       0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _StartRabbitLights                                   12    10      2     345
                                              4 COMRAM    12    10      2
                     _GetCurrentTime
 ---------------------------------------------------------------------------------
 (1) _StartGunFirePattern                                 10     8      2     884
                                              6 COMRAM    10     8      2
                     _GetCurrentTime
                 _StopGunFirePattern
 ---------------------------------------------------------------------------------
 (1) _StopGunFirePattern                                   6     4      2     436
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _GetCurrentTime                                       4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RabbitLightsInit                                    26    13     13     559
                                              0 COMRAM    26    13     13
 ---------------------------------------------------------------------------------
 (1) _GunPortInit_                                        39    22     17     741
                                              0 COMRAM    39    22     17
 ---------------------------------------------------------------------------------
 (1) _GunPortInit                                         36    19     17    1372
                                              0 COMRAM    36    19     17
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
                       _StopWatchISR *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StopWatchISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GunPortInit
   _GunPortInit_
   _RabbitLightsInit
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _StartGunFirePattern
     _GetCurrentTime
     _StopGunFirePattern
   _StartRabbitLights
     _GetCurrentTime
   _StartStopWatch
     _TMR0_StartTimer
   _StartStrobe
     _GetCurrentTime
     _StopStrobe
   _StartSyncStrobes
     _StartStrobe
       _GetCurrentTime
       _StopStrobe
     _StopStrobe
   _StopGunFirePattern
   _StopRabbitLights
   _StopStrobe
   _StopSyncStrobes
     _StopStrobe
   _StopWatch_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR0_SetInterruptHandler
     _TMR0_StopTimer
   _UpdateGunLED
     _GetCurrentTime
   _UpdateRabbitLEDs
     _GetCurrentTime
   _UpdateStrobeLED
     _GetCurrentTime
   _newStrobe

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _StopWatchISR *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     74      74       5       72.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     29      2F       1       49.5%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A3      32        0.0%
DATA                 0      0      A3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Fri Jan 12 21:43:58 2018

               __end_of_STROBE_ON_TIME_MS 101D                               __CFG_CP$OFF 000000  
                        _StopRabbitLights 2778                              _StopWatchISR 29C0  
                             __CFG_LVP$ON 000000                             main@GenStrobe 00BA  
                                     l240 1868                                       l241 18FA  
                                     l233 17A4                                       l322 1B74  
                                     l234 17FE                                       l323 1AF8  
                                     l243 1926                                       l235 17E8  
                                     l316 1F92                                       l244 196C  
                                     l341 2244                                       l237 1816  
                                     l342 2266                                       l246 1978  
                                     l238 185C                                       l327 1C66  
                                     l337 2362                                       l362 120C  
                                     l355 15EC                                       l363 13A8  
                                     l364 12FA                                       l356 1066  
                                     l373 148A                                       l357 113E  
                                     l358 11E6                                       l375 1554  
                                     l359 119E                                       l368 1464  
                                     l369 141C                                       l386 2162  
                                     l394 1DC6                                       l387 215C  
                                     l395 1DC0                                       l397 1EC2  
                                     l398 1E50                         ??_StopSyncStrobes 000B  
                                     tosl 003FFD                                       wreg 003FE8  
                           __CFG_BBEN$OFF 000000                              __CFG_ZCD$OFF 000000  
                                    l1642 2244                        _AC_STROBE_DELAY_MS 1009  
                                    u1111 24FC                                      u1104 24DE  
                                    u1105 24DA                                      u1034 2822  
                                    u1035 281E                                      u1124 2626  
                                    u1204 2098                                      u1141 2660  
                                    u1125 2622                                      u1205 2094  
                                    u1134 263C                                      u1054 2546  
                                    u1310 1A32                                      u1135 2638  
                                    u1055 2542                                      u1064 258E  
                                    u1320 1A34                                      u1065 258A  
                                    u1161 276C                                      u1234 2312  
                                    u1154 274E                                      u1171 2896  
                                    u1235 230E                                      u1155 274A  
                                    u1084 241A                                      u1404 1BF0  
                                    u1085 2416                                      u1405 1BEC  
                                    _LATA 003FBA                                      u1094 24B8  
                                    u1254 2194                                      _LATB 003FBB  
                                    u1095 24B4                                      u1255 2190  
                                    _LATC 003FBC                                      u1264 21E0  
                                    u1424 1C96                                      u1344 1A64  
                                    u1600 13CE                                      _LATD 003FBD  
                                    u1265 21DC                                      u1425 1C92  
                                    u1345 1A60                                      _LATE 003FBE  
                                    u1194 204A                                      u1434 1CE4  
                                    u1354 1AAC                                      u1530 122E  
                                    u1514 116C                                      u1195 2046  
                                    u1435 1CE0                                      u1355 1AA8  
                                    u1515 1168                                      u1284 27B6  
                                    u1700 1DB2                                      u1540 1230  
                                    u1460 1088                                      u1285 27B2  
                                    u1710 1DB4                                      u1630 14AC  
                                    u1614 13EA                                      u1470 108A  
                                    u1615 13E6                                      u1640 14AE  
                                    u1801 16EA                                      u1394 1BA2  
                                    u1395 1B9E                                      u1811 1716  
                                    u1580 12B2                                      u1564 1260  
                                    u1565 125C                                      u1821 1742  
                                    u1734 1DF8                                      u1494 10BA  
                                    u1735 1DF4                                      u1495 10B6  
                                    u1831 176E                                      u1664 14DE  
                                    u1665 14DA                                      u1841 179A  
                                    u1674 1570                                      u1675 156C  
                                    u1771 1656                                      u1764 1EF0  
                                    u1924 1888                                      u1765 1EEC  
                                    u1925 1884                                      u1781 1692  
                                    u1854 17C4                                      u1855 17C0  
                                    u1791 16BE                                      u1954 1946  
                                    u1955 1942                                      u1894 1836  
                                    u1895 1832                                      _WPUA 003A41  
                                    _WPUB 003A51                                      _WPUC 003A61  
                                    _WPUD 003A71                                      _WPUE 003A81  
                           __CFG_FCMEN$ON 000000                                      _main 1614  
                         _TMR0_StartTimer 29DA                                      fsr1h 003FE2  
                                    fsr2h 003FDA                                      indf1 003FE7  
                                    indf2 003FDF                                      fsr1l 003FE1  
                                    fsr2l 003FD9                                      start 001A  
                           __CFG_CSWEN$ON 000000                             newStrobe@sLED 0005  
                            ___param_bank 000000                         ?_RabbitLightsInit 0001  
                       ?_UpdateRabbitLEDs 0005                      _StopWatch_Initialize 28D0  
                           ??_GunPortInit 0012                    _GEN_STROBE_OFF_TIME_MS 100D  
                      ??_RabbitLightsInit 000E                        ??_UpdateRabbitLEDs 0007  
                 __end_of_TMR0_Initialize 28D0            ??_TMR0_DefaultInterruptHandler 0001  
          __size_of_OSCILLATOR_Initialize 0020                             ?_GunPortInit_ 0001  
           __end_of_OSCILLATOR_Initialize 295A                                     ?_main 0001  
                           __CFG_WDTE$OFF 000000                            __CFG_DEBUG$OFF 000000  
                                   _OSCEN 0039DD                                     _TMR0H 003FB7  
                                   _TMR0L 003FB6                                     _PORTA 003FCA  
                                   _PORTB 003FCB                                     _PORTC 003FCC  
                                   _PORTD 003FCD                                     _TRISA 003FC2  
                                   _TRISB 003FC3                                     _TRISC 003FC4  
                                   _TRISD 003FC5                                     _TRISE 003FC6  
       __size_of_TMR0_SetInterruptHandler 000E                 ?_TMR0_SetInterruptHandler 0001  
                        __end_of_TMR0_ISR 293A                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                       ??_UpdateStrobeLED 0007                     StartSyncStrobes@delay 0015  
                   _GEN_STROBE_ON_TIME_MS 1011                        __CFG_MCLRE$EXTMCLR 000000  
                                   pclath 003FFA                                     tablat 003FF5  
                                   plusw0 003FEB                                     plusw2 003FDB  
                                   status 003FD8                           __initialization 295A  
                   ?_StopWatch_Initialize 0001                              __end_of_main 19DA  
                          __CFG_SAFEN$OFF 000000                            ??_GunPortInit_ 0012  
             ?_INTERRUPT_InterruptManager 0001                                    ??_main 0028  
                          __CFG_PR1WAY$ON 000000                             __activetblptr 000003  
                     __end_of_GunPortInit 2508                        RabbitLightsInit@IP 0003  
                      RabbitLightsInit@OP 0001                        RabbitLightsInit@rp 000E  
                      UpdateRabbitLEDs@rp 0005                   __end_of_TMR0_StartTimer 29E0  
                                  _ANSELA 003A40                                    _ANSELB 003A50  
                                  _ANSELC 003A60                                    _ANSELD 003A70  
                                  _ANSELE 003A80                                    _T0CON0 003FB8  
                                  _T0CON1 003FB9                            _GetCurrentTime 2974  
                                  _ODCONA 003A42                                    _ODCONB 003A52  
                                  _ODCONC 003A62                                    _ODCOND 003A72  
                                  _ODCONE 003A82                            __CFG_WDTCCS$SC 000000  
                                  _OSCFRQ 0039DF                                    i2u9_48 2928  
                  StartSyncStrobes@SLED_A 0011                    StartSyncStrobes@SLED_B 0013  
               __size_of_StartSyncStrobes 012C                            __CFG_XINST$OFF 000000  
                          __CFG_STVREN$ON 000000                          ?_TMR0_Initialize 0001  
                        ??_StartStopWatch 0001                              __mediumconst 0000  
                                  tblptrh 003FF7                                    tblptrl 003FF6  
                                  tblptru 003FF8                    __end_of_GetCurrentTime 298E  
TMR0_SetInterruptHandler@InterruptHandler 0001             __size_of_INTERRUPT_Initialize 0006  
                       _SYSTEM_Initialize 298E                  __end_of_StopRabbitLights 27E4  
                              __accesstop 0060                   __end_of__initialization 296E  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 000001  
                              _StopStrobe 27E4               __size_of_StopGunFirePattern 00B4  
                       _StartRabbitLights 20C6                    ??_StopWatch_Initialize 0003  
                             newStrobe@IP 0003                               newStrobe@OP 0001  
                         _StopSyncStrobes 28F6                            __pcstackCOMRAM 0001  
                      ?_StartRabbitLights 0005                           newStrobe@Strobe 0010  
             __end_of_StartGunFirePattern 20C6                       ??_SYSTEM_Initialize 0003  
                               ?_TMR0_ISR 0001                               _GunPortInit 244E  
                           ??_StartStrobe 0009                       ??_StartRabbitLights 0007  
                         _GUN_OFF_TIME_MS 1021                           ?_GetCurrentTime 0001  
                        ?_TMR0_StartTimer 0001                 __end_of_SYSTEM_Initialize 29A0  
                         __CFG_IVT1WAY$ON 000000                      __end_of_GunPortInit_ 266C  
                         __CFG_MVECEN$OFF 000000                 __end_of_StartRabbitLights 2214  
                              __pnvCOMRAM 002E                                   IVTBASEH 003FD6  
                                 IVTBASEL 003FD5                                   IVTBASEU 003FD7  
                   StopSyncStrobes@SLED_A 0007                     StopSyncStrobes@SLED_B 0009  
                      __size_of_newStrobe 007C                       RabbitLightsInit@num 0006  
        __end_of_TMR0_SetInterruptHandler 29C0                   __size_of_TMR0_StopTimer 0006  
                              ??_TMR0_ISR 0001                           __CFG_PPS1WAY$ON 000000  
                         _UpdateStrobeLED 102E                       __CFG_PWRTS$PWRT_OFF 000000  
                     __end_of_StartStrobe 244E                                   _OSCCON1 0039D9  
                                 _OSCCON3 0039DB                 __size_of_RabbitLightsInit 0052  
               __size_of_UpdateRabbitLEDs 0216                                   _OSCTUNE 0039DE  
                     StartRabbitLights@rp 0005                                _globalTime 002A  
                     UpdateStrobeLED@SLED 0005                   __end_of_StopSyncStrobes 2918  
                        _StartSyncStrobes 2214            __end_of_GEN_STROBE_OFF_TIME_MS 1011  
                             ?_StopStrobe 0001                                   __Hparam 0000  
                                 __Lparam 0000                __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
                 __end_of_GUN_OFF_TIME_MS 1025                              __psmallconst 1000  
                                 __pcinit 295A                                   __ramtop 1000  
                                 __ptext0 1614                                   __ptext1 26FC  
                                 __ptext2 102E                                   __ptext3 1D5A  
                                 __ptext4 19DA                                   __ptext5 28D0  
                                 __ptext6 29CE                                   __ptext7 28F6  
                                 __ptext8 2778                                   __ptext9 2214  
                         __CFG_WRTAPP$OFF 000000                     _OSCILLATOR_Initialize 293A  
                ??_PIN_MANAGER_Initialize 0001                           __CFG_WRTSAF$OFF 000000  
                       __end_of_newStrobe 2778                             ?_UpdateGunLED 0005  
              __size_of_SYSTEM_Initialize 0012                      end_of_initialization 296E  
                       _GUN_SPACE_TIME_MS 101D                __size_of_StartRabbitLights 014E  
                         StartStrobe@SLED 0007                         _RABBIT_ON_TIME_MS 1005  
              __end_of_STROBE_OFF_TIME_MS 1019                   __end_of_UpdateStrobeLED 1614  
                           GunPortInit@IP 0003                             GunPortInit@OP 0001  
                           GunPortInit@TP 0005                                   postdec2 003FDD  
                           GunPortInit@gp 0014                                   postinc1 003FE6  
                                 postinc2 003FDE                     StartRabbitLights@Mask 0010  
                   __CFG_WDTCPS$WDTCPS_31 000000                               _StartStrobe 2340  
                _TMR0_SetInterruptHandler 29B2                __end_of_RABBIT_OFF_TIME_MS 1005  
                     __size_of_StopStrobe 006C                     __size_of_GunPortInit_ 00B0  
                          ??_UpdateGunLED 0007                                main@Rabbit 0060  
               __end_of_GUN_SPACE_TIME_MS 1021                          __CFG_FEXTOSC$OFF 000000  
                       ?_StopRabbitLights 0001                          ?_StopSyncStrobes 0007  
               __end_of_RABBIT_ON_TIME_MS 1009                        ??_StopRabbitLights 0003  
                          _TMR0_StopTimer 29CE              __end_of_INTERRUPT_Initialize 29E6  
                            ?_GunPortInit 0001                             ?_StopWatchISR 0001  
                       __size_of_TMR0_ISR 0022                              _GunPortInit_ 25BC  
                  ?_OSCILLATOR_Initialize 0001                          ??_GetCurrentTime 0005  
                     start_initialization 295A                          _RabbitLightsInit 2850  
                        _UpdateRabbitLEDs 1D5A                  __size_of_TMR0_Initialize 002E  
         __size_of_PIN_MANAGER_Initialize 0090                      StopGunFirePattern@gp 0001  
                              ivt0x8_base 0008                __end_of_StopGunFirePattern 25BC  
                       UpdateRabbitLEDs@i 000C                    __end_of_TMR0_StopTimer 29D4  
                        __CFG_LPBOREN$OFF 000000                          ?_UpdateStrobeLED 0005  
           __size_of_StopWatch_Initialize 0026                            ??_StopWatchISR 0001  
            __size_of_StartGunFirePattern 0156                  __end_of_StartSyncStrobes 2340  
                             __pbssCOMRAM 002A                             __pcstackBANK0 0060  
                              newStrobe@t 0006                   __size_of_StartStopWatch 0006  
                    __end_of_TRIGGER1_PIN 102D                      __end_of_TRIGGER2_PIN 102C  
                            ??_StopStrobe 0003                     _TMR0_InterruptHandler 002E  
                __size_of_TMR0_StartTimer 0006                      RabbitLightsInit@SLED 0005  
                         ?_TMR0_StopTimer 0001                    _PIN_MANAGER_Initialize 266C  
                    UpdateRabbitLEDs@Mask 000D                      __end_of_UpdateGunLED 1D5A  
            ??_INTERRUPT_InterruptManager 0001                        StartRabbitLights@i 000F  
                  __CFG_BBSIZE$BBSIZE_512 000000                    UpdateRabbitLEDs@buffer 000B  
                             __smallconst 1000                        __end_of_StopStrobe 2850  
                    _INTERRUPT_Initialize 29E0                                 _newStrobe 26FC  
                       ??_TMR0_Initialize 0003                            _GUN_ON_TIME_MS 1025  
                                _PIE3bits 003993                       __CFG_BORV$VBOR_2P45 000000  
     __size_of_INTERRUPT_InterruptManager 0012                ??_TMR0_SetInterruptHandler 0003  
                                _PIR3bits 0039A3                                  _TMR0_ISR 2918  
                            ?_StartStrobe 0007                      __size_of_GunPortInit 00BA  
              __end_of_AC_STROBE_DELAY_MS 100D                        _STROBE_OFF_TIME_MS 1015  
                      StopRabbitLights@rp 0001             __end_of_GEN_STROBE_ON_TIME_MS 1015  
                             _INTCON0bits 003FD2                     ?_INTERRUPT_Initialize 0001  
                        GunPortInit_@GLED 0005                    __end_of_GUN_ON_TIME_MS 1029  
                        GunPortInit_@TLED 0006                                ?_newStrobe 0001  
                      _RABBIT_OFF_TIME_MS 1001                      __end_of_StopWatchISR 29CE  
                          StopStrobe@SLED 0001                                  __Hrparam 0000  
                __end_of_RabbitLightsInit 28A2                  __end_of_UpdateRabbitLEDs 1F70  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                          UpdateGunLED@gp 0005                   ??_OSCILLATOR_Initialize 0001  
                       ??_TMR0_StartTimer 0001                 __size_of_StopRabbitLights 006C  
                              _T0CON0bits 003FB8                                  __pivt0x8 0008  
                                __ptext10 2340                                  __ptext11 27E4  
                                __ptext20 29B2                                  __ptext12 29D4  
                                __ptext21 266C                                  __ptext13 29DA  
                                __ptext30 29E6                                  __ptext22 293A  
                                __ptext14 20C6                                  __ptext31 0000  
                                __ptext23 29E0                                  __ptext15 1F70  
                                __ptext24 2850                                  __ptext16 2508  
                                __ptext25 25BC                                  __ptext17 2974  
                                __ptext26 244E                                  __ptext18 298E  
                                __ptext27 29A0                                  __ptext19 28A2  
                                __ptext28 2918                                  __ptext29 29C0  
                          _StartStopWatch 29D4                             __size_of_main 03C6  
                     _StartGunFirePattern 1F70                     __size_of_UpdateGunLED 0380  
    __end_of_TMR0_DefaultInterruptHandler 29E8     __size_of_TMR0_DefaultInterruptHandler 0002  
            _TMR0_DefaultInterruptHandler 29E6                      __CFG_WDTCWS$WDTCWS_7 000000  
                     __end_of_STROBE1_PIN 102B                       __end_of_STROBE2_PIN 102A  
                __size_of_StopSyncStrobes 0022                        _StopGunFirePattern 2508  
                                main@Gun1 006D                                  main@Gun2 007E  
                                main@Gun3 008F        __end_of_INTERRUPT_InterruptManager 29B2  
              _INTERRUPT_InterruptManager 29A0                           GunPortInit@GLED 0009  
                         GunPortInit@TLED 000A                              _TRIGGER1_PIN 102C  
                            _TRIGGER2_PIN 102B                      ?_StartGunFirePattern 0007  
                     ?_StopGunFirePattern 0001                         ?_StartSyncStrobes 0011  
            __end_of_StopWatch_Initialize 28F6                    __end_of_StartStopWatch 29DA  
                      ??_StartSyncStrobes 0019                    ??_INTERRUPT_Initialize 0001  
                            _UpdateGunLED 19DA                                  intlevel2 0000  
                             ??_newStrobe 000E                          ??_TMR0_StopTimer 0001  
                 ?_PIN_MANAGER_Initialize 0001                         __CFG_CLKOUTEN$OFF 000000  
                    ??_StopGunFirePattern 0003             ?_TMR0_DefaultInterruptHandler 0001  
                          GunPortInit@TIP 0007                            GunPortInit_@IP 0003  
                          GunPortInit_@OP 0001                            GunPortInit_@gp 0017  
                       _STROBE_ON_TIME_MS 1019                  __size_of_UpdateStrobeLED 05E6  
                   ??_StartGunFirePattern 0009                              main@ACStrobe 00AD  
                    __size_of_StartStrobe 010E                           _TMR0_Initialize 28A2  
                            main@EFStrobe 00C7                     __size_of_StopWatchISR 000E  
                         ?_StartStopWatch 0001            __end_of_PIN_MANAGER_Initialize 26FC  
                 __size_of_GetCurrentTime 001A                               _STROBE1_PIN 102A  
                             _STROBE2_PIN 1029                               main@GStrobe 00A0  
                   StartGunFirePattern@gp 0007  
