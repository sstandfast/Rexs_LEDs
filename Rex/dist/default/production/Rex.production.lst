

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sun Jan 21 00:11:07 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46  0000                     
    47                           ; Version 1.44
    48                           ; Generated 14/09/2017 GMT
    49                           ; 
    50                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F46K42 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	smallconst
    83  001000                     __psmallconst:
    84                           	opt stack 0
    85  001000  00                 	db	0
    86  001001                     _RABBIT_OFF_TIME_MS:
    87                           	opt stack 0
    88  001001  0028               	dw	40
    89  001003  0000               	dw	0
    90  001005                     __end_of_RABBIT_OFF_TIME_MS:
    91                           	opt stack 0
    92  001005                     _RABBIT_ON_TIME_MS:
    93                           	opt stack 0
    94  001005  000A               	dw	10
    95  001007  0000               	dw	0
    96  001009                     __end_of_RABBIT_ON_TIME_MS:
    97                           	opt stack 0
    98  001009                     _AC_STROBE_DELAY_MS:
    99                           	opt stack 0
   100  001009  01F4               	dw	500
   101  00100B  0000               	dw	0
   102  00100D                     __end_of_AC_STROBE_DELAY_MS:
   103                           	opt stack 0
   104  00100D                     _GEN_STROBE_OFF_TIME_MS:
   105                           	opt stack 0
   106  00100D  076C               	dw	1900
   107  00100F  0000               	dw	0
   108  001011                     __end_of_GEN_STROBE_OFF_TIME_MS:
   109                           	opt stack 0
   110  001011                     _GEN_STROBE_ON_TIME_MS:
   111                           	opt stack 0
   112  001011  0064               	dw	100
   113  001013  0000               	dw	0
   114  001015                     __end_of_GEN_STROBE_ON_TIME_MS:
   115                           	opt stack 0
   116  001015                     _STROBE_OFF_TIME_MS:
   117                           	opt stack 0
   118  001015  0384               	dw	900
   119  001017  0000               	dw	0
   120  001019                     __end_of_STROBE_OFF_TIME_MS:
   121                           	opt stack 0
   122  001019                     _STROBE_ON_TIME_MS:
   123                           	opt stack 0
   124  001019  0064               	dw	100
   125  00101B  0000               	dw	0
   126  00101D                     __end_of_STROBE_ON_TIME_MS:
   127                           	opt stack 0
   128  00101D                     _GUN_SPACE_TIME_MS:
   129                           	opt stack 0
   130  00101D  0032               	dw	50
   131  00101F  0000               	dw	0
   132  001021                     __end_of_GUN_SPACE_TIME_MS:
   133                           	opt stack 0
   134  001021                     _GUN_OFF_TIME_MS:
   135                           	opt stack 0
   136  001021  0028               	dw	40
   137  001023  0000               	dw	0
   138  001025                     __end_of_GUN_OFF_TIME_MS:
   139                           	opt stack 0
   140  001025                     _GUN_ON_TIME_MS:
   141                           	opt stack 0
   142  001025  000A               	dw	10
   143  001027  0000               	dw	0
   144  001029                     __end_of_GUN_ON_TIME_MS:
   145                           	opt stack 0
   146  001029                     _STROBE2_PIN:
   147                           	opt stack 0
   148  001029  03                 	db	3
   149  00102A                     __end_of_STROBE2_PIN:
   150                           	opt stack 0
   151  00102A                     _STROBE1_PIN:
   152                           	opt stack 0
   153  00102A  02                 	db	2
   154  00102B                     __end_of_STROBE1_PIN:
   155                           	opt stack 0
   156  00102B                     _TRIGGER2_PIN:
   157                           	opt stack 0
   158  00102B  01                 	db	1
   159  00102C                     __end_of_TRIGGER2_PIN:
   160                           	opt stack 0
   161  00102C                     _TRIGGER1_PIN:
   162                           	opt stack 0
   163  00102C  00                 	db	0
   164  00102D                     __end_of_TRIGGER1_PIN:
   165                           	opt stack 0
   166  00102D  00                 	db	0	; dummy byte at the end
   167  0000                     
   168                           	psect	nvCOMRAM
   169  00002E                     __pnvCOMRAM:
   170                           	opt stack 0
   171  00002E                     _TMR0_InterruptHandler:
   172                           	opt stack 0
   173  00002E                     	ds	2
   174  0000                     _OSCTUNE	set	14814
   175  0000                     _OSCFRQ	set	14815
   176  0000                     _OSCEN	set	14813
   177  0000                     _OSCCON3	set	14811
   178  0000                     _OSCCON1	set	14809
   179  0000                     _PIE3bits	set	14739
   180  0000                     _PIR3bits	set	14755
   181  0000                     _ODCOND	set	14962
   182  0000                     _ODCONC	set	14946
   183  0000                     _ODCONB	set	14930
   184  0000                     _ODCONA	set	14914
   185  0000                     _ODCONE	set	14978
   186  0000                     _WPUC	set	14945
   187  0000                     _WPUA	set	14913
   188  0000                     _WPUB	set	14929
   189  0000                     _WPUE	set	14977
   190  0000                     _WPUD	set	14961
   191  0000                     _ANSELA	set	14912
   192  0000                     _ANSELE	set	14976
   193  0000                     _ANSELD	set	14960
   194  0000                     _ANSELB	set	14928
   195  0000                     _ANSELC	set	14944
   196  0000                     _PORTA	set	16330
   197  0000                     _INTCON0bits	set	16338
   198  0000                     _T0CON0bits	set	16312
   199  0000                     _T0CON0	set	16312
   200  0000                     _TMR0L	set	16310
   201  0000                     _TMR0H	set	16311
   202  0000                     _T0CON1	set	16313
   203  0000                     _TRISD	set	16325
   204  0000                     _TRISC	set	16324
   205  0000                     _TRISB	set	16323
   206  0000                     _TRISA	set	16322
   207  0000                     _TRISE	set	16326
   208  0000                     _LATA	set	16314
   209  0000                     _LATE	set	16318
   210  0000                     _PORTB	set	16331
   211  0000                     _PORTD	set	16333
   212  0000                     _PORTC	set	16332
   213  0000                     _LATC	set	16316
   214  0000                     _LATB	set	16315
   215  0000                     _LATD	set	16317
   216                           
   217                           ; #config settings
   218  0000                     
   219                           	psect	cinit
   220  002906                     __pcinit:
   221                           	opt stack 0
   222  002906                     start_initialization:
   223                           	opt stack 0
   224  002906                     __initialization:
   225                           	opt stack 0
   226                           
   227                           ; Clear objects allocated to COMRAM (4 bytes)
   228  002906  6A2D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   229  002908  6A2C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   230  00290A  6A2B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   231  00290C  6A2A               	clrf	__pbssCOMRAM& (0+255),c
   232                           
   233                           ;
   234                           ; Setup IVTBASE
   235                           ;
   236  00290E  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   237  002910  6ED5               	movwf	213,c
   238  002912  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   239  002914  6ED6               	movwf	214,c
   240  002916  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   241  002918  6ED7               	movwf	215,c
   242  00291A                     end_of_initialization:
   243                           	opt stack 0
   244  00291A                     __end_of__initialization:
   245                           	opt stack 0
   246  00291A  0100               	movlb	0
   247  00291C  EFF4  F00A         	goto	_main	;jump to C main() function
   248                           
   249                           	psect	bssCOMRAM
   250  00002A                     __pbssCOMRAM:
   251                           	opt stack 0
   252  00002A                     _globalTime:
   253                           	opt stack 0
   254  00002A                     	ds	4
   255                           
   256                           	psect	cstackBANK0
   257  000060                     __pcstackBANK0:
   258                           	opt stack 0
   259  000060                     main@Rabbit:
   260                           	opt stack 0
   261                           
   262                           ; 13 bytes @ 0x0
   263  000060                     	ds	13
   264  00006D                     main@Gun1:
   265                           	opt stack 0
   266                           
   267                           ; 17 bytes @ 0xD
   268  00006D                     	ds	17
   269  00007E                     main@Gun2:
   270                           	opt stack 0
   271                           
   272                           ; 17 bytes @ 0x1E
   273  00007E                     	ds	17
   274  00008F                     main@Gun3:
   275                           	opt stack 0
   276                           
   277                           ; 17 bytes @ 0x2F
   278  00008F                     	ds	17
   279  0000A0                     main@GStrobe:
   280                           	opt stack 0
   281                           
   282                           ; 13 bytes @ 0x40
   283  0000A0                     	ds	13
   284  0000AD                     main@ACStrobe:
   285                           	opt stack 0
   286                           
   287                           ; 13 bytes @ 0x4D
   288  0000AD                     	ds	13
   289  0000BA                     main@GenStrobe:
   290                           	opt stack 0
   291                           
   292                           ; 13 bytes @ 0x5A
   293  0000BA                     	ds	13
   294  0000C7                     main@EFStrobe:
   295                           	opt stack 0
   296                           
   297                           ; 13 bytes @ 0x67
   298  0000C7                     	ds	13
   299                           
   300                           	psect	cstackCOMRAM
   301  000001                     __pcstackCOMRAM:
   302                           	opt stack 0
   303  000001                     ?_GetCurrentTime:
   304                           	opt stack 0
   305  000001                     ?_newStrobe:
   306                           	opt stack 0
   307  000001                     ?_RabbitLightsInit:
   308                           	opt stack 0
   309  000001                     ?_GunPortInit:
   310                           	opt stack 0
   311  000001                     ?_GunPortInit_:
   312                           	opt stack 0
   313  000001                     TMR0_SetInterruptHandler@InterruptHandler:
   314                           	opt stack 0
   315  000001                     GunPortInit_@OP:
   316                           	opt stack 0
   317  000001                     GunPortInit@OP:
   318                           	opt stack 0
   319  000001                     StopGunFirePattern@gp:
   320                           	opt stack 0
   321  000001                     StopStrobe@SLED:
   322                           	opt stack 0
   323  000001                     newStrobe@OP:
   324                           	opt stack 0
   325  000001                     RabbitLightsInit@OP:
   326                           	opt stack 0
   327  000001                     StopRabbitLights@rp:
   328                           	opt stack 0
   329                           
   330                           ; 2 bytes @ 0x0
   331  000001                     	ds	2
   332  000003                     ??_StopGunFirePattern:
   333  000003                     ??_StopStrobe:
   334  000003                     ??_StopRabbitLights:
   335  000003                     GunPortInit_@IP:
   336                           	opt stack 0
   337  000003                     GunPortInit@IP:
   338                           	opt stack 0
   339  000003                     newStrobe@IP:
   340                           	opt stack 0
   341  000003                     RabbitLightsInit@IP:
   342                           	opt stack 0
   343                           
   344                           ; 2 bytes @ 0x2
   345  000003                     	ds	2
   346  000005                     GunPortInit_@GLED:
   347                           	opt stack 0
   348  000005                     newStrobe@sLED:
   349                           	opt stack 0
   350  000005                     RabbitLightsInit@SLED:
   351                           	opt stack 0
   352  000005                     StopRabbitLights@i:
   353                           	opt stack 0
   354  000005                     GunPortInit@TP:
   355                           	opt stack 0
   356  000005                     UpdateGunLED@gp:
   357                           	opt stack 0
   358  000005                     UpdateStrobeLED@SLED:
   359                           	opt stack 0
   360  000005                     UpdateRabbitLEDs@rp:
   361                           	opt stack 0
   362                           
   363                           ; 2 bytes @ 0x4
   364  000005                     	ds	1
   365  000006                     GunPortInit_@TLED:
   366                           	opt stack 0
   367  000006                     newStrobe@t:
   368                           	opt stack 0
   369  000006                     RabbitLightsInit@num:
   370                           	opt stack 0
   371  000006                     StopRabbitLights@Mask:
   372                           	opt stack 0
   373                           
   374                           ; 1 bytes @ 0x5
   375  000006                     	ds	1
   376  000007                     ??_UpdateGunLED:
   377  000007                     ??_UpdateStrobeLED:
   378  000007                     ??_UpdateRabbitLEDs:
   379  000007                     GunPortInit@TIP:
   380                           	opt stack 0
   381  000007                     StartGunFirePattern@gp:
   382                           	opt stack 0
   383  000007                     StartStrobe@SLED:
   384                           	opt stack 0
   385  000007                     StopSyncStrobes@SLED_A:
   386                           	opt stack 0
   387  000007                     StartRabbitLights@rp:
   388                           	opt stack 0
   389                           
   390                           ; 2 bytes @ 0x6
   391  000007                     	ds	2
   392  000009                     ??_StartGunFirePattern:
   393  000009                     ??_StartStrobe:
   394  000009                     ??_StartRabbitLights:
   395  000009                     GunPortInit@GLED:
   396                           	opt stack 0
   397  000009                     StopSyncStrobes@SLED_B:
   398                           	opt stack 0
   399                           
   400                           ; 2 bytes @ 0x8
   401  000009                     	ds	1
   402  00000A                     GunPortInit@TLED:
   403                           	opt stack 0
   404                           
   405                           ; 1 bytes @ 0x9
   406  00000A                     	ds	1
   407  00000B                     UpdateRabbitLEDs@buffer:
   408                           	opt stack 0
   409                           
   410                           ; 1 bytes @ 0xA
   411  00000B                     	ds	1
   412  00000C                     UpdateRabbitLEDs@i:
   413                           	opt stack 0
   414                           
   415                           ; 1 bytes @ 0xB
   416  00000C                     	ds	1
   417  00000D                     UpdateRabbitLEDs@Mask:
   418                           	opt stack 0
   419                           
   420                           ; 1 bytes @ 0xC
   421  00000D                     	ds	1
   422  00000E                     ??_newStrobe:
   423  00000E                     RabbitLightsInit@rp:
   424                           	opt stack 0
   425                           
   426                           ; 13 bytes @ 0xD
   427  00000E                     	ds	2
   428  000010                     newStrobe@Strobe:
   429                           	opt stack 0
   430                           
   431                           ; 13 bytes @ 0xF
   432  000010                     	ds	1
   433  000011                     StartRabbitLights@i:
   434                           	opt stack 0
   435  000011                     StartSyncStrobes@SLED_A:
   436                           	opt stack 0
   437                           
   438                           ; 2 bytes @ 0x10
   439  000011                     	ds	1
   440  000012                     ??_GunPortInit:
   441  000012                     ??_GunPortInit_:
   442  000012                     StartRabbitLights@Mask:
   443                           	opt stack 0
   444                           
   445                           ; 1 bytes @ 0x11
   446  000012                     	ds	1
   447  000013                     StartSyncStrobes@SLED_B:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x12
   451  000013                     	ds	1
   452  000014                     GunPortInit@gp:
   453                           	opt stack 0
   454                           
   455                           ; 17 bytes @ 0x13
   456  000014                     	ds	1
   457  000015                     StartSyncStrobes@delay:
   458                           	opt stack 0
   459                           
   460                           ; 4 bytes @ 0x14
   461  000015                     	ds	2
   462  000017                     GunPortInit_@gp:
   463                           	opt stack 0
   464                           
   465                           ; 17 bytes @ 0x16
   466  000017                     	ds	2
   467  000019                     ??_StartSyncStrobes:
   468                           
   469                           ; 1 bytes @ 0x18
   470  000019                     	ds	15
   471  000028                     ??_main:
   472                           
   473                           ; 1 bytes @ 0x27
   474  000028                     	ds	2
   475                           
   476 ;;
   477 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   478 ;;
   479 ;; *************** function _main *****************
   480 ;; Defined at:
   481 ;;		line 29 in file "main.c"
   482 ;; Parameters:    Size  Location     Type
   483 ;;		None
   484 ;; Auto vars:     Size  Location     Type
   485 ;;  Gun3           17   47[BANK0 ] struct GunPort
   486 ;;  Gun2           17   30[BANK0 ] struct GunPort
   487 ;;  Gun1           17   13[BANK0 ] struct GunPort
   488 ;;  EFStrobe       13  103[BANK0 ] struct StrobeLED
   489 ;;  GenStrobe      13   90[BANK0 ] struct StrobeLED
   490 ;;  ACStrobe       13   77[BANK0 ] struct StrobeLED
   491 ;;  GStrobe        13   64[BANK0 ] struct StrobeLED
   492 ;;  Rabbit         13    0[BANK0 ] struct RabbitPort
   493 ;; Return value:  Size  Location     Type
   494 ;;                  1    wreg      void 
   495 ;; Registers used:
   496 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   497 ;; Tracked objects:
   498 ;;		On entry : 0/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   503 ;;      Locals:         0     116       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   504 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   505 ;;      Totals:         2     116       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   506 ;;Total ram usage:      118 bytes
   507 ;; Hardware stack levels required when called:    6
   508 ;; This function calls:
   509 ;;		_GunPortInit
   510 ;;		_GunPortInit_
   511 ;;		_RabbitLightsInit
   512 ;;		_SYSTEM_Initialize
   513 ;;		_StartGunFirePattern
   514 ;;		_StartRabbitLights
   515 ;;		_StartStopWatch
   516 ;;		_StartStrobe
   517 ;;		_StartSyncStrobes
   518 ;;		_StopGunFirePattern
   519 ;;		_StopRabbitLights
   520 ;;		_StopStrobe
   521 ;;		_StopSyncStrobes
   522 ;;		_StopWatch_Initialize
   523 ;;		_UpdateGunLED
   524 ;;		_UpdateRabbitLEDs
   525 ;;		_UpdateStrobeLED
   526 ;;		_newStrobe
   527 ;; This function is called by:
   528 ;;		Startup code after reset
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532                           	psect	text0
   533  0015E8                     __ptext0:
   534                           	opt stack 0
   535  0015E8                     _main:
   536                           	opt stack 25
   537                           
   538                           ;main.c: 32: SYSTEM_Initialize();
   539                           
   540                           ;incstack = 0
   541  0015E8  ECA9  F014         	call	_SYSTEM_Initialize	;wreg free
   542                           
   543                           ;main.c: 35: StopWatch_Initialize();
   544  0015EC  EC4E  F014         	call	_StopWatch_Initialize	;wreg free
   545                           
   546                           ;main.c: 38: (INTCON0bits.GIE = 1);
   547  0015F0  013F               	movlb	63	; () banked
   548  0015F2  8FD2               	bsf	210,7,b	;volatile
   549                           
   550                           ; BSR set to: 63
   551                           ;main.c: 41: StartStopWatch();
   552  0015F4  ECCB  F014         	call	_StartStopWatch	;wreg free
   553                           
   554                           ;main.c: 44: GunPort Gun1 = GunPortInit(&LATC,&PORTC,&LATD,&PORTD,5,2);
   555  0015F8  0EBC               	movlw	188
   556  0015FA  6E01               	movwf	GunPortInit@OP,c
   557  0015FC  0E3F               	movlw	63
   558  0015FE  6E02               	movwf	GunPortInit@OP+1,c
   559  001600  0ECC               	movlw	204
   560  001602  6E03               	movwf	GunPortInit@IP,c
   561  001604  0E3F               	movlw	63
   562  001606  6E04               	movwf	GunPortInit@IP+1,c
   563  001608  0EBD               	movlw	189
   564  00160A  6E05               	movwf	GunPortInit@TP,c
   565  00160C  0E3F               	movlw	63
   566  00160E  6E06               	movwf	GunPortInit@TP+1,c
   567  001610  0ECD               	movlw	205
   568  001612  6E07               	movwf	GunPortInit@TIP,c
   569  001614  0E3F               	movlw	63
   570  001616  6E08               	movwf	GunPortInit@TIP+1,c
   571  001618  0E05               	movlw	5
   572  00161A  6E09               	movwf	GunPortInit@GLED,c
   573  00161C  0E02               	movlw	2
   574  00161E  6E0A               	movwf	GunPortInit@TLED,c
   575  001620  EC12  F012         	call	_GunPortInit	;wreg free
   576  001624  EE20  F06D         	lfsr	2,main@Gun1
   577  001628  0E10               	movlw	16
   578  00162A                     u1781:
   579  00162A  006F FFAF FFDB     	movff	16363,16347
   580  001630  06E8               	decf	16360,f,c
   581  001632  E2FB               	bc	u1781
   582                           
   583                           ;main.c: 45: GunPort Gun2 = GunPortInit(&LATC,&PORTC,&LATD,&PORTD,4,1);
   584  001634  0EBC               	movlw	188
   585  001636  6E01               	movwf	GunPortInit@OP,c
   586  001638  0E3F               	movlw	63
   587  00163A  6E02               	movwf	GunPortInit@OP+1,c
   588  00163C  0ECC               	movlw	204
   589  00163E  6E03               	movwf	GunPortInit@IP,c
   590  001640  0E3F               	movlw	63
   591  001642  6E04               	movwf	GunPortInit@IP+1,c
   592  001644  0EBD               	movlw	189
   593  001646  6E05               	movwf	GunPortInit@TP,c
   594  001648  0E3F               	movlw	63
   595  00164A  6E06               	movwf	GunPortInit@TP+1,c
   596  00164C  0ECD               	movlw	205
   597  00164E  6E07               	movwf	GunPortInit@TIP,c
   598  001650  0E3F               	movlw	63
   599  001652  6E08               	movwf	GunPortInit@TIP+1,c
   600  001654  0E04               	movlw	4
   601  001656  6E09               	movwf	GunPortInit@GLED,c
   602  001658  0E01               	movlw	1
   603  00165A  6E0A               	movwf	GunPortInit@TLED,c
   604  00165C  EC12  F012         	call	_GunPortInit	;wreg free
   605  001660  EE20  F07E         	lfsr	2,main@Gun2
   606  001664  0E10               	movlw	16
   607  001666                     u1791:
   608  001666  006F FFAF FFDB     	movff	16363,16347
   609  00166C  06E8               	decf	16360,f,c
   610  00166E  E2FB               	bc	u1791
   611                           
   612                           ;main.c: 46: GunPort Gun3 = GunPortInit_(&LATD,&PORTD,3,0);
   613  001670  0EBD               	movlw	189
   614  001672  6E01               	movwf	GunPortInit_@OP,c
   615  001674  0E3F               	movlw	63
   616  001676  6E02               	movwf	GunPortInit_@OP+1,c
   617  001678  0ECD               	movlw	205
   618  00167A  6E03               	movwf	GunPortInit_@IP,c
   619  00167C  0E3F               	movlw	63
   620  00167E  6E04               	movwf	GunPortInit_@IP+1,c
   621  001680  0E03               	movlw	3
   622  001682  6E05               	movwf	GunPortInit_@GLED,c
   623  001684  0E00               	movlw	0
   624  001686  6E06               	movwf	GunPortInit_@TLED,c
   625  001688  ECC9  F012         	call	_GunPortInit_	;wreg free
   626  00168C  EE20  F08F         	lfsr	2,main@Gun3
   627  001690  0E10               	movlw	16
   628  001692                     u1801:
   629  001692  006F FFAF FFDB     	movff	16363,16347
   630  001698  06E8               	decf	16360,f,c
   631  00169A  E2FB               	bc	u1801
   632                           
   633                           ;main.c: 49: StrobeLED EFStrobe = newStrobe(&LATC,&PORTC,3,EF_Strobe);
   634  00169C  0EBC               	movlw	188
   635  00169E  6E01               	movwf	newStrobe@OP,c
   636  0016A0  0E3F               	movlw	63
   637  0016A2  6E02               	movwf	newStrobe@OP+1,c
   638  0016A4  0ECC               	movlw	204
   639  0016A6  6E03               	movwf	newStrobe@IP,c
   640  0016A8  0E3F               	movlw	63
   641  0016AA  6E04               	movwf	newStrobe@IP+1,c
   642  0016AC  0E03               	movlw	3
   643  0016AE  6E05               	movwf	newStrobe@sLED,c
   644  0016B0  0E00               	movlw	0
   645  0016B2  6E06               	movwf	newStrobe@t,c
   646  0016B4  EC6C  F013         	call	_newStrobe	;wreg free
   647  0016B8  EE20  F0C7         	lfsr	2,main@EFStrobe
   648  0016BC  0E0C               	movlw	12
   649  0016BE                     u1811:
   650  0016BE  006F FFAF FFDB     	movff	16363,16347
   651  0016C4  06E8               	decf	16360,f,c
   652  0016C6  E2FB               	bc	u1811
   653                           
   654                           ;main.c: 50: StrobeLED GStrobe = newStrobe(&LATC,&PORTC,2,G_Strobe);
   655  0016C8  0EBC               	movlw	188
   656  0016CA  6E01               	movwf	newStrobe@OP,c
   657  0016CC  0E3F               	movlw	63
   658  0016CE  6E02               	movwf	newStrobe@OP+1,c
   659  0016D0  0ECC               	movlw	204
   660  0016D2  6E03               	movwf	newStrobe@IP,c
   661  0016D4  0E3F               	movlw	63
   662  0016D6  6E04               	movwf	newStrobe@IP+1,c
   663  0016D8  0E02               	movlw	2
   664  0016DA  6E05               	movwf	newStrobe@sLED,c
   665  0016DC  0E01               	movlw	1
   666  0016DE  6E06               	movwf	newStrobe@t,c
   667  0016E0  EC6C  F013         	call	_newStrobe	;wreg free
   668  0016E4  EE20  F0A0         	lfsr	2,main@GStrobe
   669  0016E8  0E0C               	movlw	12
   670  0016EA                     u1821:
   671  0016EA  006F FFAF FFDB     	movff	16363,16347
   672  0016F0  06E8               	decf	16360,f,c
   673  0016F2  E2FB               	bc	u1821
   674                           
   675                           ;main.c: 51: StrobeLED ACStrobe = newStrobe(&LATC,&PORTC,0,AntiCollision);
   676  0016F4  0EBC               	movlw	188
   677  0016F6  6E01               	movwf	newStrobe@OP,c
   678  0016F8  0E3F               	movlw	63
   679  0016FA  6E02               	movwf	newStrobe@OP+1,c
   680  0016FC  0ECC               	movlw	204
   681  0016FE  6E03               	movwf	newStrobe@IP,c
   682  001700  0E3F               	movlw	63
   683  001702  6E04               	movwf	newStrobe@IP+1,c
   684  001704  0E00               	movlw	0
   685  001706  6E05               	movwf	newStrobe@sLED,c
   686  001708  0E03               	movlw	3
   687  00170A  6E06               	movwf	newStrobe@t,c
   688  00170C  EC6C  F013         	call	_newStrobe	;wreg free
   689  001710  EE20  F0AD         	lfsr	2,main@ACStrobe
   690  001714  0E0C               	movlw	12
   691  001716                     u1831:
   692  001716  006F FFAF FFDB     	movff	16363,16347
   693  00171C  06E8               	decf	16360,f,c
   694  00171E  E2FB               	bc	u1831
   695                           
   696                           ;main.c: 52: StrobeLED GenStrobe = newStrobe(&LATC,&PORTC,1,General);
   697  001720  0EBC               	movlw	188
   698  001722  6E01               	movwf	newStrobe@OP,c
   699  001724  0E3F               	movlw	63
   700  001726  6E02               	movwf	newStrobe@OP+1,c
   701  001728  0ECC               	movlw	204
   702  00172A  6E03               	movwf	newStrobe@IP,c
   703  00172C  0E3F               	movlw	63
   704  00172E  6E04               	movwf	newStrobe@IP+1,c
   705  001730  0E01               	movlw	1
   706  001732  6E05               	movwf	newStrobe@sLED,c
   707  001734  0E02               	movlw	2
   708  001736  6E06               	movwf	newStrobe@t,c
   709  001738  EC6C  F013         	call	_newStrobe	;wreg free
   710  00173C  EE20  F0BA         	lfsr	2,main@GenStrobe
   711  001740  0E0C               	movlw	12
   712  001742                     u1841:
   713  001742  006F FFAF FFDB     	movff	16363,16347
   714  001748  06E8               	decf	16360,f,c
   715  00174A  E2FB               	bc	u1841
   716                           
   717                           ;main.c: 55: RabbitPort Rabbit = RabbitLightsInit(&LATB,&PORTB,0,8);
   718  00174C  0EBB               	movlw	187
   719  00174E  6E01               	movwf	RabbitLightsInit@OP,c
   720  001750  0E3F               	movlw	63
   721  001752  6E02               	movwf	RabbitLightsInit@OP+1,c
   722  001754  0ECB               	movlw	203
   723  001756  6E03               	movwf	RabbitLightsInit@IP,c
   724  001758  0E3F               	movlw	63
   725  00175A  6E04               	movwf	RabbitLightsInit@IP+1,c
   726  00175C  0E00               	movlw	0
   727  00175E  6E05               	movwf	RabbitLightsInit@SLED,c
   728  001760  0E08               	movlw	8
   729  001762  6E06               	movwf	RabbitLightsInit@num,c
   730  001764  EC11  F014         	call	_RabbitLightsInit	;wreg free
   731  001768  EE20  F060         	lfsr	2,main@Rabbit
   732  00176C  0E0C               	movlw	12
   733  00176E                     u1851:
   734  00176E  006F FFAF FFDB     	movff	16363,16347
   735  001774  06E8               	decf	16360,f,c
   736  001776  E2FB               	bc	u1851
   737  001778                     
   738                           ;main.c: 59: {
   739                           ;main.c: 60: if ((PORTA & (0x01 << TRIGGER1_PIN)) == 0x00)
   740  001778  0E2C               	movlw	low _TRIGGER1_PIN
   741  00177A  6EF6               	movwf	16374,c
   742  00177C                     	if	1	;There is more than 1 active tblptr byte
   743  00177C  0E10               	movlw	high _TRIGGER1_PIN
   744  00177E  6EF7               	movwf	16375,c
   745  001780                     	endif
   746  001780                     	if	1	;There are 3 active tblptr bytes
   747  001780  0E00               	movlw	low (_TRIGGER1_PIN shr (0+16))
   748  001782  6EF8               	movwf	16376,c
   749  001784                     	endif
   750  001784  0008               	tblrd		*
   751  001786  006F FFD4  F028    	movff	16373,??_main
   752  00178C  0E01               	movlw	1
   753  00178E  6E29               	movwf	(??_main+1)& (0+255),c
   754  001790  2A28               	incf	??_main,f,c
   755  001792  D002               	goto	u1864
   756  001794                     u1865:
   757  001794  90D8               	bcf	16344,0,c
   758  001796  3629               	rlcf	??_main+1,f,c
   759  001798                     u1864:
   760  001798  2E28               	decfsz	??_main,f,c
   761  00179A  D7FC               	goto	u1865
   762  00179C  5029               	movf	??_main+1,w,c
   763  00179E  013F               	movlb	63	; () banked
   764  0017A0  15CA               	andwf	202,w,b	;volatile
   765  0017A2  0900               	iorlw	0
   766  0017A4  A4D8               	btfss	16344,2,c
   767  0017A6  D015               	goto	l234
   768                           
   769                           ; BSR set to: 63
   770                           ;main.c: 61: {
   771                           ;main.c: 62: if (!Gun1.GunRUN)
   772  0017A8  0100               	movlb	0	; () banked
   773  0017AA  517C               	movf	(main@Gun1+15)& (0+255),w,b
   774  0017AC  A4D8               	btfss	16344,2,c
   775  0017AE  D006               	goto	l235
   776                           
   777                           ; BSR set to: 0
   778                           ;main.c: 63: {
   779                           ;main.c: 64: StartGunFirePattern(&Gun1);
   780  0017B0  0E6D               	movlw	low main@Gun1
   781  0017B2  6E07               	movwf	StartGunFirePattern@gp,c
   782  0017B4  0E00               	movlw	high main@Gun1
   783  0017B6  6E08               	movwf	StartGunFirePattern@gp+1,c
   784  0017B8  EC5A  F010         	call	_StartGunFirePattern	;wreg free
   785  0017BC                     l235:
   786                           
   787                           ;main.c: 66: }
   788                           ;main.c: 67: if (!Gun2.GunRUN)
   789  0017BC  0100               	movlb	0	; () banked
   790  0017BE  518D               	movf	(main@Gun2+15)& (0+255),w,b
   791  0017C0  A4D8               	btfss	16344,2,c
   792  0017C2  D013               	goto	l237
   793                           
   794                           ; BSR set to: 0
   795                           ;main.c: 68: {
   796                           ;main.c: 69: StartGunFirePattern(&Gun2);
   797  0017C4  0E7E               	movlw	low main@Gun2
   798  0017C6  6E07               	movwf	StartGunFirePattern@gp,c
   799  0017C8  0E00               	movlw	high main@Gun2
   800  0017CA  6E08               	movwf	StartGunFirePattern@gp+1,c
   801  0017CC  EC5A  F010         	call	_StartGunFirePattern	;wreg free
   802                           
   803                           ;main.c: 70: }
   804                           ;main.c: 71: }
   805  0017D0  D00C               	goto	l237
   806  0017D2                     l234:
   807                           
   808                           ;main.c: 72: else
   809                           ;main.c: 73: {
   810                           ;main.c: 74: StopGunFirePattern(&Gun1);
   811  0017D2  0E6D               	movlw	low main@Gun1
   812  0017D4  6E01               	movwf	StopGunFirePattern@gp,c
   813  0017D6  0E00               	movlw	high main@Gun1
   814  0017D8  6E02               	movwf	StopGunFirePattern@gp+1,c
   815  0017DA  EC6F  F012         	call	_StopGunFirePattern	;wreg free
   816                           
   817                           ;main.c: 75: StopGunFirePattern(&Gun2);
   818  0017DE  0E7E               	movlw	low main@Gun2
   819  0017E0  6E01               	movwf	StopGunFirePattern@gp,c
   820  0017E2  0E00               	movlw	high main@Gun2
   821  0017E4  6E02               	movwf	StopGunFirePattern@gp+1,c
   822  0017E6  EC6F  F012         	call	_StopGunFirePattern	;wreg free
   823  0017EA                     l237:
   824                           
   825                           ;main.c: 76: }
   826                           ;main.c: 78: if ((PORTA & (0x01 << TRIGGER2_PIN)) == 0x00)
   827  0017EA  0E2B               	movlw	low _TRIGGER2_PIN
   828  0017EC  6EF6               	movwf	16374,c
   829  0017EE                     	if	1	;There is more than 1 active tblptr byte
   830  0017EE  0E10               	movlw	high _TRIGGER2_PIN
   831  0017F0  6EF7               	movwf	16375,c
   832  0017F2                     	endif
   833  0017F2                     	if	1	;There are 3 active tblptr bytes
   834  0017F2  0E00               	movlw	low (_TRIGGER2_PIN shr (0+16))
   835  0017F4  6EF8               	movwf	16376,c
   836  0017F6                     	endif
   837  0017F6  0008               	tblrd		*
   838  0017F8  006F FFD4  F028    	movff	16373,??_main
   839  0017FE  0E01               	movlw	1
   840  001800  6E29               	movwf	(??_main+1)& (0+255),c
   841  001802  2A28               	incf	??_main,f,c
   842  001804  D002               	goto	u1904
   843  001806                     u1905:
   844  001806  90D8               	bcf	16344,0,c
   845  001808  3629               	rlcf	??_main+1,f,c
   846  00180A                     u1904:
   847  00180A  2E28               	decfsz	??_main,f,c
   848  00180C  D7FC               	goto	u1905
   849  00180E  5029               	movf	??_main+1,w,c
   850  001810  013F               	movlb	63	; () banked
   851  001812  15CA               	andwf	202,w,b	;volatile
   852  001814  0900               	iorlw	0
   853  001816  A4D8               	btfss	16344,2,c
   854  001818  D00B               	goto	l238
   855                           
   856                           ; BSR set to: 63
   857                           ;main.c: 79: {
   858                           ;main.c: 80: if (!Gun3.GunRUN)
   859  00181A  0100               	movlb	0	; () banked
   860  00181C  519E               	movf	(main@Gun3+15)& (0+255),w,b
   861  00181E  A4D8               	btfss	16344,2,c
   862  001820  D00D               	goto	l240
   863                           
   864                           ; BSR set to: 0
   865                           ;main.c: 81: {
   866                           ;main.c: 82: StartGunFirePattern(&Gun3);
   867  001822  0E8F               	movlw	low main@Gun3
   868  001824  6E07               	movwf	StartGunFirePattern@gp,c
   869  001826  0E00               	movlw	high main@Gun3
   870  001828  6E08               	movwf	StartGunFirePattern@gp+1,c
   871  00182A  EC5A  F010         	call	_StartGunFirePattern	;wreg free
   872                           
   873                           ;main.c: 83: }
   874                           ;main.c: 84: }
   875  00182E  D006               	goto	l240
   876  001830                     l238:
   877                           
   878                           ;main.c: 85: else
   879                           ;main.c: 86: {
   880                           ;main.c: 87: StopGunFirePattern(&Gun3);
   881  001830  0E8F               	movlw	low main@Gun3
   882  001832  6E01               	movwf	StopGunFirePattern@gp,c
   883  001834  0E00               	movlw	high main@Gun3
   884  001836  6E02               	movwf	StopGunFirePattern@gp+1,c
   885  001838  EC6F  F012         	call	_StopGunFirePattern	;wreg free
   886  00183C                     l240:
   887                           
   888                           ;main.c: 88: }
   889                           ;main.c: 90: if ((PORTA & (1 << STROBE1_PIN))== 0x00)
   890  00183C  0E2A               	movlw	low _STROBE1_PIN
   891  00183E  6EF6               	movwf	16374,c
   892  001840                     	if	1	;There is more than 1 active tblptr byte
   893  001840  0E10               	movlw	high _STROBE1_PIN
   894  001842  6EF7               	movwf	16375,c
   895  001844                     	endif
   896  001844                     	if	1	;There are 3 active tblptr bytes
   897  001844  0E00               	movlw	low (_STROBE1_PIN shr (0+16))
   898  001846  6EF8               	movwf	16376,c
   899  001848                     	endif
   900  001848  0008               	tblrd		*
   901  00184A  006F FFD4  F028    	movff	16373,??_main
   902  001850  0E01               	movlw	1
   903  001852  6E29               	movwf	(??_main+1)& (0+255),c
   904  001854  2A28               	incf	??_main,f,c
   905  001856  D002               	goto	u1934
   906  001858                     u1935:
   907  001858  90D8               	bcf	16344,0,c
   908  00185A  3629               	rlcf	??_main+1,f,c
   909  00185C                     u1934:
   910  00185C  2E28               	decfsz	??_main,f,c
   911  00185E  D7FC               	goto	u1935
   912  001860  5029               	movf	??_main+1,w,c
   913  001862  013F               	movlb	63	; () banked
   914  001864  15CA               	andwf	202,w,b	;volatile
   915  001866  0900               	iorlw	0
   916  001868  A4D8               	btfss	16344,2,c
   917  00186A  D031               	goto	l241
   918                           
   919                           ; BSR set to: 63
   920                           ;main.c: 91: {
   921                           ;main.c: 92: if (!EFStrobe.StrobeRUN)
   922  00186C  0100               	movlb	0	; () banked
   923  00186E  51D1               	movf	(main@EFStrobe+10)& (0+255),w,b
   924  001870  A4D8               	btfss	16344,2,c
   925  001872  D043               	goto	l243
   926                           
   927                           ; BSR set to: 0
   928                           ;main.c: 93: {
   929                           ;main.c: 95: StartSyncStrobes(&GenStrobe, &ACStrobe, AC_STROBE_DELAY_MS);
   930  001874  0EBA               	movlw	low main@GenStrobe
   931  001876  6E11               	movwf	StartSyncStrobes@SLED_A,c
   932  001878  0E00               	movlw	high main@GenStrobe
   933  00187A  6E12               	movwf	StartSyncStrobes@SLED_A+1,c
   934  00187C  0EAD               	movlw	low main@ACStrobe
   935  00187E  6E13               	movwf	StartSyncStrobes@SLED_B,c
   936  001880  0E00               	movlw	high main@ACStrobe
   937  001882  6E14               	movwf	StartSyncStrobes@SLED_B+1,c
   938  001884  0E09               	movlw	low _AC_STROBE_DELAY_MS
   939  001886  6EF6               	movwf	16374,c
   940  001888                     	if	1	;There is more than 1 active tblptr byte
   941  001888  0E10               	movlw	high _AC_STROBE_DELAY_MS
   942  00188A  6EF7               	movwf	16375,c
   943  00188C                     	endif
   944  00188C                     	if	1	;There are 3 active tblptr bytes
   945  00188C  0E00               	movlw	low (_AC_STROBE_DELAY_MS shr (0+16))
   946  00188E  6EF8               	movwf	16376,c
   947  001890                     	endif
   948  001890  0009               	tblrd		*+
   949  001892  006F FFD4  F015    	movff	16373,StartSyncStrobes@delay
   950  001898  0009               	tblrd		*+
   951  00189A  006F FFD4  F016    	movff	16373,StartSyncStrobes@delay+1
   952  0018A0  0009               	tblrd		*+
   953  0018A2  006F FFD4  F017    	movff	16373,StartSyncStrobes@delay+2
   954  0018A8  000A               	tblrd		*-
   955  0018AA  006F FFD4  F018    	movff	16373,StartSyncStrobes@delay+3
   956  0018B0  EC8C  F011         	call	_StartSyncStrobes	;wreg free
   957                           
   958                           ;main.c: 96: StartStrobe(&EFStrobe);
   959  0018B4  0EC7               	movlw	low main@EFStrobe
   960  0018B6  6E07               	movwf	StartStrobe@SLED,c
   961  0018B8  0E00               	movlw	high main@EFStrobe
   962  0018BA  6E08               	movwf	StartStrobe@SLED+1,c
   963  0018BC  EC05  F011         	call	_StartStrobe	;wreg free
   964                           
   965                           ;main.c: 97: StartStrobe(&GStrobe);
   966  0018C0  0EA0               	movlw	low main@GStrobe
   967  0018C2  6E07               	movwf	StartStrobe@SLED,c
   968  0018C4  0E00               	movlw	high main@GStrobe
   969  0018C6  6E08               	movwf	StartStrobe@SLED+1,c
   970  0018C8  EC05  F011         	call	_StartStrobe	;wreg free
   971                           
   972                           ;main.c: 99: }
   973                           ;main.c: 100: }
   974  0018CC  D016               	goto	l243
   975  0018CE                     l241:
   976                           
   977                           ;main.c: 101: else
   978                           ;main.c: 102: {
   979                           ;main.c: 104: StopStrobe(&EFStrobe);
   980  0018CE  0EC7               	movlw	low main@EFStrobe
   981  0018D0  6E01               	movwf	StopStrobe@SLED,c
   982  0018D2  0E00               	movlw	high main@EFStrobe
   983  0018D4  6E02               	movwf	StopStrobe@SLED+1,c
   984  0018D6  ECAA  F013         	call	_StopStrobe	;wreg free
   985                           
   986                           ;main.c: 105: StopStrobe(&GStrobe);
   987  0018DA  0EA0               	movlw	low main@GStrobe
   988  0018DC  6E01               	movwf	StopStrobe@SLED,c
   989  0018DE  0E00               	movlw	high main@GStrobe
   990  0018E0  6E02               	movwf	StopStrobe@SLED+1,c
   991  0018E2  ECAA  F013         	call	_StopStrobe	;wreg free
   992                           
   993                           ;main.c: 106: StopSyncStrobes(&GenStrobe, &ACStrobe);
   994  0018E6  0EBA               	movlw	low main@GenStrobe
   995  0018E8  6E07               	movwf	StopSyncStrobes@SLED_A,c
   996  0018EA  0E00               	movlw	high main@GenStrobe
   997  0018EC  6E08               	movwf	StopSyncStrobes@SLED_A+1,c
   998  0018EE  0EAD               	movlw	low main@ACStrobe
   999  0018F0  6E09               	movwf	StopSyncStrobes@SLED_B,c
  1000  0018F2  0E00               	movlw	high main@ACStrobe
  1001  0018F4  6E0A               	movwf	StopSyncStrobes@SLED_B+1,c
  1002  0018F6  EC61  F014         	call	_StopSyncStrobes	;wreg free
  1003  0018FA                     l243:
  1004                           
  1005                           ;main.c: 107: }
  1006                           ;main.c: 109: if ((PORTA & (1 << STROBE2_PIN))== 0x00)
  1007  0018FA  0E29               	movlw	low _STROBE2_PIN
  1008  0018FC  6EF6               	movwf	16374,c
  1009  0018FE                     	if	1	;There is more than 1 active tblptr byte
  1010  0018FE  0E10               	movlw	high _STROBE2_PIN
  1011  001900  6EF7               	movwf	16375,c
  1012  001902                     	endif
  1013  001902                     	if	1	;There are 3 active tblptr bytes
  1014  001902  0E00               	movlw	low (_STROBE2_PIN shr (0+16))
  1015  001904  6EF8               	movwf	16376,c
  1016  001906                     	endif
  1017  001906  0008               	tblrd		*
  1018  001908  006F FFD4  F028    	movff	16373,??_main
  1019  00190E  0E01               	movlw	1
  1020  001910  6E29               	movwf	(??_main+1)& (0+255),c
  1021  001912  2A28               	incf	??_main,f,c
  1022  001914  D002               	goto	u1964
  1023  001916                     u1965:
  1024  001916  90D8               	bcf	16344,0,c
  1025  001918  3629               	rlcf	??_main+1,f,c
  1026  00191A                     u1964:
  1027  00191A  2E28               	decfsz	??_main,f,c
  1028  00191C  D7FC               	goto	u1965
  1029  00191E  5029               	movf	??_main+1,w,c
  1030  001920  013F               	movlb	63	; () banked
  1031  001922  15CA               	andwf	202,w,b	;volatile
  1032  001924  0900               	iorlw	0
  1033  001926  A4D8               	btfss	16344,2,c
  1034  001928  D00B               	goto	l244
  1035                           
  1036                           ; BSR set to: 63
  1037                           ;main.c: 110: {
  1038                           ;main.c: 111: if (!Rabbit.RabbitRUN)
  1039  00192A  0100               	movlb	0	; () banked
  1040  00192C  516B               	movf	(main@Rabbit+11)& (0+255),w,b
  1041  00192E  A4D8               	btfss	16344,2,c
  1042  001930  D00D               	goto	l246
  1043                           
  1044                           ; BSR set to: 0
  1045                           ;main.c: 112: {
  1046                           ;main.c: 113: StartRabbitLights(&Rabbit);
  1047  001932  0E60               	movlw	low main@Rabbit
  1048  001934  6E07               	movwf	StartRabbitLights@rp,c
  1049  001936  0E00               	movlw	high main@Rabbit
  1050  001938  6E08               	movwf	StartRabbitLights@rp+1,c
  1051  00193A  ECA2  F00F         	call	_StartRabbitLights	;wreg free
  1052                           
  1053                           ;main.c: 114: }
  1054                           ;main.c: 116: }
  1055  00193E  D006               	goto	l246
  1056  001940                     l244:
  1057                           
  1058                           ;main.c: 117: else
  1059                           ;main.c: 118: {
  1060                           ;main.c: 119: StopRabbitLights(&Rabbit);
  1061  001940  0E60               	movlw	low main@Rabbit
  1062  001942  6E01               	movwf	StopRabbitLights@rp,c
  1063  001944  0E00               	movlw	high main@Rabbit
  1064  001946  6E02               	movwf	StopRabbitLights@rp+1,c
  1065  001948  EC21  F013         	call	_StopRabbitLights	;wreg free
  1066  00194C                     l246:
  1067                           
  1068                           ;main.c: 120: }
  1069                           ;main.c: 123: UpdateGunLED(&Gun1);
  1070  00194C  0E6D               	movlw	low main@Gun1
  1071  00194E  6E05               	movwf	UpdateGunLED@gp,c
  1072  001950  0E00               	movlw	high main@Gun1
  1073  001952  6E06               	movwf	UpdateGunLED@gp+1,c
  1074  001954  ECD7  F00C         	call	_UpdateGunLED	;wreg free
  1075                           
  1076                           ;main.c: 124: UpdateGunLED(&Gun2);
  1077  001958  0E7E               	movlw	low main@Gun2
  1078  00195A  6E05               	movwf	UpdateGunLED@gp,c
  1079  00195C  0E00               	movlw	high main@Gun2
  1080  00195E  6E06               	movwf	UpdateGunLED@gp+1,c
  1081  001960  ECD7  F00C         	call	_UpdateGunLED	;wreg free
  1082                           
  1083                           ;main.c: 125: UpdateGunLED(&Gun3);
  1084  001964  0E8F               	movlw	low main@Gun3
  1085  001966  6E05               	movwf	UpdateGunLED@gp,c
  1086  001968  0E00               	movlw	high main@Gun3
  1087  00196A  6E06               	movwf	UpdateGunLED@gp+1,c
  1088  00196C  ECD7  F00C         	call	_UpdateGunLED	;wreg free
  1089                           
  1090                           ;main.c: 126: UpdateStrobeLED(&EFStrobe);
  1091  001970  0EC7               	movlw	low main@EFStrobe
  1092  001972  6E05               	movwf	UpdateStrobeLED@SLED,c
  1093  001974  0E00               	movlw	high main@EFStrobe
  1094  001976  6E06               	movwf	UpdateStrobeLED@SLED+1,c
  1095  001978  EC17  F008         	call	_UpdateStrobeLED	;wreg free
  1096                           
  1097                           ;main.c: 127: UpdateStrobeLED(&GStrobe);
  1098  00197C  0EA0               	movlw	low main@GStrobe
  1099  00197E  6E05               	movwf	UpdateStrobeLED@SLED,c
  1100  001980  0E00               	movlw	high main@GStrobe
  1101  001982  6E06               	movwf	UpdateStrobeLED@SLED+1,c
  1102  001984  EC17  F008         	call	_UpdateStrobeLED	;wreg free
  1103                           
  1104                           ;main.c: 128: UpdateStrobeLED(&GenStrobe);
  1105  001988  0EBA               	movlw	low main@GenStrobe
  1106  00198A  6E05               	movwf	UpdateStrobeLED@SLED,c
  1107  00198C  0E00               	movlw	high main@GenStrobe
  1108  00198E  6E06               	movwf	UpdateStrobeLED@SLED+1,c
  1109  001990  EC17  F008         	call	_UpdateStrobeLED	;wreg free
  1110                           
  1111                           ;main.c: 129: UpdateStrobeLED(&ACStrobe);
  1112  001994  0EAD               	movlw	low main@ACStrobe
  1113  001996  6E05               	movwf	UpdateStrobeLED@SLED,c
  1114  001998  0E00               	movlw	high main@ACStrobe
  1115  00199A  6E06               	movwf	UpdateStrobeLED@SLED+1,c
  1116  00199C  EC17  F008         	call	_UpdateStrobeLED	;wreg free
  1117                           
  1118                           ;main.c: 130: UpdateRabbitLEDs(&Rabbit);
  1119  0019A0  0E60               	movlw	low main@Rabbit
  1120  0019A2  6E05               	movwf	UpdateRabbitLEDs@rp,c
  1121  0019A4  0E00               	movlw	high main@Rabbit
  1122  0019A6  6E06               	movwf	UpdateRabbitLEDs@rp+1,c
  1123  0019A8  EC97  F00E         	call	_UpdateRabbitLEDs	;wreg free
  1124  0019AC  D6E5               	goto	l233
  1125  0019AE                     __end_of_main:
  1126                           	opt stack 0
  1127                           
  1128 ;; *************** function _newStrobe *****************
  1129 ;; Defined at:
  1130 ;;		line 331 in file "LED_Patterns.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;  OP              2    0[COMRAM] PTR  unsigned char 
  1133 ;;		 -> LATC(1), 
  1134 ;;  IP              2    2[COMRAM] PTR  unsigned char 
  1135 ;;		 -> PORTC(1), 
  1136 ;;  sLED            1    4[COMRAM] const unsigned char 
  1137 ;;  t               1    5[COMRAM] const enum E19377
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;  Strobe         13   15[COMRAM] struct StrobeLED
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  13    0[COMRAM] struct StrobeLED
  1142 ;; Registers used:
  1143 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1149 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1150 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1151 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1152 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1153 ;;Total ram usage:       28 bytes
  1154 ;; Hardware stack levels used:    1
  1155 ;; Hardware stack levels required when called:    3
  1156 ;; This function calls:
  1157 ;;		Nothing
  1158 ;; This function is called by:
  1159 ;;		_main
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           	psect	text1
  1164  0026D8                     __ptext1:
  1165                           	opt stack 0
  1166  0026D8                     _newStrobe:
  1167                           	opt stack 27
  1168                           
  1169                           ;LED_Patterns.c: 334: StrobeLED Strobe;
  1170                           ;LED_Patterns.c: 335: Strobe.OutPort = (volatile unsigned char *)OP;
  1171                           
  1172                           ;incstack = 0
  1173  0026D8  0060  F004  F010   	movff	newStrobe@OP,newStrobe@Strobe
  1174  0026DE  0060  F008  F011   	movff	newStrobe@OP+1,newStrobe@Strobe+1
  1175                           
  1176                           ;LED_Patterns.c: 336: Strobe.InPort = (volatile unsigned char *)IP;
  1177  0026E4  0060  F00C  F012   	movff	newStrobe@IP,newStrobe@Strobe+2
  1178  0026EA  0060  F010  F013   	movff	newStrobe@IP+1,newStrobe@Strobe+3
  1179                           
  1180                           ;LED_Patterns.c: 337: Strobe.pin = sLED;
  1181  0026F0  0060  F014  F014   	movff	newStrobe@sLED,newStrobe@Strobe+4
  1182                           
  1183                           ;LED_Patterns.c: 338: Strobe.S_Type = t;
  1184  0026F6  0060  F018  F015   	movff	newStrobe@t,newStrobe@Strobe+5
  1185                           
  1186                           ;LED_Patterns.c: 339: Strobe.StrobeCnt = 0;
  1187  0026FC  0E00               	movlw	0
  1188  0026FE  6E16               	movwf	newStrobe@Strobe+6,c
  1189  002700  0E00               	movlw	0
  1190  002702  6E17               	movwf	newStrobe@Strobe+7,c
  1191  002704  0E00               	movlw	0
  1192  002706  6E18               	movwf	newStrobe@Strobe+8,c
  1193  002708  0E00               	movlw	0
  1194  00270A  6E19               	movwf	newStrobe@Strobe+9,c
  1195                           
  1196                           ;LED_Patterns.c: 340: Strobe.StrobeRUN = 0;
  1197  00270C  0E00               	movlw	0
  1198  00270E  6E1A               	movwf	newStrobe@Strobe+10,c
  1199                           
  1200                           ;LED_Patterns.c: 341: Strobe.PulseCnt = 0;
  1201  002710  0E00               	movlw	0
  1202  002712  6E1B               	movwf	newStrobe@Strobe+11,c
  1203                           
  1204                           ;LED_Patterns.c: 342: Strobe.A_B = 0;
  1205  002714  0E00               	movlw	0
  1206  002716  6E1C               	movwf	newStrobe@Strobe+12,c
  1207                           
  1208                           ;LED_Patterns.c: 344: *Strobe.OutPort |= (1 << sLED);
  1209  002718  0060  F014  F00E   	movff	newStrobe@sLED,??_newStrobe
  1210  00271E  0E01               	movlw	1
  1211  002720  6E0F               	movwf	(??_newStrobe+1)& (0+255),c
  1212  002722  2A0E               	incf	??_newStrobe,f,c
  1213  002724  D002               	goto	u1184
  1214  002726                     u1185:
  1215  002726  90D8               	bcf	16344,0,c
  1216  002728  360F               	rlcf	??_newStrobe+1,f,c
  1217  00272A                     u1184:
  1218  00272A  2E0E               	decfsz	??_newStrobe,f,c
  1219  00272C  D7FC               	goto	u1185
  1220  00272E  0060  F043  FFD9   	movff	newStrobe@Strobe,16345
  1221  002734  0060  F047  FFDA   	movff	newStrobe@Strobe+1,16346
  1222  00273A  500F               	movf	??_newStrobe+1,w,c
  1223  00273C  12DF               	iorwf	16351,f,c
  1224                           
  1225                           ;LED_Patterns.c: 346: return Strobe;
  1226  00273E  EE20  F010         	lfsr	2,newStrobe@Strobe
  1227  002742  EE00  F001         	lfsr	0,?_newStrobe
  1228  002746  0E0C               	movlw	12
  1229  002748                     u1191:
  1230  002748  006F FF6F FFEB     	movff	16347,16363
  1231  00274E  06E8               	decf	16360,f,c
  1232  002750  E2FB               	bc	u1191
  1233  002752  0012               	return	
  1234  002754                     __end_of_newStrobe:
  1235                           	opt stack 0
  1236                           
  1237 ;; *************** function _UpdateStrobeLED *****************
  1238 ;; Defined at:
  1239 ;;		line 214 in file "LED_Patterns.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;  SLED            2    4[COMRAM] PTR struct StrobeLED
  1242 ;;		 -> main@GenStrobe(13), main@ACStrobe(13), main@GStrobe(13), main@EFStrobe(13), 
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;		None
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  1    wreg      void 
  1247 ;; Registers used:
  1248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1254 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1258 ;;Total ram usage:       10 bytes
  1259 ;; Hardware stack levels used:    1
  1260 ;; Hardware stack levels required when called:    4
  1261 ;; This function calls:
  1262 ;;		_GetCurrentTime
  1263 ;; This function is called by:
  1264 ;;		_main
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           	psect	text2
  1269  00102E                     __ptext2:
  1270                           	opt stack 0
  1271  00102E                     _UpdateStrobeLED:
  1272                           	opt stack 26
  1273                           
  1274                           ;LED_Patterns.c: 216: if (SLED->StrobeRUN)
  1275                           
  1276                           ;incstack = 0
  1277  00102E  EE20 F00A          	lfsr	2,10
  1278  001032  5005               	movf	UpdateStrobeLED@SLED,w,c
  1279  001034  26D9               	addwf	16345,f,c
  1280  001036  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1281  001038  22DA               	addwfc	16346,f,c
  1282  00103A  50DF               	movf	16351,w,c
  1283  00103C  B4D8               	btfsc	16344,2,c
  1284  00103E  0012               	return	
  1285                           
  1286                           ;LED_Patterns.c: 217: {
  1287                           ;LED_Patterns.c: 218: if (SLED->StrobeCnt <= GetCurrentTime())
  1288  001040  EE20 F006          	lfsr	2,6
  1289  001044  5005               	movf	UpdateStrobeLED@SLED,w,c
  1290  001046  26D9               	addwf	16345,f,c
  1291  001048  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1292  00104A  22DA               	addwfc	16346,f,c
  1293  00104C  EC90  F014         	call	_GetCurrentTime	;wreg free
  1294  001050  50DE               	movf	16350,w,c
  1295  001052  5C01               	subwf	?_GetCurrentTime,w,c
  1296  001054  50DE               	movf	16350,w,c
  1297  001056  5802               	subwfb	?_GetCurrentTime+1,w,c
  1298  001058  50DE               	movf	16350,w,c
  1299  00105A  5803               	subwfb	?_GetCurrentTime+2,w,c
  1300  00105C  50DE               	movf	16350,w,c
  1301  00105E  5804               	subwfb	?_GetCurrentTime+3,w,c
  1302  001060  A0D8               	btfss	16344,0,c
  1303  001062  0012               	return	
  1304  001064  D2AD               	goto	l350
  1305  001066                     
  1306                           ;LED_Patterns.c: 223: {
  1307                           ;LED_Patterns.c: 230: SLED->A_B = (bool)!SLED->A_B;
  1308  001066  EE20 F00C          	lfsr	2,12
  1309  00106A  5005               	movf	UpdateStrobeLED@SLED,w,c
  1310  00106C  26D9               	addwf	16345,f,c
  1311  00106E  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1312  001070  22DA               	addwfc	16346,f,c
  1313  001072  EE10 F00C          	lfsr	1,12
  1314  001076  5005               	movf	UpdateStrobeLED@SLED,w,c
  1315  001078  26E1               	addwf	16353,f,c
  1316  00107A  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1317  00107C  22E2               	addwfc	16354,f,c
  1318  00107E  50E7               	movf	16359,w,c
  1319  001080  A4D8               	btfss	16344,2,c
  1320  001082  D002               	goto	u1470
  1321  001084  0E01               	movlw	1
  1322  001086  D001               	goto	u1480
  1323  001088                     u1470:
  1324  001088  0E00               	movlw	0
  1325  00108A                     u1480:
  1326  00108A  6EDF               	movwf	16351,c
  1327                           
  1328                           ;LED_Patterns.c: 232: if (!SLED->A_B)
  1329  00108C  EE20 F00C          	lfsr	2,12
  1330  001090  5005               	movf	UpdateStrobeLED@SLED,w,c
  1331  001092  26D9               	addwf	16345,f,c
  1332  001094  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1333  001096  22DA               	addwfc	16346,f,c
  1334  001098  50DF               	movf	16351,w,c
  1335  00109A  A4D8               	btfss	16344,2,c
  1336  00109C  D062               	goto	l352
  1337                           
  1338                           ;LED_Patterns.c: 233: {
  1339                           ;LED_Patterns.c: 234: *SLED->OutPort |= (unsigned char)(1 << SLED->pin);
  1340  00109E  EE20 F004          	lfsr	2,4
  1341  0010A2  5005               	movf	UpdateStrobeLED@SLED,w,c
  1342  0010A4  26D9               	addwf	16345,f,c
  1343  0010A6  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1344  0010A8  22DA               	addwfc	16346,f,c
  1345  0010AA  50DF               	movf	16351,w,c
  1346  0010AC  6E07               	movwf	??_UpdateStrobeLED& (0+255),c
  1347  0010AE  0E01               	movlw	1
  1348  0010B0  6E08               	movwf	(??_UpdateStrobeLED+1)& (0+255),c
  1349  0010B2  2A07               	incf	??_UpdateStrobeLED,f,c
  1350  0010B4  D002               	goto	u1504
  1351  0010B6                     u1505:
  1352  0010B6  90D8               	bcf	16344,0,c
  1353  0010B8  3608               	rlcf	??_UpdateStrobeLED+1,f,c
  1354  0010BA                     u1504:
  1355  0010BA  2E07               	decfsz	??_UpdateStrobeLED,f,c
  1356  0010BC  D7FC               	goto	u1505
  1357  0010BE  0060  F017  FFD9   	movff	UpdateStrobeLED@SLED,16345
  1358  0010C4  0060  F01B  FFDA   	movff	UpdateStrobeLED@SLED+1,16346
  1359  0010CA  006F FF78  F009    	movff	16350,??_UpdateStrobeLED+2
  1360  0010D0  006F FF74  F00A    	movff	16349,??_UpdateStrobeLED+3
  1361  0010D6  0060  F027  FFD9   	movff	??_UpdateStrobeLED+2,16345
  1362  0010DC  0060  F02B  FFDA   	movff	??_UpdateStrobeLED+3,16346
  1363  0010E2  5008               	movf	??_UpdateStrobeLED+1,w,c
  1364  0010E4  12DF               	iorwf	16351,f,c
  1365                           
  1366                           ;LED_Patterns.c: 235: SLED->StrobeCnt += STROBE_OFF_TIME_MS;
  1367  0010E6  0E15               	movlw	low _STROBE_OFF_TIME_MS
  1368  0010E8  6EF6               	movwf	16374,c
  1369  0010EA                     	if	1	;There is more than 1 active tblptr byte
  1370  0010EA  0E10               	movlw	high _STROBE_OFF_TIME_MS
  1371  0010EC  6EF7               	movwf	16375,c
  1372  0010EE                     	endif
  1373  0010EE                     	if	1	;There are 3 active tblptr bytes
  1374  0010EE  0E00               	movlw	low (_STROBE_OFF_TIME_MS shr (0+16))
  1375  0010F0  6EF8               	movwf	16376,c
  1376  0010F2                     	endif
  1377  0010F2  0009               	tblrd		*+
  1378  0010F4  006F FFD4  F007    	movff	16373,??_UpdateStrobeLED
  1379  0010FA  0009               	tblrd		*+
  1380  0010FC  006F FFD4  F008    	movff	16373,??_UpdateStrobeLED+1
  1381  001102  0009               	tblrd		*+
  1382  001104  006F FFD4  F009    	movff	16373,??_UpdateStrobeLED+2
  1383  00110A  0009               	tblrd		*+
  1384  00110C  006F FFD4  F00A    	movff	16373,??_UpdateStrobeLED+3
  1385  001112  EE20 F006          	lfsr	2,6
  1386  001116  5005               	movf	UpdateStrobeLED@SLED,w,c
  1387  001118  26D9               	addwf	16345,f,c
  1388  00111A  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1389  00111C  22DA               	addwfc	16346,f,c
  1390  00111E  5007               	movf	??_UpdateStrobeLED,w,c
  1391  001120  26DE               	addwf	16350,f,c
  1392  001122  5008               	movf	??_UpdateStrobeLED+1,w,c
  1393  001124  22DE               	addwfc	16350,f,c
  1394  001126  5009               	movf	??_UpdateStrobeLED+2,w,c
  1395  001128  22DE               	addwfc	16350,f,c
  1396  00112A  500A               	movf	??_UpdateStrobeLED+3,w,c
  1397  00112C  22DE               	addwfc	16350,f,c
  1398                           
  1399                           ;LED_Patterns.c: 237: SLED->PulseCnt++;
  1400  00112E  EE20 F00B          	lfsr	2,11
  1401  001132  5005               	movf	UpdateStrobeLED@SLED,w,c
  1402  001134  26D9               	addwf	16345,f,c
  1403  001136  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1404  001138  22DA               	addwfc	16346,f,c
  1405  00113A  2ADF               	incf	16351,f,c
  1406                           
  1407                           ;LED_Patterns.c: 238: if (SLED->PulseCnt == 5)
  1408  00113C  EE20 F00B          	lfsr	2,11
  1409  001140  5005               	movf	UpdateStrobeLED@SLED,w,c
  1410  001142  26D9               	addwf	16345,f,c
  1411  001144  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1412  001146  22DA               	addwfc	16346,f,c
  1413  001148  0E05               	movlw	5
  1414  00114A  18DE               	xorwf	16350,w,c
  1415  00114C  A4D8               	btfss	16344,2,c
  1416  00114E  0012               	return	
  1417                           
  1418                           ;LED_Patterns.c: 239: SLED->PulseCnt = 0;
  1419  001150  EE20 F00B          	lfsr	2,11
  1420  001154  5005               	movf	UpdateStrobeLED@SLED,w,c
  1421  001156  26D9               	addwf	16345,f,c
  1422  001158  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1423  00115A  22DA               	addwfc	16346,f,c
  1424  00115C  0E00               	movlw	0
  1425  00115E  6EDF               	movwf	16351,c
  1426                           
  1427                           ;LED_Patterns.c: 241: }
  1428  001160  0012               	return	
  1429  001162                     l352:
  1430                           
  1431                           ;LED_Patterns.c: 242: else
  1432                           ;LED_Patterns.c: 243: {
  1433                           ;LED_Patterns.c: 244: if (SLED->PulseCnt < 3)
  1434  001162  EE20 F00B          	lfsr	2,11
  1435  001166  5005               	movf	UpdateStrobeLED@SLED,w,c
  1436  001168  26D9               	addwf	16345,f,c
  1437  00116A  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1438  00116C  22DA               	addwfc	16346,f,c
  1439  00116E  0E03               	movlw	3
  1440  001170  60DF               	cpfslt	16351,c
  1441  001172  D027               	goto	l355
  1442                           
  1443                           ;LED_Patterns.c: 245: {
  1444                           ;LED_Patterns.c: 246: *SLED->OutPort &= (unsigned char)~(1<<SLED->pin);
  1445  001174  EE20 F004          	lfsr	2,4
  1446  001178  5005               	movf	UpdateStrobeLED@SLED,w,c
  1447  00117A  26D9               	addwf	16345,f,c
  1448  00117C  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1449  00117E  22DA               	addwfc	16346,f,c
  1450  001180  50DF               	movf	16351,w,c
  1451  001182  6E07               	movwf	??_UpdateStrobeLED& (0+255),c
  1452  001184  0E01               	movlw	1
  1453  001186  6E08               	movwf	(??_UpdateStrobeLED+1)& (0+255),c
  1454  001188  2A07               	incf	??_UpdateStrobeLED,f,c
  1455  00118A  D002               	goto	u1534
  1456  00118C                     u1535:
  1457  00118C  90D8               	bcf	16344,0,c
  1458  00118E  3608               	rlcf	??_UpdateStrobeLED+1,f,c
  1459  001190                     u1534:
  1460  001190  2E07               	decfsz	??_UpdateStrobeLED,f,c
  1461  001192  D7FC               	goto	u1535
  1462  001194  5008               	movf	??_UpdateStrobeLED+1,w,c
  1463  001196  0AFF               	xorlw	255
  1464  001198  6E09               	movwf	(??_UpdateStrobeLED+2)& (0+255),c
  1465  00119A  0060  F017  FFD9   	movff	UpdateStrobeLED@SLED,16345
  1466  0011A0  0060  F01B  FFDA   	movff	UpdateStrobeLED@SLED+1,16346
  1467  0011A6  006F FF78  F00A    	movff	16350,??_UpdateStrobeLED+3
  1468  0011AC  006F FF74  F00B    	movff	16349,??_UpdateStrobeLED+4
  1469  0011B2  0060  F02B  FFD9   	movff	??_UpdateStrobeLED+3,16345
  1470  0011B8  0060  F02F  FFDA   	movff	??_UpdateStrobeLED+4,16346
  1471  0011BE  5009               	movf	??_UpdateStrobeLED+2,w,c
  1472  0011C0  16DF               	andwf	16351,f,c
  1473  0011C2                     l355:
  1474                           
  1475                           ;LED_Patterns.c: 247: }
  1476                           ;LED_Patterns.c: 248: SLED->StrobeCnt += STROBE_ON_TIME_MS;
  1477  0011C2  0E19               	movlw	low _STROBE_ON_TIME_MS
  1478  0011C4  6EF6               	movwf	16374,c
  1479  0011C6                     	if	1	;There is more than 1 active tblptr byte
  1480  0011C6  0E10               	movlw	high _STROBE_ON_TIME_MS
  1481  0011C8  6EF7               	movwf	16375,c
  1482  0011CA                     	endif
  1483  0011CA                     	if	1	;There are 3 active tblptr bytes
  1484  0011CA  0E00               	movlw	low (_STROBE_ON_TIME_MS shr (0+16))
  1485  0011CC  6EF8               	movwf	16376,c
  1486  0011CE                     	endif
  1487  0011CE  0009               	tblrd		*+
  1488  0011D0  006F FFD4  F007    	movff	16373,??_UpdateStrobeLED
  1489  0011D6  0009               	tblrd		*+
  1490  0011D8  006F FFD4  F008    	movff	16373,??_UpdateStrobeLED+1
  1491  0011DE  0009               	tblrd		*+
  1492  0011E0  006F FFD4  F009    	movff	16373,??_UpdateStrobeLED+2
  1493  0011E6  0009               	tblrd		*+
  1494  0011E8  006F FFD4  F00A    	movff	16373,??_UpdateStrobeLED+3
  1495  0011EE  EE20 F006          	lfsr	2,6
  1496  0011F2  5005               	movf	UpdateStrobeLED@SLED,w,c
  1497  0011F4  26D9               	addwf	16345,f,c
  1498  0011F6  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1499  0011F8  22DA               	addwfc	16346,f,c
  1500  0011FA  5007               	movf	??_UpdateStrobeLED,w,c
  1501  0011FC  26DE               	addwf	16350,f,c
  1502  0011FE  5008               	movf	??_UpdateStrobeLED+1,w,c
  1503  001200  22DE               	addwfc	16350,f,c
  1504  001202  5009               	movf	??_UpdateStrobeLED+2,w,c
  1505  001204  22DE               	addwfc	16350,f,c
  1506  001206  500A               	movf	??_UpdateStrobeLED+3,w,c
  1507  001208  22DE               	addwfc	16350,f,c
  1508                           
  1509                           ;LED_Patterns.c: 249: }
  1510                           ;LED_Patterns.c: 251: break;
  1511  00120A  0012               	return	
  1512  00120C                     
  1513                           ;LED_Patterns.c: 254: {
  1514                           ;LED_Patterns.c: 263: SLED->A_B = (bool)!SLED->A_B;
  1515  00120C  EE20 F00C          	lfsr	2,12
  1516  001210  5005               	movf	UpdateStrobeLED@SLED,w,c
  1517  001212  26D9               	addwf	16345,f,c
  1518  001214  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1519  001216  22DA               	addwfc	16346,f,c
  1520  001218  EE10 F00C          	lfsr	1,12
  1521  00121C  5005               	movf	UpdateStrobeLED@SLED,w,c
  1522  00121E  26E1               	addwf	16353,f,c
  1523  001220  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1524  001222  22E2               	addwfc	16354,f,c
  1525  001224  50E7               	movf	16359,w,c
  1526  001226  A4D8               	btfss	16344,2,c
  1527  001228  D002               	goto	u1540
  1528  00122A  0E01               	movlw	1
  1529  00122C  D001               	goto	u1550
  1530  00122E                     u1540:
  1531  00122E  0E00               	movlw	0
  1532  001230                     u1550:
  1533  001230  6EDF               	movwf	16351,c
  1534                           
  1535                           ;LED_Patterns.c: 265: if (!SLED->A_B)
  1536  001232  EE20 F00C          	lfsr	2,12
  1537  001236  5005               	movf	UpdateStrobeLED@SLED,w,c
  1538  001238  26D9               	addwf	16345,f,c
  1539  00123A  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1540  00123C  22DA               	addwfc	16346,f,c
  1541  00123E  50DF               	movf	16351,w,c
  1542  001240  A4D8               	btfss	16344,2,c
  1543  001242  D0AE               	goto	l358
  1544                           
  1545                           ;LED_Patterns.c: 266: {
  1546                           ;LED_Patterns.c: 267: *SLED->OutPort |= (unsigned char)(1<< SLED->pin);
  1547  001244  EE20 F004          	lfsr	2,4
  1548  001248  5005               	movf	UpdateStrobeLED@SLED,w,c
  1549  00124A  26D9               	addwf	16345,f,c
  1550  00124C  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1551  00124E  22DA               	addwfc	16346,f,c
  1552  001250  50DF               	movf	16351,w,c
  1553  001252  6E07               	movwf	??_UpdateStrobeLED& (0+255),c
  1554  001254  0E01               	movlw	1
  1555  001256  6E08               	movwf	(??_UpdateStrobeLED+1)& (0+255),c
  1556  001258  2A07               	incf	??_UpdateStrobeLED,f,c
  1557  00125A  D002               	goto	u1574
  1558  00125C                     u1575:
  1559  00125C  90D8               	bcf	16344,0,c
  1560  00125E  3608               	rlcf	??_UpdateStrobeLED+1,f,c
  1561  001260                     u1574:
  1562  001260  2E07               	decfsz	??_UpdateStrobeLED,f,c
  1563  001262  D7FC               	goto	u1575
  1564  001264  0060  F017  FFD9   	movff	UpdateStrobeLED@SLED,16345
  1565  00126A  0060  F01B  FFDA   	movff	UpdateStrobeLED@SLED+1,16346
  1566  001270  006F FF78  F009    	movff	16350,??_UpdateStrobeLED+2
  1567  001276  006F FF74  F00A    	movff	16349,??_UpdateStrobeLED+3
  1568  00127C  0060  F027  FFD9   	movff	??_UpdateStrobeLED+2,16345
  1569  001282  0060  F02B  FFDA   	movff	??_UpdateStrobeLED+3,16346
  1570  001288  5008               	movf	??_UpdateStrobeLED+1,w,c
  1571  00128A  12DF               	iorwf	16351,f,c
  1572                           
  1573                           ;LED_Patterns.c: 269: if ((SLED->PulseCnt < 2) || (SLED->PulseCnt == 3))
  1574  00128C  EE20 F00B          	lfsr	2,11
  1575  001290  5005               	movf	UpdateStrobeLED@SLED,w,c
  1576  001292  26D9               	addwf	16345,f,c
  1577  001294  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1578  001296  22DA               	addwfc	16346,f,c
  1579  001298  0E01               	movlw	1
  1580  00129A  64DF               	cpfsgt	16351,c
  1581  00129C  D00A               	goto	u1590
  1582  00129E  EE20 F00B          	lfsr	2,11
  1583  0012A2  5005               	movf	UpdateStrobeLED@SLED,w,c
  1584  0012A4  26D9               	addwf	16345,f,c
  1585  0012A6  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1586  0012A8  22DA               	addwfc	16346,f,c
  1587  0012AA  0E03               	movlw	3
  1588  0012AC  18DE               	xorwf	16350,w,c
  1589  0012AE  A4D8               	btfss	16344,2,c
  1590  0012B0  D024               	goto	l359
  1591  0012B2                     u1590:
  1592                           
  1593                           ;LED_Patterns.c: 270: SLED->StrobeCnt += STROBE_OFF_TIME_MS;
  1594  0012B2  0E15               	movlw	low _STROBE_OFF_TIME_MS
  1595  0012B4  6EF6               	movwf	16374,c
  1596  0012B6                     	if	1	;There is more than 1 active tblptr byte
  1597  0012B6  0E10               	movlw	high _STROBE_OFF_TIME_MS
  1598  0012B8  6EF7               	movwf	16375,c
  1599  0012BA                     	endif
  1600  0012BA                     	if	1	;There are 3 active tblptr bytes
  1601  0012BA  0E00               	movlw	low (_STROBE_OFF_TIME_MS shr (0+16))
  1602  0012BC  6EF8               	movwf	16376,c
  1603  0012BE                     	endif
  1604  0012BE  0009               	tblrd		*+
  1605  0012C0  006F FFD4  F007    	movff	16373,??_UpdateStrobeLED
  1606  0012C6  0009               	tblrd		*+
  1607  0012C8  006F FFD4  F008    	movff	16373,??_UpdateStrobeLED+1
  1608  0012CE  0009               	tblrd		*+
  1609  0012D0  006F FFD4  F009    	movff	16373,??_UpdateStrobeLED+2
  1610  0012D6  0009               	tblrd		*+
  1611  0012D8  006F FFD4  F00A    	movff	16373,??_UpdateStrobeLED+3
  1612  0012DE  EE20 F006          	lfsr	2,6
  1613  0012E2  5005               	movf	UpdateStrobeLED@SLED,w,c
  1614  0012E4  26D9               	addwf	16345,f,c
  1615  0012E6  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1616  0012E8  22DA               	addwfc	16346,f,c
  1617  0012EA  5007               	movf	??_UpdateStrobeLED,w,c
  1618  0012EC  26DE               	addwf	16350,f,c
  1619  0012EE  5008               	movf	??_UpdateStrobeLED+1,w,c
  1620  0012F0  22DE               	addwfc	16350,f,c
  1621  0012F2  5009               	movf	??_UpdateStrobeLED+2,w,c
  1622  0012F4  22DE               	addwfc	16350,f,c
  1623  0012F6  500A               	movf	??_UpdateStrobeLED+3,w,c
  1624  0012F8  D038               	goto	L1
  1625  0012FA                     l359:
  1626                           
  1627                           ;LED_Patterns.c: 271: else
  1628                           ;LED_Patterns.c: 272: SLED->StrobeCnt += (2000 - STROBE_ON_TIME_MS);
  1629  0012FA  0E19               	movlw	low _STROBE_ON_TIME_MS
  1630  0012FC  6EF6               	movwf	16374,c
  1631  0012FE                     	if	1	;There is more than 1 active tblptr byte
  1632  0012FE  0E10               	movlw	high _STROBE_ON_TIME_MS
  1633  001300  6EF7               	movwf	16375,c
  1634  001302                     	endif
  1635  001302                     	if	1	;There are 3 active tblptr bytes
  1636  001302  0E00               	movlw	low (_STROBE_ON_TIME_MS shr (0+16))
  1637  001304  6EF8               	movwf	16376,c
  1638  001306                     	endif
  1639  001306  0009               	tblrd		*+
  1640  001308  006F FFD4  F007    	movff	16373,??_UpdateStrobeLED
  1641  00130E  0009               	tblrd		*+
  1642  001310  006F FFD4  F008    	movff	16373,??_UpdateStrobeLED+1
  1643  001316  0009               	tblrd		*+
  1644  001318  006F FFD4  F009    	movff	16373,??_UpdateStrobeLED+2
  1645  00131E  0009               	tblrd		*+
  1646  001320  006F FFD4  F00A    	movff	16373,??_UpdateStrobeLED+3
  1647  001326  1E07               	comf	??_UpdateStrobeLED,f,c
  1648  001328  1E08               	comf	??_UpdateStrobeLED+1,f,c
  1649  00132A  1E09               	comf	??_UpdateStrobeLED+2,f,c
  1650  00132C  1E0A               	comf	??_UpdateStrobeLED+3,f,c
  1651  00132E  2A07               	incf	??_UpdateStrobeLED,f,c
  1652  001330  0E00               	movlw	0
  1653  001332  2208               	addwfc	??_UpdateStrobeLED+1,f,c
  1654  001334  2209               	addwfc	??_UpdateStrobeLED+2,f,c
  1655  001336  220A               	addwfc	??_UpdateStrobeLED+3,f,c
  1656  001338  0ED0               	movlw	208
  1657  00133A  2407               	addwf	??_UpdateStrobeLED,w,c
  1658  00133C  6E0B               	movwf	(??_UpdateStrobeLED+4)& (0+255),c
  1659  00133E  0E07               	movlw	7
  1660  001340  2008               	addwfc	??_UpdateStrobeLED+1,w,c
  1661  001342  6E0C               	movwf	(??_UpdateStrobeLED+5)& (0+255),c
  1662  001344  0E00               	movlw	0
  1663  001346  2009               	addwfc	??_UpdateStrobeLED+2,w,c
  1664  001348  6E0D               	movwf	(??_UpdateStrobeLED+6)& (0+255),c
  1665  00134A  0E00               	movlw	0
  1666  00134C  200A               	addwfc	??_UpdateStrobeLED+3,w,c
  1667  00134E  6E0E               	movwf	(??_UpdateStrobeLED+7)& (0+255),c
  1668  001350  EE20 F006          	lfsr	2,6
  1669  001354  5005               	movf	UpdateStrobeLED@SLED,w,c
  1670  001356  26D9               	addwf	16345,f,c
  1671  001358  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1672  00135A  22DA               	addwfc	16346,f,c
  1673  00135C  500B               	movf	??_UpdateStrobeLED+4,w,c
  1674  00135E  26DE               	addwf	16350,f,c
  1675  001360  500C               	movf	??_UpdateStrobeLED+5,w,c
  1676  001362  22DE               	addwfc	16350,f,c
  1677  001364  500D               	movf	??_UpdateStrobeLED+6,w,c
  1678  001366  22DE               	addwfc	16350,f,c
  1679  001368  500E               	movf	??_UpdateStrobeLED+7,w,c
  1680  00136A                     L1:
  1681  00136A  22DE               	addwfc	16350,f,c
  1682                           
  1683                           ;LED_Patterns.c: 274: SLED->PulseCnt++;
  1684  00136C  EE20 F00B          	lfsr	2,11
  1685  001370  5005               	movf	UpdateStrobeLED@SLED,w,c
  1686  001372  26D9               	addwf	16345,f,c
  1687  001374  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1688  001376  22DA               	addwfc	16346,f,c
  1689  001378  2ADF               	incf	16351,f,c
  1690                           
  1691                           ;LED_Patterns.c: 276: if (SLED->PulseCnt == 5)
  1692  00137A  EE20 F00B          	lfsr	2,11
  1693  00137E  5005               	movf	UpdateStrobeLED@SLED,w,c
  1694  001380  26D9               	addwf	16345,f,c
  1695  001382  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1696  001384  22DA               	addwfc	16346,f,c
  1697  001386  0E05               	movlw	5
  1698  001388  18DE               	xorwf	16350,w,c
  1699  00138A  A4D8               	btfss	16344,2,c
  1700  00138C  0012               	return	
  1701                           
  1702                           ;LED_Patterns.c: 277: SLED->PulseCnt = 0;
  1703  00138E  EE20 F00B          	lfsr	2,11
  1704  001392  5005               	movf	UpdateStrobeLED@SLED,w,c
  1705  001394  26D9               	addwf	16345,f,c
  1706  001396  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1707  001398  22DA               	addwfc	16346,f,c
  1708  00139A  0E00               	movlw	0
  1709  00139C  6EDF               	movwf	16351,c
  1710                           
  1711                           ;LED_Patterns.c: 279: }
  1712  00139E  0012               	return	
  1713  0013A0                     l358:
  1714                           
  1715                           ;LED_Patterns.c: 280: else
  1716                           ;LED_Patterns.c: 281: {
  1717                           ;LED_Patterns.c: 282: if ((SLED->PulseCnt < 2) || (SLED->PulseCnt == 3))
  1718  0013A0  EE20 F00B          	lfsr	2,11
  1719  0013A4  5005               	movf	UpdateStrobeLED@SLED,w,c
  1720  0013A6  26D9               	addwf	16345,f,c
  1721  0013A8  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1722  0013AA  22DA               	addwfc	16346,f,c
  1723  0013AC  0E01               	movlw	1
  1724  0013AE  64DF               	cpfsgt	16351,c
  1725  0013B0  D00A               	goto	u1620
  1726  0013B2  EE20 F00B          	lfsr	2,11
  1727  0013B6  5005               	movf	UpdateStrobeLED@SLED,w,c
  1728  0013B8  26D9               	addwf	16345,f,c
  1729  0013BA  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1730  0013BC  22DA               	addwfc	16346,f,c
  1731  0013BE  0E03               	movlw	3
  1732  0013C0  18DE               	xorwf	16350,w,c
  1733  0013C2  A4D8               	btfss	16344,2,c
  1734  0013C4  D027               	goto	l365
  1735  0013C6                     u1620:
  1736                           
  1737                           ;LED_Patterns.c: 283: {
  1738                           ;LED_Patterns.c: 284: *SLED->OutPort &= (unsigned char)~(1 << SLED->pin);
  1739  0013C6  EE20 F004          	lfsr	2,4
  1740  0013CA  5005               	movf	UpdateStrobeLED@SLED,w,c
  1741  0013CC  26D9               	addwf	16345,f,c
  1742  0013CE  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1743  0013D0  22DA               	addwfc	16346,f,c
  1744  0013D2  50DF               	movf	16351,w,c
  1745  0013D4  6E07               	movwf	??_UpdateStrobeLED& (0+255),c
  1746  0013D6  0E01               	movlw	1
  1747  0013D8  6E08               	movwf	(??_UpdateStrobeLED+1)& (0+255),c
  1748  0013DA  2A07               	incf	??_UpdateStrobeLED,f,c
  1749  0013DC  D002               	goto	u1634
  1750  0013DE                     u1635:
  1751  0013DE  90D8               	bcf	16344,0,c
  1752  0013E0  3608               	rlcf	??_UpdateStrobeLED+1,f,c
  1753  0013E2                     u1634:
  1754  0013E2  2E07               	decfsz	??_UpdateStrobeLED,f,c
  1755  0013E4  D7FC               	goto	u1635
  1756  0013E6  5008               	movf	??_UpdateStrobeLED+1,w,c
  1757  0013E8  0AFF               	xorlw	255
  1758  0013EA  6E09               	movwf	(??_UpdateStrobeLED+2)& (0+255),c
  1759  0013EC  0060  F017  FFD9   	movff	UpdateStrobeLED@SLED,16345
  1760  0013F2  0060  F01B  FFDA   	movff	UpdateStrobeLED@SLED+1,16346
  1761  0013F8  006F FF78  F00A    	movff	16350,??_UpdateStrobeLED+3
  1762  0013FE  006F FF74  F00B    	movff	16349,??_UpdateStrobeLED+4
  1763  001404  0060  F02B  FFD9   	movff	??_UpdateStrobeLED+3,16345
  1764  00140A  0060  F02F  FFDA   	movff	??_UpdateStrobeLED+4,16346
  1765  001410  5009               	movf	??_UpdateStrobeLED+2,w,c
  1766  001412  16DF               	andwf	16351,f,c
  1767  001414                     l365:
  1768                           
  1769                           ;LED_Patterns.c: 285: }
  1770                           ;LED_Patterns.c: 287: SLED->StrobeCnt += STROBE_ON_TIME_MS;
  1771  001414  0E19               	movlw	low _STROBE_ON_TIME_MS
  1772  001416  6EF6               	movwf	16374,c
  1773  001418                     	if	1	;There is more than 1 active tblptr byte
  1774  001418  0E10               	movlw	high _STROBE_ON_TIME_MS
  1775  00141A  6EF7               	movwf	16375,c
  1776  00141C                     	endif
  1777  00141C                     	if	1	;There are 3 active tblptr bytes
  1778  00141C  0E00               	movlw	low (_STROBE_ON_TIME_MS shr (0+16))
  1779  00141E  6EF8               	movwf	16376,c
  1780  001420                     	endif
  1781  001420  0009               	tblrd		*+
  1782  001422  006F FFD4  F007    	movff	16373,??_UpdateStrobeLED
  1783  001428  0009               	tblrd		*+
  1784  00142A  006F FFD4  F008    	movff	16373,??_UpdateStrobeLED+1
  1785  001430  0009               	tblrd		*+
  1786  001432  006F FFD4  F009    	movff	16373,??_UpdateStrobeLED+2
  1787  001438  0009               	tblrd		*+
  1788  00143A  006F FFD4  F00A    	movff	16373,??_UpdateStrobeLED+3
  1789  001440  EE20 F006          	lfsr	2,6
  1790  001444  5005               	movf	UpdateStrobeLED@SLED,w,c
  1791  001446  26D9               	addwf	16345,f,c
  1792  001448  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1793  00144A  22DA               	addwfc	16346,f,c
  1794  00144C  5007               	movf	??_UpdateStrobeLED,w,c
  1795  00144E  26DE               	addwf	16350,f,c
  1796  001450  5008               	movf	??_UpdateStrobeLED+1,w,c
  1797  001452  22DE               	addwfc	16350,f,c
  1798  001454  5009               	movf	??_UpdateStrobeLED+2,w,c
  1799  001456  22DE               	addwfc	16350,f,c
  1800  001458  500A               	movf	??_UpdateStrobeLED+3,w,c
  1801  00145A  22DE               	addwfc	16350,f,c
  1802                           
  1803                           ;LED_Patterns.c: 288: }
  1804                           ;LED_Patterns.c: 290: break;
  1805  00145C  0012               	return	
  1806  00145E                     
  1807                           ;LED_Patterns.c: 293: case AntiCollision:
  1808                           ;LED_Patterns.c: 294: {
  1809                           ;LED_Patterns.c: 303: SLED->A_B = (bool)!SLED->A_B;
  1810  00145E  EE20 F00C          	lfsr	2,12
  1811  001462  5005               	movf	UpdateStrobeLED@SLED,w,c
  1812  001464  26D9               	addwf	16345,f,c
  1813  001466  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1814  001468  22DA               	addwfc	16346,f,c
  1815  00146A  EE10 F00C          	lfsr	1,12
  1816  00146E  5005               	movf	UpdateStrobeLED@SLED,w,c
  1817  001470  26E1               	addwf	16353,f,c
  1818  001472  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1819  001474  22E2               	addwfc	16354,f,c
  1820  001476  50E7               	movf	16359,w,c
  1821  001478  A4D8               	btfss	16344,2,c
  1822  00147A  D002               	goto	u1640
  1823  00147C  0E01               	movlw	1
  1824  00147E  D001               	goto	u1650
  1825  001480                     u1640:
  1826  001480  0E00               	movlw	0
  1827  001482                     u1650:
  1828  001482  6EDF               	movwf	16351,c
  1829                           
  1830                           ;LED_Patterns.c: 305: if (!SLED->A_B)
  1831  001484  EE20 F00C          	lfsr	2,12
  1832  001488  5005               	movf	UpdateStrobeLED@SLED,w,c
  1833  00148A  26D9               	addwf	16345,f,c
  1834  00148C  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1835  00148E  22DA               	addwfc	16346,f,c
  1836  001490  50DF               	movf	16351,w,c
  1837  001492  A4D8               	btfss	16344,2,c
  1838  001494  D049               	goto	l370
  1839                           
  1840                           ;LED_Patterns.c: 306: {
  1841                           ;LED_Patterns.c: 307: *SLED->OutPort |= (unsigned char)(1 << SLED->pin);
  1842  001496  EE20 F004          	lfsr	2,4
  1843  00149A  5005               	movf	UpdateStrobeLED@SLED,w,c
  1844  00149C  26D9               	addwf	16345,f,c
  1845  00149E  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1846  0014A0  22DA               	addwfc	16346,f,c
  1847  0014A2  50DF               	movf	16351,w,c
  1848  0014A4  6E07               	movwf	??_UpdateStrobeLED& (0+255),c
  1849  0014A6  0E01               	movlw	1
  1850  0014A8  6E08               	movwf	(??_UpdateStrobeLED+1)& (0+255),c
  1851  0014AA  2A07               	incf	??_UpdateStrobeLED,f,c
  1852  0014AC  D002               	goto	u1674
  1853  0014AE                     u1675:
  1854  0014AE  90D8               	bcf	16344,0,c
  1855  0014B0  3608               	rlcf	??_UpdateStrobeLED+1,f,c
  1856  0014B2                     u1674:
  1857  0014B2  2E07               	decfsz	??_UpdateStrobeLED,f,c
  1858  0014B4  D7FC               	goto	u1675
  1859  0014B6  0060  F017  FFD9   	movff	UpdateStrobeLED@SLED,16345
  1860  0014BC  0060  F01B  FFDA   	movff	UpdateStrobeLED@SLED+1,16346
  1861  0014C2  006F FF78  F009    	movff	16350,??_UpdateStrobeLED+2
  1862  0014C8  006F FF74  F00A    	movff	16349,??_UpdateStrobeLED+3
  1863  0014CE  0060  F027  FFD9   	movff	??_UpdateStrobeLED+2,16345
  1864  0014D4  0060  F02B  FFDA   	movff	??_UpdateStrobeLED+3,16346
  1865  0014DA  5008               	movf	??_UpdateStrobeLED+1,w,c
  1866  0014DC  12DF               	iorwf	16351,f,c
  1867                           
  1868                           ;LED_Patterns.c: 308: SLED->StrobeCnt += GEN_STROBE_OFF_TIME_MS;
  1869  0014DE  0E0D               	movlw	low _GEN_STROBE_OFF_TIME_MS
  1870  0014E0  6EF6               	movwf	16374,c
  1871  0014E2                     	if	1	;There is more than 1 active tblptr byte
  1872  0014E2  0E10               	movlw	high _GEN_STROBE_OFF_TIME_MS
  1873  0014E4  6EF7               	movwf	16375,c
  1874  0014E6                     	endif
  1875  0014E6                     	if	1	;There are 3 active tblptr bytes
  1876  0014E6  0E00               	movlw	low (_GEN_STROBE_OFF_TIME_MS shr (0+16))
  1877  0014E8  6EF8               	movwf	16376,c
  1878  0014EA                     	endif
  1879  0014EA  0009               	tblrd		*+
  1880  0014EC  006F FFD4  F007    	movff	16373,??_UpdateStrobeLED
  1881  0014F2  0009               	tblrd		*+
  1882  0014F4  006F FFD4  F008    	movff	16373,??_UpdateStrobeLED+1
  1883  0014FA  0009               	tblrd		*+
  1884  0014FC  006F FFD4  F009    	movff	16373,??_UpdateStrobeLED+2
  1885  001502  0009               	tblrd		*+
  1886  001504  006F FFD4  F00A    	movff	16373,??_UpdateStrobeLED+3
  1887  00150A  EE20 F006          	lfsr	2,6
  1888  00150E  5005               	movf	UpdateStrobeLED@SLED,w,c
  1889  001510  26D9               	addwf	16345,f,c
  1890  001512  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1891  001514  22DA               	addwfc	16346,f,c
  1892  001516  5007               	movf	??_UpdateStrobeLED,w,c
  1893  001518  26DE               	addwf	16350,f,c
  1894  00151A  5008               	movf	??_UpdateStrobeLED+1,w,c
  1895  00151C  22DE               	addwfc	16350,f,c
  1896  00151E  5009               	movf	??_UpdateStrobeLED+2,w,c
  1897  001520  22DE               	addwfc	16350,f,c
  1898  001522  500A               	movf	??_UpdateStrobeLED+3,w,c
  1899  001524  22DE               	addwfc	16350,f,c
  1900                           
  1901                           ;LED_Patterns.c: 309: }
  1902  001526  0012               	return	
  1903  001528                     l370:
  1904                           
  1905                           ;LED_Patterns.c: 310: else
  1906                           ;LED_Patterns.c: 311: {
  1907                           ;LED_Patterns.c: 312: *SLED->OutPort &= (unsigned char)~(1 << SLED->pin);
  1908  001528  EE20 F004          	lfsr	2,4
  1909  00152C  5005               	movf	UpdateStrobeLED@SLED,w,c
  1910  00152E  26D9               	addwf	16345,f,c
  1911  001530  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1912  001532  22DA               	addwfc	16346,f,c
  1913  001534  50DF               	movf	16351,w,c
  1914  001536  6E07               	movwf	??_UpdateStrobeLED& (0+255),c
  1915  001538  0E01               	movlw	1
  1916  00153A  6E08               	movwf	(??_UpdateStrobeLED+1)& (0+255),c
  1917  00153C  2A07               	incf	??_UpdateStrobeLED,f,c
  1918  00153E  D002               	goto	u1684
  1919  001540                     u1685:
  1920  001540  90D8               	bcf	16344,0,c
  1921  001542  3608               	rlcf	??_UpdateStrobeLED+1,f,c
  1922  001544                     u1684:
  1923  001544  2E07               	decfsz	??_UpdateStrobeLED,f,c
  1924  001546  D7FC               	goto	u1685
  1925  001548  5008               	movf	??_UpdateStrobeLED+1,w,c
  1926  00154A  0AFF               	xorlw	255
  1927  00154C  6E09               	movwf	(??_UpdateStrobeLED+2)& (0+255),c
  1928  00154E  0060  F017  FFD9   	movff	UpdateStrobeLED@SLED,16345
  1929  001554  0060  F01B  FFDA   	movff	UpdateStrobeLED@SLED+1,16346
  1930  00155A  006F FF78  F00A    	movff	16350,??_UpdateStrobeLED+3
  1931  001560  006F FF74  F00B    	movff	16349,??_UpdateStrobeLED+4
  1932  001566  0060  F02B  FFD9   	movff	??_UpdateStrobeLED+3,16345
  1933  00156C  0060  F02F  FFDA   	movff	??_UpdateStrobeLED+4,16346
  1934  001572  5009               	movf	??_UpdateStrobeLED+2,w,c
  1935  001574  16DF               	andwf	16351,f,c
  1936                           
  1937                           ;LED_Patterns.c: 313: SLED->StrobeCnt += GEN_STROBE_ON_TIME_MS;
  1938  001576  0E11               	movlw	low _GEN_STROBE_ON_TIME_MS
  1939  001578  6EF6               	movwf	16374,c
  1940  00157A                     	if	1	;There is more than 1 active tblptr byte
  1941  00157A  0E10               	movlw	high _GEN_STROBE_ON_TIME_MS
  1942  00157C  6EF7               	movwf	16375,c
  1943  00157E                     	endif
  1944  00157E                     	if	1	;There are 3 active tblptr bytes
  1945  00157E  0E00               	movlw	low (_GEN_STROBE_ON_TIME_MS shr (0+16))
  1946  001580  6EF8               	movwf	16376,c
  1947  001582                     	endif
  1948  001582  0009               	tblrd		*+
  1949  001584  006F FFD4  F007    	movff	16373,??_UpdateStrobeLED
  1950  00158A  0009               	tblrd		*+
  1951  00158C  006F FFD4  F008    	movff	16373,??_UpdateStrobeLED+1
  1952  001592  0009               	tblrd		*+
  1953  001594  006F FFD4  F009    	movff	16373,??_UpdateStrobeLED+2
  1954  00159A  0009               	tblrd		*+
  1955  00159C  006F FFD4  F00A    	movff	16373,??_UpdateStrobeLED+3
  1956  0015A2  EE20 F006          	lfsr	2,6
  1957  0015A6  5005               	movf	UpdateStrobeLED@SLED,w,c
  1958  0015A8  26D9               	addwf	16345,f,c
  1959  0015AA  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1960  0015AC  22DA               	addwfc	16346,f,c
  1961  0015AE  5007               	movf	??_UpdateStrobeLED,w,c
  1962  0015B0  26DE               	addwf	16350,f,c
  1963  0015B2  5008               	movf	??_UpdateStrobeLED+1,w,c
  1964  0015B4  22DE               	addwfc	16350,f,c
  1965  0015B6  5009               	movf	??_UpdateStrobeLED+2,w,c
  1966  0015B8  22DE               	addwfc	16350,f,c
  1967  0015BA  500A               	movf	??_UpdateStrobeLED+3,w,c
  1968  0015BC  22DE               	addwfc	16350,f,c
  1969                           
  1970                           ;LED_Patterns.c: 319: }
  1971                           ;LED_Patterns.c: 320: }
  1972                           
  1973                           ;LED_Patterns.c: 314: }
  1974                           ;LED_Patterns.c: 317: break;
  1975  0015BE  0012               	return	
  1976  0015C0                     l350:
  1977  0015C0  EE20 F005          	lfsr	2,5
  1978  0015C4  5005               	movf	UpdateStrobeLED@SLED,w,c
  1979  0015C6  26D9               	addwf	16345,f,c
  1980  0015C8  5006               	movf	UpdateStrobeLED@SLED+1,w,c
  1981  0015CA  22DA               	addwfc	16346,f,c
  1982  0015CC  50DF               	movf	16351,w,c
  1983                           
  1984                           ; Switch size 1, requested type "space"
  1985                           ; Number of cases is 4, Range of values is 0 to 3
  1986                           ; switch strategies available:
  1987                           ; Name         Instructions Cycles
  1988                           ; simple_byte           13     7 (average)
  1989                           ;	Chosen strategy is simple_byte
  1990  0015CE  0A00               	xorlw	0	; case 0
  1991  0015D0  B4D8               	btfsc	16344,2,c
  1992  0015D2  D549               	goto	l351
  1993  0015D4  0A01               	xorlw	1	; case 1
  1994  0015D6  B4D8               	btfsc	16344,2,c
  1995  0015D8  D619               	goto	l357
  1996  0015DA  0A03               	xorlw	3	; case 2
  1997  0015DC  B4D8               	btfsc	16344,2,c
  1998  0015DE  D73F               	goto	l368
  1999  0015E0  0A01               	xorlw	1	; case 3
  2000  0015E2  A4D8               	btfss	16344,2,c
  2001  0015E4  0012               	return	
  2002  0015E6  D73B               	goto	l368
  2003  0015E8                     __end_of_UpdateStrobeLED:
  2004                           	opt stack 0
  2005                           
  2006 ;; *************** function _UpdateRabbitLEDs *****************
  2007 ;; Defined at:
  2008 ;;		line 402 in file "LED_Patterns.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;  rp              2    4[COMRAM] PTR struct RabbitPort
  2011 ;;		 -> main@Rabbit(13), 
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;  i               1   11[COMRAM] unsigned char 
  2014 ;;  Mask            1   12[COMRAM] unsigned char 
  2015 ;;  buffer          1   10[COMRAM] unsigned char 
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  1    wreg      void 
  2018 ;; Registers used:
  2019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2025 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2026 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2027 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2028 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2029 ;;Total ram usage:        9 bytes
  2030 ;; Hardware stack levels used:    1
  2031 ;; Hardware stack levels required when called:    4
  2032 ;; This function calls:
  2033 ;;		_GetCurrentTime
  2034 ;; This function is called by:
  2035 ;;		_main
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           	psect	text3
  2040  001D2E                     __ptext3:
  2041                           	opt stack 0
  2042  001D2E                     _UpdateRabbitLEDs:
  2043                           	opt stack 26
  2044                           
  2045                           ;LED_Patterns.c: 404: if (rp->RabbitRUN)
  2046                           
  2047                           ;incstack = 0
  2048  001D2E  EE20 F00B          	lfsr	2,11
  2049  001D32  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2050  001D34  26D9               	addwf	16345,f,c
  2051  001D36  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2052  001D38  22DA               	addwfc	16346,f,c
  2053  001D3A  50DF               	movf	16351,w,c
  2054  001D3C  B4D8               	btfsc	16344,2,c
  2055  001D3E  0012               	return	
  2056                           
  2057                           ;LED_Patterns.c: 405: {
  2058                           ;LED_Patterns.c: 406: if (rp->msCnt <= GetCurrentTime())
  2059  001D40  EE20 F006          	lfsr	2,6
  2060  001D44  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2061  001D46  26D9               	addwf	16345,f,c
  2062  001D48  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2063  001D4A  22DA               	addwfc	16346,f,c
  2064  001D4C  EC90  F014         	call	_GetCurrentTime	;wreg free
  2065  001D50  50DE               	movf	16350,w,c
  2066  001D52  5C01               	subwf	?_GetCurrentTime,w,c
  2067  001D54  50DE               	movf	16350,w,c
  2068  001D56  5802               	subwfb	?_GetCurrentTime+1,w,c
  2069  001D58  50DE               	movf	16350,w,c
  2070  001D5A  5803               	subwfb	?_GetCurrentTime+2,w,c
  2071  001D5C  50DE               	movf	16350,w,c
  2072  001D5E  5804               	subwfb	?_GetCurrentTime+3,w,c
  2073  001D60  A0D8               	btfss	16344,0,c
  2074  001D62  0012               	return	
  2075                           
  2076                           ;LED_Patterns.c: 407: {
  2077                           ;LED_Patterns.c: 413: rp->A_B = (bool)!rp->A_B;
  2078  001D64  EE20 F00C          	lfsr	2,12
  2079  001D68  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2080  001D6A  26D9               	addwf	16345,f,c
  2081  001D6C  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2082  001D6E  22DA               	addwfc	16346,f,c
  2083  001D70  EE10 F00C          	lfsr	1,12
  2084  001D74  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2085  001D76  26E1               	addwf	16353,f,c
  2086  001D78  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2087  001D7A  22E2               	addwfc	16354,f,c
  2088  001D7C  50E7               	movf	16359,w,c
  2089  001D7E  A4D8               	btfss	16344,2,c
  2090  001D80  D002               	goto	u1710
  2091  001D82  0E01               	movlw	1
  2092  001D84  D001               	goto	u1720
  2093  001D86                     u1710:
  2094  001D86  0E00               	movlw	0
  2095  001D88                     u1720:
  2096  001D88  6EDF               	movwf	16351,c
  2097                           
  2098                           ;LED_Patterns.c: 415: unsigned char Mask = 0;
  2099  001D8A  0E00               	movlw	0
  2100  001D8C  6E0D               	movwf	UpdateRabbitLEDs@Mask,c
  2101                           
  2102                           ;LED_Patterns.c: 416: for (uint8_t i = 0; i < rp->NumLights; i++)
  2103  001D8E  0E00               	movlw	0
  2104  001D90  6E0C               	movwf	UpdateRabbitLEDs@i,c
  2105  001D92  D003               	goto	l390
  2106  001D94                     
  2107                           ;LED_Patterns.c: 417: {
  2108                           ;LED_Patterns.c: 418: Mask = (unsigned char)((Mask << 1) | 1);
  2109  001D94  80D8               	bsf	16344,0,c
  2110  001D96  360D               	rlcf	UpdateRabbitLEDs@Mask,f,c
  2111  001D98  2A0C               	incf	UpdateRabbitLEDs@i,f,c
  2112  001D9A                     l390:
  2113  001D9A  EE20 F005          	lfsr	2,5
  2114  001D9E  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2115  001DA0  26D9               	addwf	16345,f,c
  2116  001DA2  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2117  001DA4  22DA               	addwfc	16346,f,c
  2118  001DA6  50DE               	movf	16350,w,c
  2119  001DA8  5C0C               	subwf	UpdateRabbitLEDs@i,w,c
  2120  001DAA  A0D8               	btfss	16344,0,c
  2121  001DAC  D7F3               	goto	l391
  2122                           
  2123                           ;LED_Patterns.c: 419: }
  2124                           ;LED_Patterns.c: 421: Mask = (unsigned char)(Mask << rp->StartingLED);
  2125  001DAE  EE20 F004          	lfsr	2,4
  2126  001DB2  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2127  001DB4  26D9               	addwf	16345,f,c
  2128  001DB6  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2129  001DB8  22DA               	addwfc	16346,f,c
  2130  001DBA  50DF               	movf	16351,w,c
  2131  001DBC  6E07               	movwf	??_UpdateRabbitLEDs& (0+255),c
  2132  001DBE  0060  F034  F008   	movff	UpdateRabbitLEDs@Mask,??_UpdateRabbitLEDs+1
  2133  001DC4  2A07               	incf	??_UpdateRabbitLEDs,f,c
  2134  001DC6  D002               	goto	u1744
  2135  001DC8                     u1745:
  2136  001DC8  90D8               	bcf	16344,0,c
  2137  001DCA  3608               	rlcf	??_UpdateRabbitLEDs+1,f,c
  2138  001DCC                     u1744:
  2139  001DCC  2E07               	decfsz	??_UpdateRabbitLEDs,f,c
  2140  001DCE  D7FC               	goto	u1745
  2141  001DD0  5008               	movf	??_UpdateRabbitLEDs+1,w,c
  2142  001DD2  6E0D               	movwf	UpdateRabbitLEDs@Mask,c
  2143                           
  2144                           ;LED_Patterns.c: 423: unsigned char buffer;
  2145                           ;LED_Patterns.c: 425: if (!rp->A_B)
  2146  001DD4  EE20 F00C          	lfsr	2,12
  2147  001DD8  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2148  001DDA  26D9               	addwf	16345,f,c
  2149  001DDC  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2150  001DDE  22DA               	addwfc	16346,f,c
  2151  001DE0  50DF               	movf	16351,w,c
  2152  001DE2  A4D8               	btfss	16344,2,c
  2153  001DE4  D058               	goto	l393
  2154                           
  2155                           ;LED_Patterns.c: 426: {
  2156                           ;LED_Patterns.c: 427: rp->ShiftCNT++;
  2157  001DE6  EE20 F00A          	lfsr	2,10
  2158  001DEA  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2159  001DEC  26D9               	addwf	16345,f,c
  2160  001DEE  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2161  001DF0  22DA               	addwfc	16346,f,c
  2162  001DF2  2ADF               	incf	16351,f,c
  2163                           
  2164                           ;LED_Patterns.c: 429: if (rp->ShiftCNT == rp->NumLights)
  2165  001DF4  EE20 F005          	lfsr	2,5
  2166  001DF8  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2167  001DFA  26D9               	addwf	16345,f,c
  2168  001DFC  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2169  001DFE  22DA               	addwfc	16346,f,c
  2170  001E00  EE10 F00A          	lfsr	1,10
  2171  001E04  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2172  001E06  26E1               	addwf	16353,f,c
  2173  001E08  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2174  001E0A  22E2               	addwfc	16354,f,c
  2175  001E0C  50DE               	movf	16350,w,c
  2176  001E0E  18E6               	xorwf	16358,w,c
  2177  001E10  A4D8               	btfss	16344,2,c
  2178  001E12  D008               	goto	l394
  2179                           
  2180                           ;LED_Patterns.c: 430: {
  2181                           ;LED_Patterns.c: 431: rp->ShiftCNT = 0;
  2182  001E14  EE20 F00A          	lfsr	2,10
  2183  001E18  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2184  001E1A  26D9               	addwf	16345,f,c
  2185  001E1C  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2186  001E1E  22DA               	addwfc	16346,f,c
  2187  001E20  0E00               	movlw	0
  2188  001E22  6EDF               	movwf	16351,c
  2189  001E24                     l394:
  2190                           
  2191                           ;LED_Patterns.c: 432: }
  2192                           ;LED_Patterns.c: 433: rp->msCnt += RABBIT_OFF_TIME_MS;
  2193  001E24  0E01               	movlw	low _RABBIT_OFF_TIME_MS
  2194  001E26  6EF6               	movwf	16374,c
  2195  001E28                     	if	1	;There is more than 1 active tblptr byte
  2196  001E28  0E10               	movlw	high _RABBIT_OFF_TIME_MS
  2197  001E2A  6EF7               	movwf	16375,c
  2198  001E2C                     	endif
  2199  001E2C                     	if	1	;There are 3 active tblptr bytes
  2200  001E2C  0E00               	movlw	low (_RABBIT_OFF_TIME_MS shr (0+16))
  2201  001E2E  6EF8               	movwf	16376,c
  2202  001E30                     	endif
  2203  001E30  0009               	tblrd		*+
  2204  001E32  006F FFD4  F007    	movff	16373,??_UpdateRabbitLEDs
  2205  001E38  0009               	tblrd		*+
  2206  001E3A  006F FFD4  F008    	movff	16373,??_UpdateRabbitLEDs+1
  2207  001E40  0009               	tblrd		*+
  2208  001E42  006F FFD4  F009    	movff	16373,??_UpdateRabbitLEDs+2
  2209  001E48  0009               	tblrd		*+
  2210  001E4A  006F FFD4  F00A    	movff	16373,??_UpdateRabbitLEDs+3
  2211  001E50  EE20 F006          	lfsr	2,6
  2212  001E54  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2213  001E56  26D9               	addwf	16345,f,c
  2214  001E58  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2215  001E5A  22DA               	addwfc	16346,f,c
  2216  001E5C  5007               	movf	??_UpdateRabbitLEDs,w,c
  2217  001E5E  26DE               	addwf	16350,f,c
  2218  001E60  5008               	movf	??_UpdateRabbitLEDs+1,w,c
  2219  001E62  22DE               	addwfc	16350,f,c
  2220  001E64  5009               	movf	??_UpdateRabbitLEDs+2,w,c
  2221  001E66  22DE               	addwfc	16350,f,c
  2222  001E68  500A               	movf	??_UpdateRabbitLEDs+3,w,c
  2223  001E6A  22DE               	addwfc	16350,f,c
  2224                           
  2225                           ;LED_Patterns.c: 435: *rp->OutputPort |= Mask;
  2226  001E6C  0060  F017  FFD9   	movff	UpdateRabbitLEDs@rp,16345
  2227  001E72  0060  F01B  FFDA   	movff	UpdateRabbitLEDs@rp+1,16346
  2228  001E78  006F FF78  F007    	movff	16350,??_UpdateRabbitLEDs
  2229  001E7E  006F FF74  F008    	movff	16349,??_UpdateRabbitLEDs+1
  2230  001E84  0060  F01F  FFD9   	movff	??_UpdateRabbitLEDs,16345
  2231  001E8A  0060  F023  FFDA   	movff	??_UpdateRabbitLEDs+1,16346
  2232  001E90  500D               	movf	UpdateRabbitLEDs@Mask,w,c
  2233  001E92  12DF               	iorwf	16351,f,c
  2234                           
  2235                           ;LED_Patterns.c: 436: }
  2236  001E94  0012               	return	
  2237  001E96                     l393:
  2238                           
  2239                           ;LED_Patterns.c: 437: else
  2240                           ;LED_Patterns.c: 438: {
  2241                           ;LED_Patterns.c: 441: buffer = (unsigned char)(1 << (rp->StartingLED + rp->ShiftCNT));
  2242  001E96  EE20 F00A          	lfsr	2,10
  2243  001E9A  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2244  001E9C  26D9               	addwf	16345,f,c
  2245  001E9E  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2246  001EA0  22DA               	addwfc	16346,f,c
  2247  001EA2  50DF               	movf	16351,w,c
  2248  001EA4  6E07               	movwf	??_UpdateRabbitLEDs& (0+255),c
  2249  001EA6  EE20 F004          	lfsr	2,4
  2250  001EAA  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2251  001EAC  26D9               	addwf	16345,f,c
  2252  001EAE  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2253  001EB0  22DA               	addwfc	16346,f,c
  2254  001EB2  50DF               	movf	16351,w,c
  2255  001EB4  2407               	addwf	??_UpdateRabbitLEDs,w,c
  2256  001EB6  6E08               	movwf	(??_UpdateRabbitLEDs+1)& (0+255),c
  2257  001EB8  0E01               	movlw	1
  2258  001EBA  6E09               	movwf	(??_UpdateRabbitLEDs+2)& (0+255),c
  2259  001EBC  2A08               	incf	??_UpdateRabbitLEDs+1,f,c
  2260  001EBE  D002               	goto	u1774
  2261  001EC0                     u1775:
  2262  001EC0  90D8               	bcf	16344,0,c
  2263  001EC2  3609               	rlcf	??_UpdateRabbitLEDs+2,f,c
  2264  001EC4                     u1774:
  2265  001EC4  2E08               	decfsz	??_UpdateRabbitLEDs+1,f,c
  2266  001EC6  D7FC               	goto	u1775
  2267  001EC8  5009               	movf	??_UpdateRabbitLEDs+2,w,c
  2268  001ECA  6E0B               	movwf	UpdateRabbitLEDs@buffer,c
  2269                           
  2270                           ;LED_Patterns.c: 443: *rp->OutputPort &= (unsigned char)~buffer;
  2271  001ECC  500B               	movf	UpdateRabbitLEDs@buffer,w,c
  2272  001ECE  0AFF               	xorlw	255
  2273  001ED0  6E07               	movwf	??_UpdateRabbitLEDs& (0+255),c
  2274  001ED2  0060  F017  FFD9   	movff	UpdateRabbitLEDs@rp,16345
  2275  001ED8  0060  F01B  FFDA   	movff	UpdateRabbitLEDs@rp+1,16346
  2276  001EDE  006F FF78  F008    	movff	16350,??_UpdateRabbitLEDs+1
  2277  001EE4  006F FF74  F009    	movff	16349,??_UpdateRabbitLEDs+2
  2278  001EEA  0060  F023  FFD9   	movff	??_UpdateRabbitLEDs+1,16345
  2279  001EF0  0060  F027  FFDA   	movff	??_UpdateRabbitLEDs+2,16346
  2280  001EF6  5007               	movf	??_UpdateRabbitLEDs,w,c
  2281  001EF8  16DF               	andwf	16351,f,c
  2282                           
  2283                           ;LED_Patterns.c: 446: rp->msCnt += RABBIT_ON_TIME_MS;
  2284  001EFA  0E05               	movlw	low _RABBIT_ON_TIME_MS
  2285  001EFC  6EF6               	movwf	16374,c
  2286  001EFE                     	if	1	;There is more than 1 active tblptr byte
  2287  001EFE  0E10               	movlw	high _RABBIT_ON_TIME_MS
  2288  001F00  6EF7               	movwf	16375,c
  2289  001F02                     	endif
  2290  001F02                     	if	1	;There are 3 active tblptr bytes
  2291  001F02  0E00               	movlw	low (_RABBIT_ON_TIME_MS shr (0+16))
  2292  001F04  6EF8               	movwf	16376,c
  2293  001F06                     	endif
  2294  001F06  0009               	tblrd		*+
  2295  001F08  006F FFD4  F007    	movff	16373,??_UpdateRabbitLEDs
  2296  001F0E  0009               	tblrd		*+
  2297  001F10  006F FFD4  F008    	movff	16373,??_UpdateRabbitLEDs+1
  2298  001F16  0009               	tblrd		*+
  2299  001F18  006F FFD4  F009    	movff	16373,??_UpdateRabbitLEDs+2
  2300  001F1E  0009               	tblrd		*+
  2301  001F20  006F FFD4  F00A    	movff	16373,??_UpdateRabbitLEDs+3
  2302  001F26  EE20 F006          	lfsr	2,6
  2303  001F2A  5005               	movf	UpdateRabbitLEDs@rp,w,c
  2304  001F2C  26D9               	addwf	16345,f,c
  2305  001F2E  5006               	movf	UpdateRabbitLEDs@rp+1,w,c
  2306  001F30  22DA               	addwfc	16346,f,c
  2307  001F32  5007               	movf	??_UpdateRabbitLEDs,w,c
  2308  001F34  26DE               	addwf	16350,f,c
  2309  001F36  5008               	movf	??_UpdateRabbitLEDs+1,w,c
  2310  001F38  22DE               	addwfc	16350,f,c
  2311  001F3A  5009               	movf	??_UpdateRabbitLEDs+2,w,c
  2312  001F3C  22DE               	addwfc	16350,f,c
  2313  001F3E  500A               	movf	??_UpdateRabbitLEDs+3,w,c
  2314  001F40  22DE               	addwfc	16350,f,c
  2315  001F42  0012               	return	
  2316  001F44                     __end_of_UpdateRabbitLEDs:
  2317                           	opt stack 0
  2318                           
  2319 ;; *************** function _UpdateGunLED *****************
  2320 ;; Defined at:
  2321 ;;		line 89 in file "LED_Patterns.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;  gp              2    4[COMRAM] PTR struct GunPort
  2324 ;;		 -> main@Gun3(17), main@Gun2(17), main@Gun1(17), 
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;		None
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  1    wreg      void 
  2329 ;; Registers used:
  2330 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2336 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2338 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2339 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2340 ;;Total ram usage:        7 bytes
  2341 ;; Hardware stack levels used:    1
  2342 ;; Hardware stack levels required when called:    4
  2343 ;; This function calls:
  2344 ;;		_GetCurrentTime
  2345 ;; This function is called by:
  2346 ;;		_main
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           	psect	text4
  2351  0019AE                     __ptext4:
  2352                           	opt stack 0
  2353  0019AE                     _UpdateGunLED:
  2354                           	opt stack 26
  2355                           
  2356                           ;LED_Patterns.c: 91: if (gp->GunRUN)
  2357                           
  2358                           ;incstack = 0
  2359  0019AE  EE20 F00F          	lfsr	2,15
  2360  0019B2  5005               	movf	UpdateGunLED@gp,w,c
  2361  0019B4  26D9               	addwf	16345,f,c
  2362  0019B6  5006               	movf	UpdateGunLED@gp+1,w,c
  2363  0019B8  22DA               	addwfc	16346,f,c
  2364  0019BA  50DF               	movf	16351,w,c
  2365  0019BC  B4D8               	btfsc	16344,2,c
  2366  0019BE  0012               	return	
  2367                           
  2368                           ;LED_Patterns.c: 92: {
  2369                           ;LED_Patterns.c: 93: if (gp->GunCnt <= GetCurrentTime())
  2370  0019C0  EE20 F00A          	lfsr	2,10
  2371  0019C4  5005               	movf	UpdateGunLED@gp,w,c
  2372  0019C6  26D9               	addwf	16345,f,c
  2373  0019C8  5006               	movf	UpdateGunLED@gp+1,w,c
  2374  0019CA  22DA               	addwfc	16346,f,c
  2375  0019CC  EC90  F014         	call	_GetCurrentTime	;wreg free
  2376  0019D0  50DE               	movf	16350,w,c
  2377  0019D2  5C01               	subwf	?_GetCurrentTime,w,c
  2378  0019D4  50DE               	movf	16350,w,c
  2379  0019D6  5802               	subwfb	?_GetCurrentTime+1,w,c
  2380  0019D8  50DE               	movf	16350,w,c
  2381  0019DA  5803               	subwfb	?_GetCurrentTime+2,w,c
  2382  0019DC  50DE               	movf	16350,w,c
  2383  0019DE  5804               	subwfb	?_GetCurrentTime+3,w,c
  2384  0019E0  A0D8               	btfss	16344,0,c
  2385  0019E2  0012               	return	
  2386                           
  2387                           ;LED_Patterns.c: 94: {
  2388                           ;LED_Patterns.c: 95: gp->A_B = (bool)!gp->A_B;
  2389  0019E4  EE20 F010          	lfsr	2,16
  2390  0019E8  5005               	movf	UpdateGunLED@gp,w,c
  2391  0019EA  26D9               	addwf	16345,f,c
  2392  0019EC  5006               	movf	UpdateGunLED@gp+1,w,c
  2393  0019EE  22DA               	addwfc	16346,f,c
  2394  0019F0  EE10 F010          	lfsr	1,16
  2395  0019F4  5005               	movf	UpdateGunLED@gp,w,c
  2396  0019F6  26E1               	addwf	16353,f,c
  2397  0019F8  5006               	movf	UpdateGunLED@gp+1,w,c
  2398  0019FA  22E2               	addwfc	16354,f,c
  2399  0019FC  50E7               	movf	16359,w,c
  2400  0019FE  A4D8               	btfss	16344,2,c
  2401  001A00  D002               	goto	u1320
  2402  001A02  0E01               	movlw	1
  2403  001A04  D001               	goto	u1330
  2404  001A06                     u1320:
  2405  001A06  0E00               	movlw	0
  2406  001A08                     u1330:
  2407  001A08  6EDF               	movwf	16351,c
  2408                           
  2409                           ;LED_Patterns.c: 97: if (!gp->A_B)
  2410  001A0A  EE20 F010          	lfsr	2,16
  2411  001A0E  5005               	movf	UpdateGunLED@gp,w,c
  2412  001A10  26D9               	addwf	16345,f,c
  2413  001A12  5006               	movf	UpdateGunLED@gp+1,w,c
  2414  001A14  22DA               	addwfc	16346,f,c
  2415  001A16  50DF               	movf	16351,w,c
  2416  001A18  A4D8               	btfss	16344,2,c
  2417  001A1A  D096               	goto	l318
  2418                           
  2419                           ;LED_Patterns.c: 98: {
  2420                           ;LED_Patterns.c: 99: *gp->OutputPort |= (unsigned char)(1 << gp->GunLED);
  2421  001A1C  EE20 F008          	lfsr	2,8
  2422  001A20  5005               	movf	UpdateGunLED@gp,w,c
  2423  001A22  26D9               	addwf	16345,f,c
  2424  001A24  5006               	movf	UpdateGunLED@gp+1,w,c
  2425  001A26  22DA               	addwfc	16346,f,c
  2426  001A28  50DF               	movf	16351,w,c
  2427  001A2A  6E07               	movwf	??_UpdateGunLED& (0+255),c
  2428  001A2C  0E01               	movlw	1
  2429  001A2E  6E08               	movwf	(??_UpdateGunLED+1)& (0+255),c
  2430  001A30  2A07               	incf	??_UpdateGunLED,f,c
  2431  001A32  D002               	goto	u1354
  2432  001A34                     u1355:
  2433  001A34  90D8               	bcf	16344,0,c
  2434  001A36  3608               	rlcf	??_UpdateGunLED+1,f,c
  2435  001A38                     u1354:
  2436  001A38  2E07               	decfsz	??_UpdateGunLED,f,c
  2437  001A3A  D7FC               	goto	u1355
  2438  001A3C  0060  F017  FFD9   	movff	UpdateGunLED@gp,16345
  2439  001A42  0060  F01B  FFDA   	movff	UpdateGunLED@gp+1,16346
  2440  001A48  006F FF78  F009    	movff	16350,??_UpdateGunLED+2
  2441  001A4E  006F FF74  F00A    	movff	16349,??_UpdateGunLED+3
  2442  001A54  0060  F027  FFD9   	movff	??_UpdateGunLED+2,16345
  2443  001A5A  0060  F02B  FFDA   	movff	??_UpdateGunLED+3,16346
  2444  001A60  5008               	movf	??_UpdateGunLED+1,w,c
  2445  001A62  12DF               	iorwf	16351,f,c
  2446                           
  2447                           ;LED_Patterns.c: 100: *gp->TracerPort |= (unsigned char)(1 << gp->TracerLED);
  2448  001A64  EE20 F009          	lfsr	2,9
  2449  001A68  5005               	movf	UpdateGunLED@gp,w,c
  2450  001A6A  26D9               	addwf	16345,f,c
  2451  001A6C  5006               	movf	UpdateGunLED@gp+1,w,c
  2452  001A6E  22DA               	addwfc	16346,f,c
  2453  001A70  50DF               	movf	16351,w,c
  2454  001A72  6E07               	movwf	??_UpdateGunLED& (0+255),c
  2455  001A74  0E01               	movlw	1
  2456  001A76  6E08               	movwf	(??_UpdateGunLED+1)& (0+255),c
  2457  001A78  2A07               	incf	??_UpdateGunLED,f,c
  2458  001A7A  D002               	goto	u1364
  2459  001A7C                     u1365:
  2460  001A7C  90D8               	bcf	16344,0,c
  2461  001A7E  3608               	rlcf	??_UpdateGunLED+1,f,c
  2462  001A80                     u1364:
  2463  001A80  2E07               	decfsz	??_UpdateGunLED,f,c
  2464  001A82  D7FC               	goto	u1365
  2465  001A84  EE20 F004          	lfsr	2,4
  2466  001A88  5005               	movf	UpdateGunLED@gp,w,c
  2467  001A8A  26D9               	addwf	16345,f,c
  2468  001A8C  5006               	movf	UpdateGunLED@gp+1,w,c
  2469  001A8E  22DA               	addwfc	16346,f,c
  2470  001A90  006F FF78  F009    	movff	16350,??_UpdateGunLED+2
  2471  001A96  006F FF74  F00A    	movff	16349,??_UpdateGunLED+3
  2472  001A9C  0060  F027  FFD9   	movff	??_UpdateGunLED+2,16345
  2473  001AA2  0060  F02B  FFDA   	movff	??_UpdateGunLED+3,16346
  2474  001AA8  5008               	movf	??_UpdateGunLED+1,w,c
  2475  001AAA  12DF               	iorwf	16351,f,c
  2476                           
  2477                           ;LED_Patterns.c: 102: if(gp->ShotsCnt == 8)
  2478  001AAC  EE20 F00E          	lfsr	2,14
  2479  001AB0  5005               	movf	UpdateGunLED@gp,w,c
  2480  001AB2  26D9               	addwf	16345,f,c
  2481  001AB4  5006               	movf	UpdateGunLED@gp+1,w,c
  2482  001AB6  22DA               	addwfc	16346,f,c
  2483  001AB8  0E08               	movlw	8
  2484  001ABA  18DE               	xorwf	16350,w,c
  2485  001ABC  A4D8               	btfss	16344,2,c
  2486  001ABE  D006               	goto	l319
  2487                           
  2488                           ;LED_Patterns.c: 103: {
  2489                           ;LED_Patterns.c: 104: gp->GunCnt += GUN_SPACE_TIME_MS;
  2490  001AC0  0E1D               	movlw	low _GUN_SPACE_TIME_MS
  2491  001AC2  6EF6               	movwf	16374,c
  2492  001AC4                     	if	1	;There is more than 1 active tblptr byte
  2493  001AC4  0E10               	movlw	high _GUN_SPACE_TIME_MS
  2494  001AC6  6EF7               	movwf	16375,c
  2495  001AC8                     	endif
  2496  001AC8                     	if	1	;There are 3 active tblptr bytes
  2497  001AC8  0E00               	movlw	low (_GUN_SPACE_TIME_MS shr (0+16))
  2498  001ACA  D005               	goto	L2
  2499  001ACC                     l319:
  2500                           
  2501                           ;LED_Patterns.c: 106: else
  2502                           ;LED_Patterns.c: 107: {
  2503                           ;LED_Patterns.c: 108: gp->GunCnt += GUN_OFF_TIME_MS;
  2504  001ACC  0E21               	movlw	low _GUN_OFF_TIME_MS
  2505  001ACE  6EF6               	movwf	16374,c
  2506  001AD0                     	if	1	;There is more than 1 active tblptr byte
  2507  001AD0  0E10               	movlw	high _GUN_OFF_TIME_MS
  2508  001AD2  6EF7               	movwf	16375,c
  2509  001AD4                     	endif
  2510  001AD4                     	if	1	;There are 3 active tblptr bytes
  2511  001AD4  0E00               	movlw	low (_GUN_OFF_TIME_MS shr (0+16))
  2512  001AD6                     L2:
  2513  001AD6  6EF8               	movwf	16376,c
  2514  001AD8                     	endif
  2515  001AD8  0009               	tblrd		*+
  2516  001ADA  006F FFD4  F007    	movff	16373,??_UpdateGunLED
  2517  001AE0  0009               	tblrd		*+
  2518  001AE2  006F FFD4  F008    	movff	16373,??_UpdateGunLED+1
  2519  001AE8  0009               	tblrd		*+
  2520  001AEA  006F FFD4  F009    	movff	16373,??_UpdateGunLED+2
  2521  001AF0  0009               	tblrd		*+
  2522  001AF2  006F FFD4  F00A    	movff	16373,??_UpdateGunLED+3
  2523  001AF8  EE20 F00A          	lfsr	2,10
  2524  001AFC  5005               	movf	UpdateGunLED@gp,w,c
  2525  001AFE  26D9               	addwf	16345,f,c
  2526  001B00  5006               	movf	UpdateGunLED@gp+1,w,c
  2527  001B02  22DA               	addwfc	16346,f,c
  2528  001B04  5007               	movf	??_UpdateGunLED,w,c
  2529  001B06  26DE               	addwf	16350,f,c
  2530  001B08  5008               	movf	??_UpdateGunLED+1,w,c
  2531  001B0A  22DE               	addwfc	16350,f,c
  2532  001B0C  5009               	movf	??_UpdateGunLED+2,w,c
  2533  001B0E  22DE               	addwfc	16350,f,c
  2534  001B10  500A               	movf	??_UpdateGunLED+3,w,c
  2535  001B12  22DE               	addwfc	16350,f,c
  2536                           
  2537                           ;LED_Patterns.c: 109: }
  2538                           ;LED_Patterns.c: 111: gp->ShotsCnt++;
  2539  001B14  EE20 F00E          	lfsr	2,14
  2540  001B18  5005               	movf	UpdateGunLED@gp,w,c
  2541  001B1A  26D9               	addwf	16345,f,c
  2542  001B1C  5006               	movf	UpdateGunLED@gp+1,w,c
  2543  001B1E  22DA               	addwfc	16346,f,c
  2544  001B20  2ADF               	incf	16351,f,c
  2545                           
  2546                           ;LED_Patterns.c: 113: if (gp->ShotsCnt == 10)
  2547  001B22  EE20 F00E          	lfsr	2,14
  2548  001B26  5005               	movf	UpdateGunLED@gp,w,c
  2549  001B28  26D9               	addwf	16345,f,c
  2550  001B2A  5006               	movf	UpdateGunLED@gp+1,w,c
  2551  001B2C  22DA               	addwfc	16346,f,c
  2552  001B2E  0E0A               	movlw	10
  2553  001B30  18DE               	xorwf	16350,w,c
  2554  001B32  A4D8               	btfss	16344,2,c
  2555  001B34  0012               	return	
  2556                           
  2557                           ;LED_Patterns.c: 114: {
  2558                           ;LED_Patterns.c: 115: gp->ShotsCnt = 0;
  2559  001B36  EE20 F00E          	lfsr	2,14
  2560  001B3A  5005               	movf	UpdateGunLED@gp,w,c
  2561  001B3C  26D9               	addwf	16345,f,c
  2562  001B3E  5006               	movf	UpdateGunLED@gp+1,w,c
  2563  001B40  22DA               	addwfc	16346,f,c
  2564  001B42  0E00               	movlw	0
  2565  001B44  6EDF               	movwf	16351,c
  2566                           
  2567                           ;LED_Patterns.c: 116: }
  2568                           ;LED_Patterns.c: 117: }
  2569  001B46  0012               	return	
  2570  001B48                     l318:
  2571                           
  2572                           ;LED_Patterns.c: 118: else
  2573                           ;LED_Patterns.c: 119: {
  2574                           ;LED_Patterns.c: 120: if (gp->ShotsCnt < 9)
  2575  001B48  EE20 F00E          	lfsr	2,14
  2576  001B4C  5005               	movf	UpdateGunLED@gp,w,c
  2577  001B4E  26D9               	addwf	16345,f,c
  2578  001B50  5006               	movf	UpdateGunLED@gp+1,w,c
  2579  001B52  22DA               	addwfc	16346,f,c
  2580  001B54  0E09               	movlw	9
  2581  001B56  60DF               	cpfslt	16351,c
  2582  001B58  D070               	goto	l323
  2583                           
  2584                           ;LED_Patterns.c: 121: {
  2585                           ;LED_Patterns.c: 122: *gp->OutputPort &= (unsigned char)~(1 << gp->GunLED);
  2586  001B5A  EE20 F008          	lfsr	2,8
  2587  001B5E  5005               	movf	UpdateGunLED@gp,w,c
  2588  001B60  26D9               	addwf	16345,f,c
  2589  001B62  5006               	movf	UpdateGunLED@gp+1,w,c
  2590  001B64  22DA               	addwfc	16346,f,c
  2591  001B66  50DF               	movf	16351,w,c
  2592  001B68  6E07               	movwf	??_UpdateGunLED& (0+255),c
  2593  001B6A  0E01               	movlw	1
  2594  001B6C  6E08               	movwf	(??_UpdateGunLED+1)& (0+255),c
  2595  001B6E  2A07               	incf	??_UpdateGunLED,f,c
  2596  001B70  D002               	goto	u1404
  2597  001B72                     u1405:
  2598  001B72  90D8               	bcf	16344,0,c
  2599  001B74  3608               	rlcf	??_UpdateGunLED+1,f,c
  2600  001B76                     u1404:
  2601  001B76  2E07               	decfsz	??_UpdateGunLED,f,c
  2602  001B78  D7FC               	goto	u1405
  2603  001B7A  5008               	movf	??_UpdateGunLED+1,w,c
  2604  001B7C  0AFF               	xorlw	255
  2605  001B7E  6E09               	movwf	(??_UpdateGunLED+2)& (0+255),c
  2606  001B80  0060  F017  FFD9   	movff	UpdateGunLED@gp,16345
  2607  001B86  0060  F01B  FFDA   	movff	UpdateGunLED@gp+1,16346
  2608  001B8C  006F FF78  F00A    	movff	16350,??_UpdateGunLED+3
  2609  001B92  006F FF74  F00B    	movff	16349,??_UpdateGunLED+4
  2610  001B98  0060  F02B  FFD9   	movff	??_UpdateGunLED+3,16345
  2611  001B9E  0060  F02F  FFDA   	movff	??_UpdateGunLED+4,16346
  2612  001BA4  5009               	movf	??_UpdateGunLED+2,w,c
  2613  001BA6  16DF               	andwf	16351,f,c
  2614                           
  2615                           ;LED_Patterns.c: 123: *gp->TracerPort |= (unsigned char)(1 << gp->TracerLED);
  2616  001BA8  EE20 F009          	lfsr	2,9
  2617  001BAC  5005               	movf	UpdateGunLED@gp,w,c
  2618  001BAE  26D9               	addwf	16345,f,c
  2619  001BB0  5006               	movf	UpdateGunLED@gp+1,w,c
  2620  001BB2  22DA               	addwfc	16346,f,c
  2621  001BB4  50DF               	movf	16351,w,c
  2622  001BB6  6E07               	movwf	??_UpdateGunLED& (0+255),c
  2623  001BB8  0E01               	movlw	1
  2624  001BBA  6E08               	movwf	(??_UpdateGunLED+1)& (0+255),c
  2625  001BBC  2A07               	incf	??_UpdateGunLED,f,c
  2626  001BBE  D002               	goto	u1414
  2627  001BC0                     u1415:
  2628  001BC0  90D8               	bcf	16344,0,c
  2629  001BC2  3608               	rlcf	??_UpdateGunLED+1,f,c
  2630  001BC4                     u1414:
  2631  001BC4  2E07               	decfsz	??_UpdateGunLED,f,c
  2632  001BC6  D7FC               	goto	u1415
  2633  001BC8  EE20 F004          	lfsr	2,4
  2634  001BCC  5005               	movf	UpdateGunLED@gp,w,c
  2635  001BCE  26D9               	addwf	16345,f,c
  2636  001BD0  5006               	movf	UpdateGunLED@gp+1,w,c
  2637  001BD2  22DA               	addwfc	16346,f,c
  2638  001BD4  006F FF78  F009    	movff	16350,??_UpdateGunLED+2
  2639  001BDA  006F FF74  F00A    	movff	16349,??_UpdateGunLED+3
  2640  001BE0  0060  F027  FFD9   	movff	??_UpdateGunLED+2,16345
  2641  001BE6  0060  F02B  FFDA   	movff	??_UpdateGunLED+3,16346
  2642  001BEC  5008               	movf	??_UpdateGunLED+1,w,c
  2643  001BEE  12DF               	iorwf	16351,f,c
  2644                           
  2645                           ;LED_Patterns.c: 124: gp->GunCnt += GUN_ON_TIME_MS;
  2646  001BF0  0E25               	movlw	low _GUN_ON_TIME_MS
  2647  001BF2  6EF6               	movwf	16374,c
  2648  001BF4                     	if	1	;There is more than 1 active tblptr byte
  2649  001BF4  0E10               	movlw	high _GUN_ON_TIME_MS
  2650  001BF6  6EF7               	movwf	16375,c
  2651  001BF8                     	endif
  2652  001BF8                     	if	1	;There are 3 active tblptr bytes
  2653  001BF8  0E00               	movlw	low (_GUN_ON_TIME_MS shr (0+16))
  2654  001BFA  6EF8               	movwf	16376,c
  2655  001BFC                     	endif
  2656  001BFC  0009               	tblrd		*+
  2657  001BFE  006F FFD4  F007    	movff	16373,??_UpdateGunLED
  2658  001C04  0009               	tblrd		*+
  2659  001C06  006F FFD4  F008    	movff	16373,??_UpdateGunLED+1
  2660  001C0C  0009               	tblrd		*+
  2661  001C0E  006F FFD4  F009    	movff	16373,??_UpdateGunLED+2
  2662  001C14  0009               	tblrd		*+
  2663  001C16  006F FFD4  F00A    	movff	16373,??_UpdateGunLED+3
  2664  001C1C  EE20 F00A          	lfsr	2,10
  2665  001C20  5005               	movf	UpdateGunLED@gp,w,c
  2666  001C22  26D9               	addwf	16345,f,c
  2667  001C24  5006               	movf	UpdateGunLED@gp+1,w,c
  2668  001C26  22DA               	addwfc	16346,f,c
  2669  001C28  5007               	movf	??_UpdateGunLED,w,c
  2670  001C2A  26DE               	addwf	16350,f,c
  2671  001C2C  5008               	movf	??_UpdateGunLED+1,w,c
  2672  001C2E  22DE               	addwfc	16350,f,c
  2673  001C30  5009               	movf	??_UpdateGunLED+2,w,c
  2674  001C32  22DE               	addwfc	16350,f,c
  2675  001C34  500A               	movf	??_UpdateGunLED+3,w,c
  2676  001C36  22DE               	addwfc	16350,f,c
  2677                           
  2678                           ;LED_Patterns.c: 126: }
  2679  001C38  0012               	return	
  2680  001C3A                     l323:
  2681                           
  2682                           ;LED_Patterns.c: 127: else if(gp->ShotsCnt == 9)
  2683  001C3A  EE20 F00E          	lfsr	2,14
  2684  001C3E  5005               	movf	UpdateGunLED@gp,w,c
  2685  001C40  26D9               	addwf	16345,f,c
  2686  001C42  5006               	movf	UpdateGunLED@gp+1,w,c
  2687  001C44  22DA               	addwfc	16346,f,c
  2688  001C46  0E09               	movlw	9
  2689  001C48  18DE               	xorwf	16350,w,c
  2690  001C4A  A4D8               	btfss	16344,2,c
  2691  001C4C  0012               	return	
  2692                           
  2693                           ;LED_Patterns.c: 128: {
  2694                           ;LED_Patterns.c: 129: *gp->TracerPort &= (unsigned char)~(1 << gp->TracerLED);
  2695  001C4E  EE20 F009          	lfsr	2,9
  2696  001C52  5005               	movf	UpdateGunLED@gp,w,c
  2697  001C54  26D9               	addwf	16345,f,c
  2698  001C56  5006               	movf	UpdateGunLED@gp+1,w,c
  2699  001C58  22DA               	addwfc	16346,f,c
  2700  001C5A  50DF               	movf	16351,w,c
  2701  001C5C  6E07               	movwf	??_UpdateGunLED& (0+255),c
  2702  001C5E  0E01               	movlw	1
  2703  001C60  6E08               	movwf	(??_UpdateGunLED+1)& (0+255),c
  2704  001C62  2A07               	incf	??_UpdateGunLED,f,c
  2705  001C64  D002               	goto	u1434
  2706  001C66                     u1435:
  2707  001C66  90D8               	bcf	16344,0,c
  2708  001C68  3608               	rlcf	??_UpdateGunLED+1,f,c
  2709  001C6A                     u1434:
  2710  001C6A  2E07               	decfsz	??_UpdateGunLED,f,c
  2711  001C6C  D7FC               	goto	u1435
  2712  001C6E  5008               	movf	??_UpdateGunLED+1,w,c
  2713  001C70  0AFF               	xorlw	255
  2714  001C72  6E09               	movwf	(??_UpdateGunLED+2)& (0+255),c
  2715  001C74  EE20 F004          	lfsr	2,4
  2716  001C78  5005               	movf	UpdateGunLED@gp,w,c
  2717  001C7A  26D9               	addwf	16345,f,c
  2718  001C7C  5006               	movf	UpdateGunLED@gp+1,w,c
  2719  001C7E  22DA               	addwfc	16346,f,c
  2720  001C80  006F FF78  F00A    	movff	16350,??_UpdateGunLED+3
  2721  001C86  006F FF74  F00B    	movff	16349,??_UpdateGunLED+4
  2722  001C8C  0060  F02B  FFD9   	movff	??_UpdateGunLED+3,16345
  2723  001C92  0060  F02F  FFDA   	movff	??_UpdateGunLED+4,16346
  2724  001C98  5009               	movf	??_UpdateGunLED+2,w,c
  2725  001C9A  16DF               	andwf	16351,f,c
  2726                           
  2727                           ;LED_Patterns.c: 130: *gp->OutputPort |= (unsigned char)(1 << gp->GunLED);
  2728  001C9C  EE20 F008          	lfsr	2,8
  2729  001CA0  5005               	movf	UpdateGunLED@gp,w,c
  2730  001CA2  26D9               	addwf	16345,f,c
  2731  001CA4  5006               	movf	UpdateGunLED@gp+1,w,c
  2732  001CA6  22DA               	addwfc	16346,f,c
  2733  001CA8  50DF               	movf	16351,w,c
  2734  001CAA  6E07               	movwf	??_UpdateGunLED& (0+255),c
  2735  001CAC  0E01               	movlw	1
  2736  001CAE  6E08               	movwf	(??_UpdateGunLED+1)& (0+255),c
  2737  001CB0  2A07               	incf	??_UpdateGunLED,f,c
  2738  001CB2  D002               	goto	u1444
  2739  001CB4                     u1445:
  2740  001CB4  90D8               	bcf	16344,0,c
  2741  001CB6  3608               	rlcf	??_UpdateGunLED+1,f,c
  2742  001CB8                     u1444:
  2743  001CB8  2E07               	decfsz	??_UpdateGunLED,f,c
  2744  001CBA  D7FC               	goto	u1445
  2745  001CBC  0060  F017  FFD9   	movff	UpdateGunLED@gp,16345
  2746  001CC2  0060  F01B  FFDA   	movff	UpdateGunLED@gp+1,16346
  2747  001CC8  006F FF78  F009    	movff	16350,??_UpdateGunLED+2
  2748  001CCE  006F FF74  F00A    	movff	16349,??_UpdateGunLED+3
  2749  001CD4  0060  F027  FFD9   	movff	??_UpdateGunLED+2,16345
  2750  001CDA  0060  F02B  FFDA   	movff	??_UpdateGunLED+3,16346
  2751  001CE0  5008               	movf	??_UpdateGunLED+1,w,c
  2752  001CE2  12DF               	iorwf	16351,f,c
  2753                           
  2754                           ;LED_Patterns.c: 131: gp->GunCnt += GUN_ON_TIME_MS;
  2755  001CE4  0E25               	movlw	low _GUN_ON_TIME_MS
  2756  001CE6  6EF6               	movwf	16374,c
  2757  001CE8                     	if	1	;There is more than 1 active tblptr byte
  2758  001CE8  0E10               	movlw	high _GUN_ON_TIME_MS
  2759  001CEA  6EF7               	movwf	16375,c
  2760  001CEC                     	endif
  2761  001CEC                     	if	1	;There are 3 active tblptr bytes
  2762  001CEC  0E00               	movlw	low (_GUN_ON_TIME_MS shr (0+16))
  2763  001CEE  6EF8               	movwf	16376,c
  2764  001CF0                     	endif
  2765  001CF0  0009               	tblrd		*+
  2766  001CF2  006F FFD4  F007    	movff	16373,??_UpdateGunLED
  2767  001CF8  0009               	tblrd		*+
  2768  001CFA  006F FFD4  F008    	movff	16373,??_UpdateGunLED+1
  2769  001D00  0009               	tblrd		*+
  2770  001D02  006F FFD4  F009    	movff	16373,??_UpdateGunLED+2
  2771  001D08  0009               	tblrd		*+
  2772  001D0A  006F FFD4  F00A    	movff	16373,??_UpdateGunLED+3
  2773  001D10  EE20 F00A          	lfsr	2,10
  2774  001D14  5005               	movf	UpdateGunLED@gp,w,c
  2775  001D16  26D9               	addwf	16345,f,c
  2776  001D18  5006               	movf	UpdateGunLED@gp+1,w,c
  2777  001D1A  22DA               	addwfc	16346,f,c
  2778  001D1C  5007               	movf	??_UpdateGunLED,w,c
  2779  001D1E  26DE               	addwf	16350,f,c
  2780  001D20  5008               	movf	??_UpdateGunLED+1,w,c
  2781  001D22  22DE               	addwfc	16350,f,c
  2782  001D24  5009               	movf	??_UpdateGunLED+2,w,c
  2783  001D26  22DE               	addwfc	16350,f,c
  2784  001D28  500A               	movf	??_UpdateGunLED+3,w,c
  2785  001D2A  22DE               	addwfc	16350,f,c
  2786  001D2C  0012               	return	
  2787  001D2E                     __end_of_UpdateGunLED:
  2788                           	opt stack 0
  2789                           
  2790 ;; *************** function _StopWatch_Initialize *****************
  2791 ;; Defined at:
  2792 ;;		line 12 in file "stop_watch.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;		None
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;		None
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  1    wreg      void 
  2799 ;; Registers used:
  2800 ;;		wreg, status,2, status,0, cstack
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2810 ;;Total ram usage:        0 bytes
  2811 ;; Hardware stack levels used:    1
  2812 ;; Hardware stack levels required when called:    5
  2813 ;; This function calls:
  2814 ;;		_TMR0_Initialize
  2815 ;;		_TMR0_SetInterruptHandler
  2816 ;;		_TMR0_StopTimer
  2817 ;; This function is called by:
  2818 ;;		_main
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           	psect	text5
  2823  00289C                     __ptext5:
  2824                           	opt stack 0
  2825  00289C                     _StopWatch_Initialize:
  2826                           	opt stack 25
  2827                           
  2828                           ;stop_watch.c: 14: TMR0_StopTimer();
  2829                           
  2830                           ;incstack = 0
  2831  00289C  ECC8  F014         	call	_TMR0_StopTimer	;wreg free
  2832                           
  2833                           ;stop_watch.c: 16: globalTime = 0;
  2834  0028A0  0E00               	movlw	0
  2835  0028A2  6E2A               	movwf	_globalTime,c	;volatile
  2836  0028A4  0E00               	movlw	0
  2837  0028A6  6E2B               	movwf	_globalTime+1,c	;volatile
  2838  0028A8  0E00               	movlw	0
  2839  0028AA  6E2C               	movwf	_globalTime+2,c	;volatile
  2840  0028AC  0E00               	movlw	0
  2841  0028AE  6E2D               	movwf	_globalTime+3,c	;volatile
  2842                           
  2843                           ;stop_watch.c: 18: TMR0_Initialize();
  2844  0028B0  EC3A  F014         	call	_TMR0_Initialize	;wreg free
  2845                           
  2846                           ;stop_watch.c: 20: TMR0_SetInterruptHandler(StopWatchISR);
  2847  0028B4  0E82               	movlw	low _StopWatchISR
  2848  0028B6  6E01               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
  2849  0028B8  0E29               	movlw	high _StopWatchISR
  2850  0028BA  6E02               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
  2851  0028BC  ECBA  F014         	call	_TMR0_SetInterruptHandler	;wreg free
  2852  0028C0  0012               	return		;funcret
  2853  0028C2                     __end_of_StopWatch_Initialize:
  2854                           	opt stack 0
  2855                           
  2856 ;; *************** function _TMR0_StopTimer *****************
  2857 ;; Defined at:
  2858 ;;		line 92 in file "mcc_generated_files/tmr0.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;		None
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;		None
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  1    wreg      void 
  2865 ;; Registers used:
  2866 ;;		None
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2876 ;;Total ram usage:        0 bytes
  2877 ;; Hardware stack levels used:    1
  2878 ;; Hardware stack levels required when called:    3
  2879 ;; This function calls:
  2880 ;;		Nothing
  2881 ;; This function is called by:
  2882 ;;		_StopWatch_Initialize
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           	psect	text6
  2887  002990                     __ptext6:
  2888                           	opt stack 0
  2889  002990                     _TMR0_StopTimer:
  2890                           	opt stack 26
  2891                           
  2892                           ;tmr0.c: 95: T0CON0bits.T0EN = 0;
  2893                           
  2894                           ;incstack = 0
  2895  002990  013F               	movlb	63	; () banked
  2896  002992  9FB8               	bcf	184,7,b	;volatile
  2897                           
  2898                           ; BSR set to: 63
  2899  002994  0012               	return		;funcret
  2900  002996                     __end_of_TMR0_StopTimer:
  2901                           	opt stack 0
  2902                           
  2903 ;; *************** function _StopSyncStrobes *****************
  2904 ;; Defined at:
  2905 ;;		line 205 in file "LED_Patterns.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;  SLED_A          2    6[COMRAM] PTR struct StrobeLED
  2908 ;;		 -> main@GenStrobe(13), 
  2909 ;;  SLED_B          2    8[COMRAM] PTR struct StrobeLED
  2910 ;;		 -> main@ACStrobe(13), 
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;		None
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1    wreg      void 
  2915 ;; Registers used:
  2916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2922 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2925 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;Total ram usage:        4 bytes
  2927 ;; Hardware stack levels used:    1
  2928 ;; Hardware stack levels required when called:    4
  2929 ;; This function calls:
  2930 ;;		_StopStrobe
  2931 ;; This function is called by:
  2932 ;;		_main
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text7
  2937  0028C2                     __ptext7:
  2938                           	opt stack 0
  2939  0028C2                     _StopSyncStrobes:
  2940                           	opt stack 26
  2941                           
  2942                           ;LED_Patterns.c: 207: StopStrobe(SLED_A);
  2943                           
  2944                           ; BSR set to: 63
  2945                           ;incstack = 0
  2946  0028C2  0060  F01C  F001   	movff	StopSyncStrobes@SLED_A,StopStrobe@SLED
  2947  0028C8  0060  F020  F002   	movff	StopSyncStrobes@SLED_A+1,StopStrobe@SLED+1
  2948  0028CE  ECAA  F013         	call	_StopStrobe	;wreg free
  2949                           
  2950                           ;LED_Patterns.c: 208: StopStrobe(SLED_B);
  2951  0028D2  0060  F024  F001   	movff	StopSyncStrobes@SLED_B,StopStrobe@SLED
  2952  0028D8  0060  F028  F002   	movff	StopSyncStrobes@SLED_B+1,StopStrobe@SLED+1
  2953  0028DE  ECAA  F013         	call	_StopStrobe	;wreg free
  2954  0028E2  0012               	return		;funcret
  2955  0028E4                     __end_of_StopSyncStrobes:
  2956                           	opt stack 0
  2957                           
  2958 ;; *************** function _StartSyncStrobes *****************
  2959 ;; Defined at:
  2960 ;;		line 170 in file "LED_Patterns.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;  SLED_A          2   16[COMRAM] PTR struct StrobeLED
  2963 ;;		 -> main@GenStrobe(13), 
  2964 ;;  SLED_B          2   18[COMRAM] PTR struct StrobeLED
  2965 ;;		 -> main@ACStrobe(13), 
  2966 ;;  delay           4   20[COMRAM] unsigned long 
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;		None
  2969 ;; Return value:  Size  Location     Type
  2970 ;;                  1    wreg      void 
  2971 ;; Registers used:
  2972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2973 ;; Tracked objects:
  2974 ;;		On entry : 0/0
  2975 ;;		On exit  : 0/0
  2976 ;;		Unchanged: 0/0
  2977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2978 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2980 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2981 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2982 ;;Total ram usage:       16 bytes
  2983 ;; Hardware stack levels used:    1
  2984 ;; Hardware stack levels required when called:    5
  2985 ;; This function calls:
  2986 ;;		_StartStrobe
  2987 ;;		_StopStrobe
  2988 ;; This function is called by:
  2989 ;;		_main
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993                           	psect	text8
  2994  002318                     __ptext8:
  2995                           	opt stack 0
  2996  002318                     _StartSyncStrobes:
  2997                           	opt stack 25
  2998                           
  2999                           ;LED_Patterns.c: 173: if (SLED_B->StrobeRUN)
  3000                           
  3001                           ;incstack = 0
  3002  002318  EE20 F00A          	lfsr	2,10
  3003  00231C  5013               	movf	StartSyncStrobes@SLED_B,w,c
  3004  00231E  26D9               	addwf	16345,f,c
  3005  002320  5014               	movf	StartSyncStrobes@SLED_B+1,w,c
  3006  002322  22DA               	addwfc	16346,f,c
  3007  002324  50DF               	movf	16351,w,c
  3008  002326  B4D8               	btfsc	16344,2,c
  3009  002328  D008               	goto	l337
  3010                           
  3011                           ;LED_Patterns.c: 174: StopStrobe(SLED_B);
  3012  00232A  0060  F04C  F001   	movff	StartSyncStrobes@SLED_B,StopStrobe@SLED
  3013  002330  0060  F050  F002   	movff	StartSyncStrobes@SLED_B+1,StopStrobe@SLED+1
  3014  002336  ECAA  F013         	call	_StopStrobe	;wreg free
  3015  00233A                     l337:
  3016                           
  3017                           ;LED_Patterns.c: 176: StartStrobe(SLED_A);
  3018  00233A  0060  F044  F007   	movff	StartSyncStrobes@SLED_A,StartStrobe@SLED
  3019  002340  0060  F048  F008   	movff	StartSyncStrobes@SLED_A+1,StartStrobe@SLED+1
  3020  002346  EC05  F011         	call	_StartStrobe	;wreg free
  3021                           
  3022                           ;LED_Patterns.c: 182: SLED_B->StrobeCnt = SLED_A->StrobeCnt + delay;
  3023  00234A  EE20 F006          	lfsr	2,6
  3024  00234E  5011               	movf	StartSyncStrobes@SLED_A,w,c
  3025  002350  26D9               	addwf	16345,f,c
  3026  002352  5012               	movf	StartSyncStrobes@SLED_A+1,w,c
  3027  002354  22DA               	addwfc	16346,f,c
  3028  002356  006F FF78  F019    	movff	16350,??_StartSyncStrobes
  3029  00235C  006F FF78  F01A    	movff	16350,??_StartSyncStrobes+1
  3030  002362  006F FF78  F01B    	movff	16350,??_StartSyncStrobes+2
  3031  002368  006F FF78  F01C    	movff	16350,??_StartSyncStrobes+3
  3032  00236E  5015               	movf	StartSyncStrobes@delay,w,c
  3033  002370  2419               	addwf	??_StartSyncStrobes,w,c
  3034  002372  6E1D               	movwf	(??_StartSyncStrobes+4)& (0+255),c
  3035  002374  5016               	movf	StartSyncStrobes@delay+1,w,c
  3036  002376  201A               	addwfc	??_StartSyncStrobes+1,w,c
  3037  002378  6E1E               	movwf	(??_StartSyncStrobes+5)& (0+255),c
  3038  00237A  5017               	movf	StartSyncStrobes@delay+2,w,c
  3039  00237C  201B               	addwfc	??_StartSyncStrobes+2,w,c
  3040  00237E  6E1F               	movwf	(??_StartSyncStrobes+6)& (0+255),c
  3041  002380  5018               	movf	StartSyncStrobes@delay+3,w,c
  3042  002382  201C               	addwfc	??_StartSyncStrobes+3,w,c
  3043  002384  6E20               	movwf	(??_StartSyncStrobes+7)& (0+255),c
  3044  002386  EE20 F006          	lfsr	2,6
  3045  00238A  5013               	movf	StartSyncStrobes@SLED_B,w,c
  3046  00238C  26D9               	addwf	16345,f,c
  3047  00238E  5014               	movf	StartSyncStrobes@SLED_B+1,w,c
  3048  002390  22DA               	addwfc	16346,f,c
  3049  002392  0060  F077  FFDE   	movff	??_StartSyncStrobes+4,16350
  3050  002398  0060  F07B  FFDE   	movff	??_StartSyncStrobes+5,16350
  3051  00239E  0060  F07F  FFDE   	movff	??_StartSyncStrobes+6,16350
  3052  0023A4  0060  F083  FFDE   	movff	??_StartSyncStrobes+7,16350
  3053                           
  3054                           ;LED_Patterns.c: 183: SLED_B->StrobeRUN = 1;
  3055  0023AA  EE20 F00A          	lfsr	2,10
  3056  0023AE  5013               	movf	StartSyncStrobes@SLED_B,w,c
  3057  0023B0  26D9               	addwf	16345,f,c
  3058  0023B2  5014               	movf	StartSyncStrobes@SLED_B+1,w,c
  3059  0023B4  22DA               	addwfc	16346,f,c
  3060  0023B6  0E01               	movlw	1
  3061  0023B8  6EDF               	movwf	16351,c
  3062                           
  3063                           ;LED_Patterns.c: 184: SLED_B->A_B = 0;
  3064  0023BA  EE20 F00C          	lfsr	2,12
  3065  0023BE  5013               	movf	StartSyncStrobes@SLED_B,w,c
  3066  0023C0  26D9               	addwf	16345,f,c
  3067  0023C2  5014               	movf	StartSyncStrobes@SLED_B+1,w,c
  3068  0023C4  22DA               	addwfc	16346,f,c
  3069  0023C6  0E00               	movlw	0
  3070  0023C8  6EDF               	movwf	16351,c
  3071                           
  3072                           ;LED_Patterns.c: 185: SLED_B->PulseCnt = 0;
  3073  0023CA  EE20 F00B          	lfsr	2,11
  3074  0023CE  5013               	movf	StartSyncStrobes@SLED_B,w,c
  3075  0023D0  26D9               	addwf	16345,f,c
  3076  0023D2  5014               	movf	StartSyncStrobes@SLED_B+1,w,c
  3077  0023D4  22DA               	addwfc	16346,f,c
  3078  0023D6  0E00               	movlw	0
  3079  0023D8  6EDF               	movwf	16351,c
  3080                           
  3081                           ;LED_Patterns.c: 186: *SLED_B->OutPort |= (unsigned char)(1 << SLED_B->pin);
  3082  0023DA  EE20 F004          	lfsr	2,4
  3083  0023DE  5013               	movf	StartSyncStrobes@SLED_B,w,c
  3084  0023E0  26D9               	addwf	16345,f,c
  3085  0023E2  5014               	movf	StartSyncStrobes@SLED_B+1,w,c
  3086  0023E4  22DA               	addwfc	16346,f,c
  3087  0023E6  50DF               	movf	16351,w,c
  3088  0023E8  6E19               	movwf	??_StartSyncStrobes& (0+255),c
  3089  0023EA  0E01               	movlw	1
  3090  0023EC  6E1A               	movwf	(??_StartSyncStrobes+1)& (0+255),c
  3091  0023EE  2A19               	incf	??_StartSyncStrobes,f,c
  3092  0023F0  D002               	goto	u1254
  3093  0023F2                     u1255:
  3094  0023F2  90D8               	bcf	16344,0,c
  3095  0023F4  361A               	rlcf	??_StartSyncStrobes+1,f,c
  3096  0023F6                     u1254:
  3097  0023F6  2E19               	decfsz	??_StartSyncStrobes,f,c
  3098  0023F8  D7FC               	goto	u1255
  3099  0023FA  0060  F04F  FFD9   	movff	StartSyncStrobes@SLED_B,16345
  3100  002400  0060  F053  FFDA   	movff	StartSyncStrobes@SLED_B+1,16346
  3101  002406  006F FF78  F01B    	movff	16350,??_StartSyncStrobes+2
  3102  00240C  006F FF74  F01C    	movff	16349,??_StartSyncStrobes+3
  3103  002412  0060  F06F  FFD9   	movff	??_StartSyncStrobes+2,16345
  3104  002418  0060  F073  FFDA   	movff	??_StartSyncStrobes+3,16346
  3105  00241E  501A               	movf	??_StartSyncStrobes+1,w,c
  3106  002420  12DF               	iorwf	16351,f,c
  3107  002422  0012               	return		;funcret
  3108  002424                     __end_of_StartSyncStrobes:
  3109                           	opt stack 0
  3110                           
  3111 ;; *************** function _StartStrobe *****************
  3112 ;; Defined at:
  3113 ;;		line 155 in file "LED_Patterns.c"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;  SLED            2    6[COMRAM] PTR struct StrobeLED
  3116 ;;		 -> main@GenStrobe(13), main@GStrobe(13), main@EFStrobe(13), 
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;		None
  3119 ;; Return value:  Size  Location     Type
  3120 ;;                  1    wreg      void 
  3121 ;; Registers used:
  3122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3128 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3130 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3131 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3132 ;;Total ram usage:       10 bytes
  3133 ;; Hardware stack levels used:    1
  3134 ;; Hardware stack levels required when called:    4
  3135 ;; This function calls:
  3136 ;;		_GetCurrentTime
  3137 ;;		_StopStrobe
  3138 ;; This function is called by:
  3139 ;;		_main
  3140 ;;		_StartSyncStrobes
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           	psect	text9
  3145  00220A                     __ptext9:
  3146                           	opt stack 0
  3147  00220A                     _StartStrobe:
  3148                           	opt stack 25
  3149                           
  3150                           ;LED_Patterns.c: 157: if (SLED->StrobeRUN)
  3151                           
  3152                           ;incstack = 0
  3153  00220A  EE20 F00A          	lfsr	2,10
  3154  00220E  5007               	movf	StartStrobe@SLED,w,c
  3155  002210  26D9               	addwf	16345,f,c
  3156  002212  5008               	movf	StartStrobe@SLED+1,w,c
  3157  002214  22DA               	addwfc	16346,f,c
  3158  002216  50DF               	movf	16351,w,c
  3159  002218  B4D8               	btfsc	16344,2,c
  3160  00221A  D008               	goto	l333
  3161                           
  3162                           ;LED_Patterns.c: 158: StopStrobe(SLED);
  3163  00221C  0060  F01C  F001   	movff	StartStrobe@SLED,StopStrobe@SLED
  3164  002222  0060  F020  F002   	movff	StartStrobe@SLED+1,StopStrobe@SLED+1
  3165  002228  ECAA  F013         	call	_StopStrobe	;wreg free
  3166  00222C                     l333:
  3167                           
  3168                           ;LED_Patterns.c: 160: SLED->StrobeCnt = STROBE_ON_TIME_MS + GetCurrentTime();
  3169  00222C  0E19               	movlw	low _STROBE_ON_TIME_MS
  3170  00222E  6EF6               	movwf	16374,c
  3171  002230                     	if	1	;There is more than 1 active tblptr byte
  3172  002230  0E10               	movlw	high _STROBE_ON_TIME_MS
  3173  002232  6EF7               	movwf	16375,c
  3174  002234                     	endif
  3175  002234                     	if	1	;There are 3 active tblptr bytes
  3176  002234  0E00               	movlw	low (_STROBE_ON_TIME_MS shr (0+16))
  3177  002236  6EF8               	movwf	16376,c
  3178  002238                     	endif
  3179  002238  0009               	tblrd		*+
  3180  00223A  006F FFD4  F009    	movff	16373,??_StartStrobe
  3181  002240  0009               	tblrd		*+
  3182  002242  006F FFD4  F00A    	movff	16373,??_StartStrobe+1
  3183  002248  0009               	tblrd		*+
  3184  00224A  006F FFD4  F00B    	movff	16373,??_StartStrobe+2
  3185  002250  0009               	tblrd		*+
  3186  002252  006F FFD4  F00C    	movff	16373,??_StartStrobe+3
  3187  002258  EC90  F014         	call	_GetCurrentTime	;wreg free
  3188  00225C  5009               	movf	??_StartStrobe,w,c
  3189  00225E  2401               	addwf	?_GetCurrentTime,w,c
  3190  002260  6E0D               	movwf	(??_StartStrobe+4)& (0+255),c
  3191  002262  500A               	movf	??_StartStrobe+1,w,c
  3192  002264  2002               	addwfc	?_GetCurrentTime+1,w,c
  3193  002266  6E0E               	movwf	(??_StartStrobe+5)& (0+255),c
  3194  002268  500B               	movf	??_StartStrobe+2,w,c
  3195  00226A  2003               	addwfc	?_GetCurrentTime+2,w,c
  3196  00226C  6E0F               	movwf	(??_StartStrobe+6)& (0+255),c
  3197  00226E  500C               	movf	??_StartStrobe+3,w,c
  3198  002270  2004               	addwfc	?_GetCurrentTime+3,w,c
  3199  002272  6E10               	movwf	(??_StartStrobe+7)& (0+255),c
  3200  002274  EE20 F006          	lfsr	2,6
  3201  002278  5007               	movf	StartStrobe@SLED,w,c
  3202  00227A  26D9               	addwf	16345,f,c
  3203  00227C  5008               	movf	StartStrobe@SLED+1,w,c
  3204  00227E  22DA               	addwfc	16346,f,c
  3205  002280  0060  F037  FFDE   	movff	??_StartStrobe+4,16350
  3206  002286  0060  F03B  FFDE   	movff	??_StartStrobe+5,16350
  3207  00228C  0060  F03F  FFDE   	movff	??_StartStrobe+6,16350
  3208  002292  0060  F043  FFDE   	movff	??_StartStrobe+7,16350
  3209                           
  3210                           ;LED_Patterns.c: 161: SLED->StrobeRUN = 1;
  3211  002298  EE20 F00A          	lfsr	2,10
  3212  00229C  5007               	movf	StartStrobe@SLED,w,c
  3213  00229E  26D9               	addwf	16345,f,c
  3214  0022A0  5008               	movf	StartStrobe@SLED+1,w,c
  3215  0022A2  22DA               	addwfc	16346,f,c
  3216  0022A4  0E01               	movlw	1
  3217  0022A6  6EDF               	movwf	16351,c
  3218                           
  3219                           ;LED_Patterns.c: 162: SLED->A_B = 1;
  3220  0022A8  EE20 F00C          	lfsr	2,12
  3221  0022AC  5007               	movf	StartStrobe@SLED,w,c
  3222  0022AE  26D9               	addwf	16345,f,c
  3223  0022B0  5008               	movf	StartStrobe@SLED+1,w,c
  3224  0022B2  22DA               	addwfc	16346,f,c
  3225  0022B4  0E01               	movlw	1
  3226  0022B6  6EDF               	movwf	16351,c
  3227                           
  3228                           ;LED_Patterns.c: 163: SLED->PulseCnt = 0;
  3229  0022B8  EE20 F00B          	lfsr	2,11
  3230  0022BC  5007               	movf	StartStrobe@SLED,w,c
  3231  0022BE  26D9               	addwf	16345,f,c
  3232  0022C0  5008               	movf	StartStrobe@SLED+1,w,c
  3233  0022C2  22DA               	addwfc	16346,f,c
  3234  0022C4  0E00               	movlw	0
  3235  0022C6  6EDF               	movwf	16351,c
  3236                           
  3237                           ;LED_Patterns.c: 164: *SLED->OutPort &= (unsigned char)~(1 << SLED->pin);
  3238  0022C8  EE20 F004          	lfsr	2,4
  3239  0022CC  5007               	movf	StartStrobe@SLED,w,c
  3240  0022CE  26D9               	addwf	16345,f,c
  3241  0022D0  5008               	movf	StartStrobe@SLED+1,w,c
  3242  0022D2  22DA               	addwfc	16346,f,c
  3243  0022D4  50DF               	movf	16351,w,c
  3244  0022D6  6E09               	movwf	??_StartStrobe& (0+255),c
  3245  0022D8  0E01               	movlw	1
  3246  0022DA  6E0A               	movwf	(??_StartStrobe+1)& (0+255),c
  3247  0022DC  2A09               	incf	??_StartStrobe,f,c
  3248  0022DE  D002               	goto	u1084
  3249  0022E0                     u1085:
  3250  0022E0  90D8               	bcf	16344,0,c
  3251  0022E2  360A               	rlcf	??_StartStrobe+1,f,c
  3252  0022E4                     u1084:
  3253  0022E4  2E09               	decfsz	??_StartStrobe,f,c
  3254  0022E6  D7FC               	goto	u1085
  3255  0022E8  500A               	movf	??_StartStrobe+1,w,c
  3256  0022EA  0AFF               	xorlw	255
  3257  0022EC  6E0B               	movwf	(??_StartStrobe+2)& (0+255),c
  3258  0022EE  0060  F01F  FFD9   	movff	StartStrobe@SLED,16345
  3259  0022F4  0060  F023  FFDA   	movff	StartStrobe@SLED+1,16346
  3260  0022FA  006F FF78  F00C    	movff	16350,??_StartStrobe+3
  3261  002300  006F FF74  F00D    	movff	16349,??_StartStrobe+4
  3262  002306  0060  F033  FFD9   	movff	??_StartStrobe+3,16345
  3263  00230C  0060  F037  FFDA   	movff	??_StartStrobe+4,16346
  3264  002312  500B               	movf	??_StartStrobe+2,w,c
  3265  002314  16DF               	andwf	16351,f,c
  3266  002316  0012               	return		;funcret
  3267  002318                     __end_of_StartStrobe:
  3268                           	opt stack 0
  3269                           
  3270 ;; *************** function _StopStrobe *****************
  3271 ;; Defined at:
  3272 ;;		line 193 in file "LED_Patterns.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;  SLED            2    0[COMRAM] PTR struct StrobeLED
  3275 ;;		 -> main@GenStrobe(13), main@ACStrobe(13), main@GStrobe(13), main@EFStrobe(13), 
  3276 ;; Auto vars:     Size  Location     Type
  3277 ;;		None
  3278 ;; Return value:  Size  Location     Type
  3279 ;;                  1    wreg      void 
  3280 ;; Registers used:
  3281 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3282 ;; Tracked objects:
  3283 ;;		On entry : 0/0
  3284 ;;		On exit  : 0/0
  3285 ;;		Unchanged: 0/0
  3286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3287 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3289 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3290 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3291 ;;Total ram usage:        6 bytes
  3292 ;; Hardware stack levels used:    1
  3293 ;; Hardware stack levels required when called:    3
  3294 ;; This function calls:
  3295 ;;		Nothing
  3296 ;; This function is called by:
  3297 ;;		_main
  3298 ;;		_StartStrobe
  3299 ;;		_StartSyncStrobes
  3300 ;;		_StopSyncStrobes
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           	psect	text10
  3305  002754                     __ptext10:
  3306                           	opt stack 0
  3307  002754                     _StopStrobe:
  3308                           	opt stack 26
  3309                           
  3310                           ;LED_Patterns.c: 195: if (SLED->StrobeRUN)
  3311                           
  3312                           ;incstack = 0
  3313  002754  EE20 F00A          	lfsr	2,10
  3314  002758  5001               	movf	StopStrobe@SLED,w,c
  3315  00275A  26D9               	addwf	16345,f,c
  3316  00275C  5002               	movf	StopStrobe@SLED+1,w,c
  3317  00275E  22DA               	addwfc	16346,f,c
  3318  002760  50DF               	movf	16351,w,c
  3319  002762  B4D8               	btfsc	16344,2,c
  3320  002764  0012               	return	
  3321                           
  3322                           ;LED_Patterns.c: 196: {
  3323                           ;LED_Patterns.c: 197: SLED->StrobeRUN = 0;
  3324  002766  EE20 F00A          	lfsr	2,10
  3325  00276A  5001               	movf	StopStrobe@SLED,w,c
  3326  00276C  26D9               	addwf	16345,f,c
  3327  00276E  5002               	movf	StopStrobe@SLED+1,w,c
  3328  002770  22DA               	addwfc	16346,f,c
  3329  002772  0E00               	movlw	0
  3330  002774  6EDF               	movwf	16351,c
  3331                           
  3332                           ;LED_Patterns.c: 198: *SLED->OutPort |= (unsigned char)(1 << SLED->pin);
  3333  002776  EE20 F004          	lfsr	2,4
  3334  00277A  5001               	movf	StopStrobe@SLED,w,c
  3335  00277C  26D9               	addwf	16345,f,c
  3336  00277E  5002               	movf	StopStrobe@SLED+1,w,c
  3337  002780  22DA               	addwfc	16346,f,c
  3338  002782  50DF               	movf	16351,w,c
  3339  002784  6E03               	movwf	??_StopStrobe& (0+255),c
  3340  002786  0E01               	movlw	1
  3341  002788  6E04               	movwf	(??_StopStrobe+1)& (0+255),c
  3342  00278A  2A03               	incf	??_StopStrobe,f,c
  3343  00278C  D002               	goto	u1034
  3344  00278E                     u1035:
  3345  00278E  90D8               	bcf	16344,0,c
  3346  002790  3604               	rlcf	??_StopStrobe+1,f,c
  3347  002792                     u1034:
  3348  002792  2E03               	decfsz	??_StopStrobe,f,c
  3349  002794  D7FC               	goto	u1035
  3350  002796  0060  F007  FFD9   	movff	StopStrobe@SLED,16345
  3351  00279C  0060  F00B  FFDA   	movff	StopStrobe@SLED+1,16346
  3352  0027A2  006F FF78  F005    	movff	16350,??_StopStrobe+2
  3353  0027A8  006F FF74  F006    	movff	16349,??_StopStrobe+3
  3354  0027AE  0060  F017  FFD9   	movff	??_StopStrobe+2,16345
  3355  0027B4  0060  F01B  FFDA   	movff	??_StopStrobe+3,16346
  3356  0027BA  5004               	movf	??_StopStrobe+1,w,c
  3357  0027BC  12DF               	iorwf	16351,f,c
  3358  0027BE  0012               	return	
  3359  0027C0                     __end_of_StopStrobe:
  3360                           	opt stack 0
  3361                           
  3362 ;; *************** function _StartStopWatch *****************
  3363 ;; Defined at:
  3364 ;;		line 26 in file "stop_watch.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;		None
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;		None
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  1    wreg      void 
  3371 ;; Registers used:
  3372 ;;		cstack
  3373 ;; Tracked objects:
  3374 ;;		On entry : 0/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3382 ;;Total ram usage:        0 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:    4
  3385 ;; This function calls:
  3386 ;;		_TMR0_StartTimer
  3387 ;; This function is called by:
  3388 ;;		_main
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           	psect	text11
  3393  002996                     __ptext11:
  3394                           	opt stack 0
  3395  002996                     _StartStopWatch:
  3396                           	opt stack 26
  3397                           
  3398                           ;stop_watch.c: 28: TMR0_StartTimer();
  3399                           
  3400                           ;incstack = 0
  3401  002996  ECCE  F014         	call	_TMR0_StartTimer	;wreg free
  3402  00299A  0012               	return		;funcret
  3403  00299C                     __end_of_StartStopWatch:
  3404                           	opt stack 0
  3405                           
  3406 ;; *************** function _TMR0_StartTimer *****************
  3407 ;; Defined at:
  3408 ;;		line 86 in file "mcc_generated_files/tmr0.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;		None
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;		None
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  1    wreg      void 
  3415 ;; Registers used:
  3416 ;;		None
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3426 ;;Total ram usage:        0 bytes
  3427 ;; Hardware stack levels used:    1
  3428 ;; Hardware stack levels required when called:    3
  3429 ;; This function calls:
  3430 ;;		Nothing
  3431 ;; This function is called by:
  3432 ;;		_StartStopWatch
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           
  3436                           	psect	text12
  3437  00299C                     __ptext12:
  3438                           	opt stack 0
  3439  00299C                     _TMR0_StartTimer:
  3440                           	opt stack 26
  3441                           
  3442                           ;tmr0.c: 89: T0CON0bits.T0EN = 1;
  3443                           
  3444                           ;incstack = 0
  3445  00299C  013F               	movlb	63	; () banked
  3446  00299E  8FB8               	bsf	184,7,b	;volatile
  3447                           
  3448                           ; BSR set to: 63
  3449  0029A0  0012               	return		;funcret
  3450  0029A2                     __end_of_TMR0_StartTimer:
  3451                           	opt stack 0
  3452                           
  3453 ;; *************** function _StartRabbitLights *****************
  3454 ;; Defined at:
  3455 ;;		line 374 in file "LED_Patterns.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;  rp              2    6[COMRAM] PTR struct RabbitPort
  3458 ;;		 -> main@Rabbit(13), 
  3459 ;; Auto vars:     Size  Location     Type
  3460 ;;  i               1   16[COMRAM] unsigned char 
  3461 ;;  Mask            1   17[COMRAM] unsigned char 
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  1    wreg      void 
  3464 ;; Registers used:
  3465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3471 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3472 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3473 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3474 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3475 ;;Total ram usage:       12 bytes
  3476 ;; Hardware stack levels used:    1
  3477 ;; Hardware stack levels required when called:    4
  3478 ;; This function calls:
  3479 ;;		_GetCurrentTime
  3480 ;;		_StopRabbitLights
  3481 ;; This function is called by:
  3482 ;;		_main
  3483 ;; This function uses a non-reentrant model
  3484 ;;
  3485                           
  3486                           	psect	text13
  3487  001F44                     __ptext13:
  3488                           	opt stack 0
  3489  001F44                     _StartRabbitLights:
  3490                           	opt stack 26
  3491                           
  3492                           ;LED_Patterns.c: 376: if (rp->RabbitRUN)
  3493                           
  3494                           ; BSR set to: 63
  3495                           ;incstack = 0
  3496  001F44  EE20 F00B          	lfsr	2,11
  3497  001F48  5007               	movf	StartRabbitLights@rp,w,c
  3498  001F4A  26D9               	addwf	16345,f,c
  3499  001F4C  5008               	movf	StartRabbitLights@rp+1,w,c
  3500  001F4E  22DA               	addwfc	16346,f,c
  3501  001F50  50DF               	movf	16351,w,c
  3502  001F52  B4D8               	btfsc	16344,2,c
  3503  001F54  D008               	goto	l381
  3504                           
  3505                           ;LED_Patterns.c: 377: StopRabbitLights(rp);
  3506  001F56  0060  F01C  F001   	movff	StartRabbitLights@rp,StopRabbitLights@rp
  3507  001F5C  0060  F020  F002   	movff	StartRabbitLights@rp+1,StopRabbitLights@rp+1
  3508  001F62  EC21  F013         	call	_StopRabbitLights	;wreg free
  3509  001F66                     l381:
  3510                           
  3511                           ;LED_Patterns.c: 379: rp->msCnt = RABBIT_ON_TIME_MS + GetCurrentTime();
  3512  001F66  0E05               	movlw	low _RABBIT_ON_TIME_MS
  3513  001F68  6EF6               	movwf	16374,c
  3514  001F6A                     	if	1	;There is more than 1 active tblptr byte
  3515  001F6A  0E10               	movlw	high _RABBIT_ON_TIME_MS
  3516  001F6C  6EF7               	movwf	16375,c
  3517  001F6E                     	endif
  3518  001F6E                     	if	1	;There are 3 active tblptr bytes
  3519  001F6E  0E00               	movlw	low (_RABBIT_ON_TIME_MS shr (0+16))
  3520  001F70  6EF8               	movwf	16376,c
  3521  001F72                     	endif
  3522  001F72  0009               	tblrd		*+
  3523  001F74  006F FFD4  F009    	movff	16373,??_StartRabbitLights
  3524  001F7A  0009               	tblrd		*+
  3525  001F7C  006F FFD4  F00A    	movff	16373,??_StartRabbitLights+1
  3526  001F82  0009               	tblrd		*+
  3527  001F84  006F FFD4  F00B    	movff	16373,??_StartRabbitLights+2
  3528  001F8A  0009               	tblrd		*+
  3529  001F8C  006F FFD4  F00C    	movff	16373,??_StartRabbitLights+3
  3530  001F92  EC90  F014         	call	_GetCurrentTime	;wreg free
  3531  001F96  5009               	movf	??_StartRabbitLights,w,c
  3532  001F98  2401               	addwf	?_GetCurrentTime,w,c
  3533  001F9A  6E0D               	movwf	(??_StartRabbitLights+4)& (0+255),c
  3534  001F9C  500A               	movf	??_StartRabbitLights+1,w,c
  3535  001F9E  2002               	addwfc	?_GetCurrentTime+1,w,c
  3536  001FA0  6E0E               	movwf	(??_StartRabbitLights+5)& (0+255),c
  3537  001FA2  500B               	movf	??_StartRabbitLights+2,w,c
  3538  001FA4  2003               	addwfc	?_GetCurrentTime+2,w,c
  3539  001FA6  6E0F               	movwf	(??_StartRabbitLights+6)& (0+255),c
  3540  001FA8  500C               	movf	??_StartRabbitLights+3,w,c
  3541  001FAA  2004               	addwfc	?_GetCurrentTime+3,w,c
  3542  001FAC  6E10               	movwf	(??_StartRabbitLights+7)& (0+255),c
  3543  001FAE  EE20 F006          	lfsr	2,6
  3544  001FB2  5007               	movf	StartRabbitLights@rp,w,c
  3545  001FB4  26D9               	addwf	16345,f,c
  3546  001FB6  5008               	movf	StartRabbitLights@rp+1,w,c
  3547  001FB8  22DA               	addwfc	16346,f,c
  3548  001FBA  0060  F037  FFDE   	movff	??_StartRabbitLights+4,16350
  3549  001FC0  0060  F03B  FFDE   	movff	??_StartRabbitLights+5,16350
  3550  001FC6  0060  F03F  FFDE   	movff	??_StartRabbitLights+6,16350
  3551  001FCC  0060  F043  FFDE   	movff	??_StartRabbitLights+7,16350
  3552                           
  3553                           ;LED_Patterns.c: 380: rp->RabbitRUN = 1;
  3554  001FD2  EE20 F00B          	lfsr	2,11
  3555  001FD6  5007               	movf	StartRabbitLights@rp,w,c
  3556  001FD8  26D9               	addwf	16345,f,c
  3557  001FDA  5008               	movf	StartRabbitLights@rp+1,w,c
  3558  001FDC  22DA               	addwfc	16346,f,c
  3559  001FDE  0E01               	movlw	1
  3560  001FE0  6EDF               	movwf	16351,c
  3561                           
  3562                           ;LED_Patterns.c: 381: rp->A_B = 1;
  3563  001FE2  EE20 F00C          	lfsr	2,12
  3564  001FE6  5007               	movf	StartRabbitLights@rp,w,c
  3565  001FE8  26D9               	addwf	16345,f,c
  3566  001FEA  5008               	movf	StartRabbitLights@rp+1,w,c
  3567  001FEC  22DA               	addwfc	16346,f,c
  3568  001FEE  0E01               	movlw	1
  3569  001FF0  6EDF               	movwf	16351,c
  3570                           
  3571                           ;LED_Patterns.c: 383: unsigned char Mask = 0;
  3572  001FF2  0E00               	movlw	0
  3573  001FF4  6E12               	movwf	StartRabbitLights@Mask,c
  3574                           
  3575                           ;LED_Patterns.c: 385: for (uint8_t i = 0; i < rp->NumLights; i++)
  3576  001FF6  0E00               	movlw	0
  3577  001FF8  6E11               	movwf	StartRabbitLights@i,c
  3578  001FFA  D003               	goto	l382
  3579  001FFC                     
  3580                           ;LED_Patterns.c: 386: {
  3581                           ;LED_Patterns.c: 390: Mask = (unsigned char)((Mask << 1) | 1);
  3582  001FFC  80D8               	bsf	16344,0,c
  3583  001FFE  3612               	rlcf	StartRabbitLights@Mask,f,c
  3584  002000  2A11               	incf	StartRabbitLights@i,f,c
  3585  002002                     l382:
  3586  002002  EE20 F005          	lfsr	2,5
  3587  002006  5007               	movf	StartRabbitLights@rp,w,c
  3588  002008  26D9               	addwf	16345,f,c
  3589  00200A  5008               	movf	StartRabbitLights@rp+1,w,c
  3590  00200C  22DA               	addwfc	16346,f,c
  3591  00200E  50DE               	movf	16350,w,c
  3592  002010  5C11               	subwf	StartRabbitLights@i,w,c
  3593  002012  A0D8               	btfss	16344,0,c
  3594  002014  D7F3               	goto	l383
  3595                           
  3596                           ;LED_Patterns.c: 391: }
  3597                           ;LED_Patterns.c: 393: Mask = (unsigned char)(Mask << rp->StartingLED);
  3598  002016  EE20 F004          	lfsr	2,4
  3599  00201A  5007               	movf	StartRabbitLights@rp,w,c
  3600  00201C  26D9               	addwf	16345,f,c
  3601  00201E  5008               	movf	StartRabbitLights@rp+1,w,c
  3602  002020  22DA               	addwfc	16346,f,c
  3603  002022  50DF               	movf	16351,w,c
  3604  002024  6E09               	movwf	??_StartRabbitLights& (0+255),c
  3605  002026  0060  F048  F00A   	movff	StartRabbitLights@Mask,??_StartRabbitLights+1
  3606  00202C  2A09               	incf	??_StartRabbitLights,f,c
  3607  00202E  D002               	goto	u1284
  3608  002030                     u1285:
  3609  002030  90D8               	bcf	16344,0,c
  3610  002032  360A               	rlcf	??_StartRabbitLights+1,f,c
  3611  002034                     u1284:
  3612  002034  2E09               	decfsz	??_StartRabbitLights,f,c
  3613  002036  D7FC               	goto	u1285
  3614  002038  500A               	movf	??_StartRabbitLights+1,w,c
  3615  00203A  6E12               	movwf	StartRabbitLights@Mask,c
  3616                           
  3617                           ;LED_Patterns.c: 395: *rp->OutputPort |= Mask;
  3618  00203C  0060  F01F  FFD9   	movff	StartRabbitLights@rp,16345
  3619  002042  0060  F023  FFDA   	movff	StartRabbitLights@rp+1,16346
  3620  002048  006F FF78  F009    	movff	16350,??_StartRabbitLights
  3621  00204E  006F FF74  F00A    	movff	16349,??_StartRabbitLights+1
  3622  002054  0060  F027  FFD9   	movff	??_StartRabbitLights,16345
  3623  00205A  0060  F02B  FFDA   	movff	??_StartRabbitLights+1,16346
  3624  002060  5012               	movf	StartRabbitLights@Mask,w,c
  3625  002062  12DF               	iorwf	16351,f,c
  3626                           
  3627                           ;LED_Patterns.c: 396: *rp->OutputPort &= (unsigned char)~(1 << rp->StartingLED);
  3628  002064  EE20 F004          	lfsr	2,4
  3629  002068  5007               	movf	StartRabbitLights@rp,w,c
  3630  00206A  26D9               	addwf	16345,f,c
  3631  00206C  5008               	movf	StartRabbitLights@rp+1,w,c
  3632  00206E  22DA               	addwfc	16346,f,c
  3633  002070  50DF               	movf	16351,w,c
  3634  002072  6E09               	movwf	??_StartRabbitLights& (0+255),c
  3635  002074  0E01               	movlw	1
  3636  002076  6E0A               	movwf	(??_StartRabbitLights+1)& (0+255),c
  3637  002078  2A09               	incf	??_StartRabbitLights,f,c
  3638  00207A  D002               	goto	u1294
  3639  00207C                     u1295:
  3640  00207C  90D8               	bcf	16344,0,c
  3641  00207E  360A               	rlcf	??_StartRabbitLights+1,f,c
  3642  002080                     u1294:
  3643  002080  2E09               	decfsz	??_StartRabbitLights,f,c
  3644  002082  D7FC               	goto	u1295
  3645  002084  500A               	movf	??_StartRabbitLights+1,w,c
  3646  002086  0AFF               	xorlw	255
  3647  002088  6E0B               	movwf	(??_StartRabbitLights+2)& (0+255),c
  3648  00208A  0060  F01F  FFD9   	movff	StartRabbitLights@rp,16345
  3649  002090  0060  F023  FFDA   	movff	StartRabbitLights@rp+1,16346
  3650  002096  006F FF78  F00C    	movff	16350,??_StartRabbitLights+3
  3651  00209C  006F FF74  F00D    	movff	16349,??_StartRabbitLights+4
  3652  0020A2  0060  F033  FFD9   	movff	??_StartRabbitLights+3,16345
  3653  0020A8  0060  F037  FFDA   	movff	??_StartRabbitLights+4,16346
  3654  0020AE  500B               	movf	??_StartRabbitLights+2,w,c
  3655  0020B0  16DF               	andwf	16351,f,c
  3656  0020B2  0012               	return		;funcret
  3657  0020B4                     __end_of_StartRabbitLights:
  3658                           	opt stack 0
  3659                           
  3660 ;; *************** function _StopRabbitLights *****************
  3661 ;; Defined at:
  3662 ;;		line 456 in file "LED_Patterns.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;  rp              2    0[COMRAM] PTR struct RabbitPort
  3665 ;;		 -> main@Rabbit(13), 
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;  i               1    4[COMRAM] unsigned char 
  3668 ;;  Mask            1    5[COMRAM] unsigned char 
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  1    wreg      void 
  3671 ;; Registers used:
  3672 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3678 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3679 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3680 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3681 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3682 ;;Total ram usage:        6 bytes
  3683 ;; Hardware stack levels used:    1
  3684 ;; Hardware stack levels required when called:    3
  3685 ;; This function calls:
  3686 ;;		Nothing
  3687 ;; This function is called by:
  3688 ;;		_main
  3689 ;;		_StartRabbitLights
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           	psect	text14
  3694  002642                     __ptext14:
  3695                           	opt stack 0
  3696  002642                     _StopRabbitLights:
  3697                           	opt stack 27
  3698                           
  3699                           ;LED_Patterns.c: 458: if (rp->RabbitRUN)
  3700                           
  3701                           ;incstack = 0
  3702  002642  EE20 F00B          	lfsr	2,11
  3703  002646  5001               	movf	StopRabbitLights@rp,w,c
  3704  002648  26D9               	addwf	16345,f,c
  3705  00264A  5002               	movf	StopRabbitLights@rp+1,w,c
  3706  00264C  22DA               	addwfc	16346,f,c
  3707  00264E  50DF               	movf	16351,w,c
  3708  002650  B4D8               	btfsc	16344,2,c
  3709  002652  0012               	return	
  3710                           
  3711                           ;LED_Patterns.c: 459: {
  3712                           ;LED_Patterns.c: 460: rp->RabbitRUN = 0;
  3713  002654  EE20 F00B          	lfsr	2,11
  3714  002658  5001               	movf	StopRabbitLights@rp,w,c
  3715  00265A  26D9               	addwf	16345,f,c
  3716  00265C  5002               	movf	StopRabbitLights@rp+1,w,c
  3717  00265E  22DA               	addwfc	16346,f,c
  3718  002660  0E00               	movlw	0
  3719  002662  6EDF               	movwf	16351,c
  3720                           
  3721                           ;LED_Patterns.c: 461: unsigned char Mask = 0;
  3722  002664  0E00               	movlw	0
  3723  002666  6E06               	movwf	StopRabbitLights@Mask,c
  3724                           
  3725                           ;LED_Patterns.c: 462: for (uint8_t i = 0; i < rp->NumLights; i++)
  3726  002668  0E00               	movlw	0
  3727  00266A  6E05               	movwf	StopRabbitLights@i,c
  3728  00266C  D003               	goto	l400
  3729  00266E                     
  3730                           ;LED_Patterns.c: 463: {
  3731                           ;LED_Patterns.c: 464: Mask = (unsigned char)((Mask << 1) | 1);
  3732  00266E  80D8               	bsf	16344,0,c
  3733  002670  3606               	rlcf	StopRabbitLights@Mask,f,c
  3734  002672  2A05               	incf	StopRabbitLights@i,f,c
  3735  002674                     l400:
  3736  002674  EE20 F005          	lfsr	2,5
  3737  002678  5001               	movf	StopRabbitLights@rp,w,c
  3738  00267A  26D9               	addwf	16345,f,c
  3739  00267C  5002               	movf	StopRabbitLights@rp+1,w,c
  3740  00267E  22DA               	addwfc	16346,f,c
  3741  002680  50DE               	movf	16350,w,c
  3742  002682  5C05               	subwf	StopRabbitLights@i,w,c
  3743  002684  A0D8               	btfss	16344,0,c
  3744  002686  D7F3               	goto	l401
  3745                           
  3746                           ;LED_Patterns.c: 465: }
  3747                           ;LED_Patterns.c: 467: Mask = (unsigned char)(Mask << rp->StartingLED);
  3748  002688  EE20 F004          	lfsr	2,4
  3749  00268C  5001               	movf	StopRabbitLights@rp,w,c
  3750  00268E  26D9               	addwf	16345,f,c
  3751  002690  5002               	movf	StopRabbitLights@rp+1,w,c
  3752  002692  22DA               	addwfc	16346,f,c
  3753  002694  50DF               	movf	16351,w,c
  3754  002696  6E03               	movwf	??_StopRabbitLights& (0+255),c
  3755  002698  0060  F018  F004   	movff	StopRabbitLights@Mask,??_StopRabbitLights+1
  3756  00269E  2A03               	incf	??_StopRabbitLights,f,c
  3757  0026A0  D002               	goto	u1114
  3758  0026A2                     u1115:
  3759  0026A2  90D8               	bcf	16344,0,c
  3760  0026A4  3604               	rlcf	??_StopRabbitLights+1,f,c
  3761  0026A6                     u1114:
  3762  0026A6  2E03               	decfsz	??_StopRabbitLights,f,c
  3763  0026A8  D7FC               	goto	u1115
  3764  0026AA  5004               	movf	??_StopRabbitLights+1,w,c
  3765  0026AC  6E06               	movwf	StopRabbitLights@Mask,c
  3766                           
  3767                           ;LED_Patterns.c: 469: *rp->OutputPort |= Mask;
  3768  0026AE  0060  F007  FFD9   	movff	StopRabbitLights@rp,16345
  3769  0026B4  0060  F00B  FFDA   	movff	StopRabbitLights@rp+1,16346
  3770  0026BA  006F FF78  F003    	movff	16350,??_StopRabbitLights
  3771  0026C0  006F FF74  F004    	movff	16349,??_StopRabbitLights+1
  3772  0026C6  0060  F00F  FFD9   	movff	??_StopRabbitLights,16345
  3773  0026CC  0060  F013  FFDA   	movff	??_StopRabbitLights+1,16346
  3774  0026D2  5006               	movf	StopRabbitLights@Mask,w,c
  3775  0026D4  12DF               	iorwf	16351,f,c
  3776  0026D6  0012               	return	
  3777  0026D8                     __end_of_StopRabbitLights:
  3778                           	opt stack 0
  3779                           
  3780 ;; *************** function _StartGunFirePattern *****************
  3781 ;; Defined at:
  3782 ;;		line 71 in file "LED_Patterns.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;  gp              2    6[COMRAM] PTR struct GunPort
  3785 ;;		 -> main@Gun3(17), main@Gun2(17), main@Gun1(17), 
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;		None
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  1    wreg      void 
  3790 ;; Registers used:
  3791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3797 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3799 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3800 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3801 ;;Total ram usage:       10 bytes
  3802 ;; Hardware stack levels used:    1
  3803 ;; Hardware stack levels required when called:    4
  3804 ;; This function calls:
  3805 ;;		_GetCurrentTime
  3806 ;;		_StopGunFirePattern
  3807 ;; This function is called by:
  3808 ;;		_main
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811                           
  3812                           	psect	text15
  3813  0020B4                     __ptext15:
  3814                           	opt stack 0
  3815  0020B4                     _StartGunFirePattern:
  3816                           	opt stack 26
  3817                           
  3818                           ;LED_Patterns.c: 73: if (gp->GunRUN)
  3819                           
  3820                           ;incstack = 0
  3821  0020B4  EE20 F00F          	lfsr	2,15
  3822  0020B8  5007               	movf	StartGunFirePattern@gp,w,c
  3823  0020BA  26D9               	addwf	16345,f,c
  3824  0020BC  5008               	movf	StartGunFirePattern@gp+1,w,c
  3825  0020BE  22DA               	addwfc	16346,f,c
  3826  0020C0  50DF               	movf	16351,w,c
  3827  0020C2  B4D8               	btfsc	16344,2,c
  3828  0020C4  D008               	goto	l312
  3829                           
  3830                           ;LED_Patterns.c: 74: StopGunFirePattern(gp);
  3831  0020C6  0060  F01C  F001   	movff	StartGunFirePattern@gp,StopGunFirePattern@gp
  3832  0020CC  0060  F020  F002   	movff	StartGunFirePattern@gp+1,StopGunFirePattern@gp+1
  3833  0020D2  EC6F  F012         	call	_StopGunFirePattern	;wreg free
  3834  0020D6                     l312:
  3835                           
  3836                           ;LED_Patterns.c: 76: gp->GunCnt = GUN_ON_TIME_MS + GetCurrentTime();
  3837  0020D6  0E25               	movlw	low _GUN_ON_TIME_MS
  3838  0020D8  6EF6               	movwf	16374,c
  3839  0020DA                     	if	1	;There is more than 1 active tblptr byte
  3840  0020DA  0E10               	movlw	high _GUN_ON_TIME_MS
  3841  0020DC  6EF7               	movwf	16375,c
  3842  0020DE                     	endif
  3843  0020DE                     	if	1	;There are 3 active tblptr bytes
  3844  0020DE  0E00               	movlw	low (_GUN_ON_TIME_MS shr (0+16))
  3845  0020E0  6EF8               	movwf	16376,c
  3846  0020E2                     	endif
  3847  0020E2  0009               	tblrd		*+
  3848  0020E4  006F FFD4  F009    	movff	16373,??_StartGunFirePattern
  3849  0020EA  0009               	tblrd		*+
  3850  0020EC  006F FFD4  F00A    	movff	16373,??_StartGunFirePattern+1
  3851  0020F2  0009               	tblrd		*+
  3852  0020F4  006F FFD4  F00B    	movff	16373,??_StartGunFirePattern+2
  3853  0020FA  0009               	tblrd		*+
  3854  0020FC  006F FFD4  F00C    	movff	16373,??_StartGunFirePattern+3
  3855  002102  EC90  F014         	call	_GetCurrentTime	;wreg free
  3856  002106  5009               	movf	??_StartGunFirePattern,w,c
  3857  002108  2401               	addwf	?_GetCurrentTime,w,c
  3858  00210A  6E0D               	movwf	(??_StartGunFirePattern+4)& (0+255),c
  3859  00210C  500A               	movf	??_StartGunFirePattern+1,w,c
  3860  00210E  2002               	addwfc	?_GetCurrentTime+1,w,c
  3861  002110  6E0E               	movwf	(??_StartGunFirePattern+5)& (0+255),c
  3862  002112  500B               	movf	??_StartGunFirePattern+2,w,c
  3863  002114  2003               	addwfc	?_GetCurrentTime+2,w,c
  3864  002116  6E0F               	movwf	(??_StartGunFirePattern+6)& (0+255),c
  3865  002118  500C               	movf	??_StartGunFirePattern+3,w,c
  3866  00211A  2004               	addwfc	?_GetCurrentTime+3,w,c
  3867  00211C  6E10               	movwf	(??_StartGunFirePattern+7)& (0+255),c
  3868  00211E  EE20 F00A          	lfsr	2,10
  3869  002122  5007               	movf	StartGunFirePattern@gp,w,c
  3870  002124  26D9               	addwf	16345,f,c
  3871  002126  5008               	movf	StartGunFirePattern@gp+1,w,c
  3872  002128  22DA               	addwfc	16346,f,c
  3873  00212A  0060  F037  FFDE   	movff	??_StartGunFirePattern+4,16350
  3874  002130  0060  F03B  FFDE   	movff	??_StartGunFirePattern+5,16350
  3875  002136  0060  F03F  FFDE   	movff	??_StartGunFirePattern+6,16350
  3876  00213C  0060  F043  FFDE   	movff	??_StartGunFirePattern+7,16350
  3877                           
  3878                           ;LED_Patterns.c: 77: gp->GunRUN = 1;
  3879  002142  EE20 F00F          	lfsr	2,15
  3880  002146  5007               	movf	StartGunFirePattern@gp,w,c
  3881  002148  26D9               	addwf	16345,f,c
  3882  00214A  5008               	movf	StartGunFirePattern@gp+1,w,c
  3883  00214C  22DA               	addwfc	16346,f,c
  3884  00214E  0E01               	movlw	1
  3885  002150  6EDF               	movwf	16351,c
  3886                           
  3887                           ;LED_Patterns.c: 78: gp->ShotsCnt = 0;
  3888  002152  EE20 F00E          	lfsr	2,14
  3889  002156  5007               	movf	StartGunFirePattern@gp,w,c
  3890  002158  26D9               	addwf	16345,f,c
  3891  00215A  5008               	movf	StartGunFirePattern@gp+1,w,c
  3892  00215C  22DA               	addwfc	16346,f,c
  3893  00215E  0E00               	movlw	0
  3894  002160  6EDF               	movwf	16351,c
  3895                           
  3896                           ;LED_Patterns.c: 79: gp->A_B = 1;
  3897  002162  EE20 F010          	lfsr	2,16
  3898  002166  5007               	movf	StartGunFirePattern@gp,w,c
  3899  002168  26D9               	addwf	16345,f,c
  3900  00216A  5008               	movf	StartGunFirePattern@gp+1,w,c
  3901  00216C  22DA               	addwfc	16346,f,c
  3902  00216E  0E01               	movlw	1
  3903  002170  6EDF               	movwf	16351,c
  3904                           
  3905                           ;LED_Patterns.c: 81: *gp->OutputPort &= (unsigned char)~(1 << gp->GunLED);
  3906  002172  EE20 F008          	lfsr	2,8
  3907  002176  5007               	movf	StartGunFirePattern@gp,w,c
  3908  002178  26D9               	addwf	16345,f,c
  3909  00217A  5008               	movf	StartGunFirePattern@gp+1,w,c
  3910  00217C  22DA               	addwfc	16346,f,c
  3911  00217E  50DF               	movf	16351,w,c
  3912  002180  6E09               	movwf	??_StartGunFirePattern& (0+255),c
  3913  002182  0E01               	movlw	1
  3914  002184  6E0A               	movwf	(??_StartGunFirePattern+1)& (0+255),c
  3915  002186  2A09               	incf	??_StartGunFirePattern,f,c
  3916  002188  D002               	goto	u1224
  3917  00218A                     u1225:
  3918  00218A  90D8               	bcf	16344,0,c
  3919  00218C  360A               	rlcf	??_StartGunFirePattern+1,f,c
  3920  00218E                     u1224:
  3921  00218E  2E09               	decfsz	??_StartGunFirePattern,f,c
  3922  002190  D7FC               	goto	u1225
  3923  002192  500A               	movf	??_StartGunFirePattern+1,w,c
  3924  002194  0AFF               	xorlw	255
  3925  002196  6E0B               	movwf	(??_StartGunFirePattern+2)& (0+255),c
  3926  002198  0060  F01F  FFD9   	movff	StartGunFirePattern@gp,16345
  3927  00219E  0060  F023  FFDA   	movff	StartGunFirePattern@gp+1,16346
  3928  0021A4  006F FF78  F00C    	movff	16350,??_StartGunFirePattern+3
  3929  0021AA  006F FF74  F00D    	movff	16349,??_StartGunFirePattern+4
  3930  0021B0  0060  F033  FFD9   	movff	??_StartGunFirePattern+3,16345
  3931  0021B6  0060  F037  FFDA   	movff	??_StartGunFirePattern+4,16346
  3932  0021BC  500B               	movf	??_StartGunFirePattern+2,w,c
  3933  0021BE  16DF               	andwf	16351,f,c
  3934                           
  3935                           ;LED_Patterns.c: 82: *gp->TracerPort |= (unsigned char)(1 << gp->TracerLED);
  3936  0021C0  EE20 F009          	lfsr	2,9
  3937  0021C4  5007               	movf	StartGunFirePattern@gp,w,c
  3938  0021C6  26D9               	addwf	16345,f,c
  3939  0021C8  5008               	movf	StartGunFirePattern@gp+1,w,c
  3940  0021CA  22DA               	addwfc	16346,f,c
  3941  0021CC  50DF               	movf	16351,w,c
  3942  0021CE  6E09               	movwf	??_StartGunFirePattern& (0+255),c
  3943  0021D0  0E01               	movlw	1
  3944  0021D2  6E0A               	movwf	(??_StartGunFirePattern+1)& (0+255),c
  3945  0021D4  2A09               	incf	??_StartGunFirePattern,f,c
  3946  0021D6  D002               	goto	u1234
  3947  0021D8                     u1235:
  3948  0021D8  90D8               	bcf	16344,0,c
  3949  0021DA  360A               	rlcf	??_StartGunFirePattern+1,f,c
  3950  0021DC                     u1234:
  3951  0021DC  2E09               	decfsz	??_StartGunFirePattern,f,c
  3952  0021DE  D7FC               	goto	u1235
  3953  0021E0  EE20 F004          	lfsr	2,4
  3954  0021E4  5007               	movf	StartGunFirePattern@gp,w,c
  3955  0021E6  26D9               	addwf	16345,f,c
  3956  0021E8  5008               	movf	StartGunFirePattern@gp+1,w,c
  3957  0021EA  22DA               	addwfc	16346,f,c
  3958  0021EC  006F FF78  F00B    	movff	16350,??_StartGunFirePattern+2
  3959  0021F2  006F FF74  F00C    	movff	16349,??_StartGunFirePattern+3
  3960  0021F8  0060  F02F  FFD9   	movff	??_StartGunFirePattern+2,16345
  3961  0021FE  0060  F033  FFDA   	movff	??_StartGunFirePattern+3,16346
  3962  002204  500A               	movf	??_StartGunFirePattern+1,w,c
  3963  002206  12DF               	iorwf	16351,f,c
  3964  002208  0012               	return		;funcret
  3965  00220A                     __end_of_StartGunFirePattern:
  3966                           	opt stack 0
  3967                           
  3968 ;; *************** function _StopGunFirePattern *****************
  3969 ;; Defined at:
  3970 ;;		line 142 in file "LED_Patterns.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;  gp              2    0[COMRAM] PTR struct GunPort
  3973 ;;		 -> main@Gun3(17), main@Gun2(17), main@Gun1(17), 
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;		None
  3976 ;; Return value:  Size  Location     Type
  3977 ;;                  1    wreg      void 
  3978 ;; Registers used:
  3979 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3985 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3987 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3988 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3989 ;;Total ram usage:        6 bytes
  3990 ;; Hardware stack levels used:    1
  3991 ;; Hardware stack levels required when called:    3
  3992 ;; This function calls:
  3993 ;;		Nothing
  3994 ;; This function is called by:
  3995 ;;		_main
  3996 ;;		_StartGunFirePattern
  3997 ;; This function uses a non-reentrant model
  3998 ;;
  3999                           
  4000                           	psect	text16
  4001  0024DE                     __ptext16:
  4002                           	opt stack 0
  4003  0024DE                     _StopGunFirePattern:
  4004                           	opt stack 27
  4005                           
  4006                           ;LED_Patterns.c: 144: if (gp->GunRUN)
  4007                           
  4008                           ;incstack = 0
  4009  0024DE  EE20 F00F          	lfsr	2,15
  4010  0024E2  5001               	movf	StopGunFirePattern@gp,w,c
  4011  0024E4  26D9               	addwf	16345,f,c
  4012  0024E6  5002               	movf	StopGunFirePattern@gp+1,w,c
  4013  0024E8  22DA               	addwfc	16346,f,c
  4014  0024EA  50DF               	movf	16351,w,c
  4015  0024EC  B4D8               	btfsc	16344,2,c
  4016  0024EE  0012               	return	
  4017                           
  4018                           ;LED_Patterns.c: 145: {
  4019                           ;LED_Patterns.c: 146: gp->GunRUN = 0;
  4020  0024F0  EE20 F00F          	lfsr	2,15
  4021  0024F4  5001               	movf	StopGunFirePattern@gp,w,c
  4022  0024F6  26D9               	addwf	16345,f,c
  4023  0024F8  5002               	movf	StopGunFirePattern@gp+1,w,c
  4024  0024FA  22DA               	addwfc	16346,f,c
  4025  0024FC  0E00               	movlw	0
  4026  0024FE  6EDF               	movwf	16351,c
  4027                           
  4028                           ;LED_Patterns.c: 147: *gp->OutputPort |= (unsigned char)(1 << gp->GunLED);
  4029  002500  EE20 F008          	lfsr	2,8
  4030  002504  5001               	movf	StopGunFirePattern@gp,w,c
  4031  002506  26D9               	addwf	16345,f,c
  4032  002508  5002               	movf	StopGunFirePattern@gp+1,w,c
  4033  00250A  22DA               	addwfc	16346,f,c
  4034  00250C  50DF               	movf	16351,w,c
  4035  00250E  6E03               	movwf	??_StopGunFirePattern& (0+255),c
  4036  002510  0E01               	movlw	1
  4037  002512  6E04               	movwf	(??_StopGunFirePattern+1)& (0+255),c
  4038  002514  2A03               	incf	??_StopGunFirePattern,f,c
  4039  002516  D002               	goto	u1054
  4040  002518                     u1055:
  4041  002518  90D8               	bcf	16344,0,c
  4042  00251A  3604               	rlcf	??_StopGunFirePattern+1,f,c
  4043  00251C                     u1054:
  4044  00251C  2E03               	decfsz	??_StopGunFirePattern,f,c
  4045  00251E  D7FC               	goto	u1055
  4046  002520  0060  F007  FFD9   	movff	StopGunFirePattern@gp,16345
  4047  002526  0060  F00B  FFDA   	movff	StopGunFirePattern@gp+1,16346
  4048  00252C  006F FF78  F005    	movff	16350,??_StopGunFirePattern+2
  4049  002532  006F FF74  F006    	movff	16349,??_StopGunFirePattern+3
  4050  002538  0060  F017  FFD9   	movff	??_StopGunFirePattern+2,16345
  4051  00253E  0060  F01B  FFDA   	movff	??_StopGunFirePattern+3,16346
  4052  002544  5004               	movf	??_StopGunFirePattern+1,w,c
  4053  002546  12DF               	iorwf	16351,f,c
  4054                           
  4055                           ;LED_Patterns.c: 148: *gp->TracerPort |= (unsigned char)(1 << gp->TracerLED);
  4056  002548  EE20 F009          	lfsr	2,9
  4057  00254C  5001               	movf	StopGunFirePattern@gp,w,c
  4058  00254E  26D9               	addwf	16345,f,c
  4059  002550  5002               	movf	StopGunFirePattern@gp+1,w,c
  4060  002552  22DA               	addwfc	16346,f,c
  4061  002554  50DF               	movf	16351,w,c
  4062  002556  6E03               	movwf	??_StopGunFirePattern& (0+255),c
  4063  002558  0E01               	movlw	1
  4064  00255A  6E04               	movwf	(??_StopGunFirePattern+1)& (0+255),c
  4065  00255C  2A03               	incf	??_StopGunFirePattern,f,c
  4066  00255E  D002               	goto	u1064
  4067  002560                     u1065:
  4068  002560  90D8               	bcf	16344,0,c
  4069  002562  3604               	rlcf	??_StopGunFirePattern+1,f,c
  4070  002564                     u1064:
  4071  002564  2E03               	decfsz	??_StopGunFirePattern,f,c
  4072  002566  D7FC               	goto	u1065
  4073  002568  EE20 F004          	lfsr	2,4
  4074  00256C  5001               	movf	StopGunFirePattern@gp,w,c
  4075  00256E  26D9               	addwf	16345,f,c
  4076  002570  5002               	movf	StopGunFirePattern@gp+1,w,c
  4077  002572  22DA               	addwfc	16346,f,c
  4078  002574  006F FF78  F005    	movff	16350,??_StopGunFirePattern+2
  4079  00257A  006F FF74  F006    	movff	16349,??_StopGunFirePattern+3
  4080  002580  0060  F017  FFD9   	movff	??_StopGunFirePattern+2,16345
  4081  002586  0060  F01B  FFDA   	movff	??_StopGunFirePattern+3,16346
  4082  00258C  5004               	movf	??_StopGunFirePattern+1,w,c
  4083  00258E  12DF               	iorwf	16351,f,c
  4084  002590  0012               	return	
  4085  002592                     __end_of_StopGunFirePattern:
  4086                           	opt stack 0
  4087                           
  4088 ;; *************** function _GetCurrentTime *****************
  4089 ;; Defined at:
  4090 ;;		line 30 in file "stop_watch.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;		None
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;		None
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  4    0[COMRAM] unsigned long 
  4097 ;; Registers used:
  4098 ;;		None
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4104 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4107 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4108 ;;Total ram usage:        4 bytes
  4109 ;; Hardware stack levels used:    1
  4110 ;; Hardware stack levels required when called:    3
  4111 ;; This function calls:
  4112 ;;		Nothing
  4113 ;; This function is called by:
  4114 ;;		_StartGunFirePattern
  4115 ;;		_UpdateGunLED
  4116 ;;		_StartStrobe
  4117 ;;		_UpdateStrobeLED
  4118 ;;		_StartRabbitLights
  4119 ;;		_UpdateRabbitLEDs
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123                           	psect	text17
  4124  002920                     __ptext17:
  4125                           	opt stack 0
  4126  002920                     _GetCurrentTime:
  4127                           	opt stack 26
  4128                           
  4129                           ;stop_watch.c: 32: return globalTime;
  4130                           
  4131                           ;incstack = 0
  4132  002920  0060  F0A8  F001   	movff	_globalTime,?_GetCurrentTime	;volatile
  4133  002926  0060  F0AC  F002   	movff	_globalTime+1,?_GetCurrentTime+1	;volatile
  4134  00292C  0060  F0B0  F003   	movff	_globalTime+2,?_GetCurrentTime+2	;volatile
  4135  002932  0060  F0B4  F004   	movff	_globalTime+3,?_GetCurrentTime+3	;volatile
  4136  002938  0012               	return		;funcret
  4137  00293A                     __end_of_GetCurrentTime:
  4138                           	opt stack 0
  4139                           
  4140 ;; *************** function _SYSTEM_Initialize *****************
  4141 ;; Defined at:
  4142 ;;		line 101 in file "mcc_generated_files/mcc.c"
  4143 ;; Parameters:    Size  Location     Type
  4144 ;;		None
  4145 ;; Auto vars:     Size  Location     Type
  4146 ;;		None
  4147 ;; Return value:  Size  Location     Type
  4148 ;;                  1    wreg      void 
  4149 ;; Registers used:
  4150 ;;		wreg, status,2, status,0, cstack
  4151 ;; Tracked objects:
  4152 ;;		On entry : 0/0
  4153 ;;		On exit  : 0/0
  4154 ;;		Unchanged: 0/0
  4155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4160 ;;Total ram usage:        0 bytes
  4161 ;; Hardware stack levels used:    1
  4162 ;; Hardware stack levels required when called:    5
  4163 ;; This function calls:
  4164 ;;		_INTERRUPT_Initialize
  4165 ;;		_OSCILLATOR_Initialize
  4166 ;;		_PIN_MANAGER_Initialize
  4167 ;;		_TMR0_Initialize
  4168 ;; This function is called by:
  4169 ;;		_main
  4170 ;; This function uses a non-reentrant model
  4171 ;;
  4172                           
  4173                           	psect	text18
  4174  002952                     __ptext18:
  4175                           	opt stack 0
  4176  002952                     _SYSTEM_Initialize:
  4177                           	opt stack 25
  4178                           
  4179                           ;mcc.c: 103: INTERRUPT_Initialize();
  4180                           
  4181                           ;incstack = 0
  4182  002952  ECD1  F014         	call	_INTERRUPT_Initialize	;wreg free
  4183                           
  4184                           ;mcc.c: 104: PIN_MANAGER_Initialize();
  4185  002956  ECE0  F013         	call	_PIN_MANAGER_Initialize	;wreg free
  4186                           
  4187                           ;mcc.c: 105: OSCILLATOR_Initialize();
  4188  00295A  EC9D  F014         	call	_OSCILLATOR_Initialize	;wreg free
  4189                           
  4190                           ;mcc.c: 106: TMR0_Initialize();
  4191  00295E  EC3A  F014         	call	_TMR0_Initialize	;wreg free
  4192  002962  0012               	return		;funcret
  4193  002964                     __end_of_SYSTEM_Initialize:
  4194                           	opt stack 0
  4195                           
  4196 ;; *************** function _TMR0_Initialize *****************
  4197 ;; Defined at:
  4198 ;;		line 60 in file "mcc_generated_files/tmr0.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;		None
  4201 ;; Auto vars:     Size  Location     Type
  4202 ;;		None
  4203 ;; Return value:  Size  Location     Type
  4204 ;;                  1    wreg      void 
  4205 ;; Registers used:
  4206 ;;		wreg, status,2, status,0, cstack
  4207 ;; Tracked objects:
  4208 ;;		On entry : 0/0
  4209 ;;		On exit  : 0/0
  4210 ;;		Unchanged: 0/0
  4211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4216 ;;Total ram usage:        0 bytes
  4217 ;; Hardware stack levels used:    1
  4218 ;; Hardware stack levels required when called:    4
  4219 ;; This function calls:
  4220 ;;		_TMR0_SetInterruptHandler
  4221 ;; This function is called by:
  4222 ;;		_SYSTEM_Initialize
  4223 ;;		_StopWatch_Initialize
  4224 ;; This function uses a non-reentrant model
  4225 ;;
  4226                           
  4227                           	psect	text19
  4228  002874                     __ptext19:
  4229                           	opt stack 0
  4230  002874                     _TMR0_Initialize:
  4231                           	opt stack 25
  4232                           
  4233                           ;tmr0.c: 65: T0CON1 = 0x68;
  4234                           
  4235                           ;incstack = 0
  4236  002874  0E68               	movlw	104
  4237  002876  013F               	movlb	63	; () banked
  4238  002878  6FB9               	movwf	185,b	;volatile
  4239                           
  4240                           ;tmr0.c: 68: TMR0H = 0xF9;
  4241  00287A  0EF9               	movlw	249
  4242  00287C  6FB7               	movwf	183,b	;volatile
  4243                           
  4244                           ;tmr0.c: 71: TMR0L = 0x00;
  4245  00287E  0E00               	movlw	0
  4246  002880  6FB6               	movwf	182,b	;volatile
  4247                           
  4248                           ; BSR set to: 63
  4249                           ;tmr0.c: 74: PIR3bits.TMR0IF = 0;
  4250  002882  0139               	movlb	57	; () banked
  4251  002884  9FA3               	bcf	163,7,b	;volatile
  4252                           
  4253                           ; BSR set to: 57
  4254                           ;tmr0.c: 77: PIE3bits.TMR0IE = 1;
  4255  002886  8F93               	bsf	147,7,b	;volatile
  4256                           
  4257                           ; BSR set to: 57
  4258                           ;tmr0.c: 80: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  4259  002888  0EA8               	movlw	low _TMR0_DefaultInterruptHandler
  4260  00288A  6E01               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
  4261  00288C  0E29               	movlw	high _TMR0_DefaultInterruptHandler
  4262  00288E  6E02               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
  4263  002890  ECBA  F014         	call	_TMR0_SetInterruptHandler	;wreg free
  4264                           
  4265                           ;tmr0.c: 83: T0CON0 = 0x80;
  4266  002894  0E80               	movlw	128
  4267  002896  013F               	movlb	63	; () banked
  4268  002898  6FB8               	movwf	184,b	;volatile
  4269                           
  4270                           ; BSR set to: 63
  4271  00289A  0012               	return		;funcret
  4272  00289C                     __end_of_TMR0_Initialize:
  4273                           	opt stack 0
  4274                           
  4275 ;; *************** function _TMR0_SetInterruptHandler *****************
  4276 ;; Defined at:
  4277 ;;		line 133 in file "mcc_generated_files/tmr0.c"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
  4280 ;;		 -> StopWatchISR(1), TMR0_DefaultInterruptHandler(1), 
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;		None
  4283 ;; Return value:  Size  Location     Type
  4284 ;;                  1    wreg      void 
  4285 ;; Registers used:
  4286 ;;		wreg, status,2, status,0
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/0
  4289 ;;		On exit  : 0/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4292 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4295 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4296 ;;Total ram usage:        2 bytes
  4297 ;; Hardware stack levels used:    1
  4298 ;; Hardware stack levels required when called:    3
  4299 ;; This function calls:
  4300 ;;		Nothing
  4301 ;; This function is called by:
  4302 ;;		_TMR0_Initialize
  4303 ;;		_StopWatch_Initialize
  4304 ;; This function uses a non-reentrant model
  4305 ;;
  4306                           
  4307                           	psect	text20
  4308  002974                     __ptext20:
  4309                           	opt stack 0
  4310  002974                     _TMR0_SetInterruptHandler:
  4311                           	opt stack 26
  4312                           
  4313                           ;tmr0.c: 134: TMR0_InterruptHandler = InterruptHandler;
  4314                           
  4315                           ; BSR set to: 63
  4316                           ;incstack = 0
  4317  002974  0060  F004  F02E   	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  4318  00297A  0060  F008  F02F   	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  4319  002980  0012               	return		;funcret
  4320  002982                     __end_of_TMR0_SetInterruptHandler:
  4321                           	opt stack 0
  4322                           
  4323 ;; *************** function _PIN_MANAGER_Initialize *****************
  4324 ;; Defined at:
  4325 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;		None
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;		None
  4330 ;; Return value:  Size  Location     Type
  4331 ;;                  1    wreg      void 
  4332 ;; Registers used:
  4333 ;;		wreg, status,2
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4343 ;;Total ram usage:        0 bytes
  4344 ;; Hardware stack levels used:    1
  4345 ;; Hardware stack levels required when called:    3
  4346 ;; This function calls:
  4347 ;;		Nothing
  4348 ;; This function is called by:
  4349 ;;		_SYSTEM_Initialize
  4350 ;; This function uses a non-reentrant model
  4351 ;;
  4352                           
  4353                           	psect	text21
  4354  0027C0                     __ptext21:
  4355                           	opt stack 0
  4356  0027C0                     _PIN_MANAGER_Initialize:
  4357                           	opt stack 26
  4358                           
  4359                           ;pin_manager.c: 57: LATE = 0x00;
  4360                           
  4361                           ;incstack = 0
  4362  0027C0  0E00               	movlw	0
  4363  0027C2  013F               	movlb	63	; () banked
  4364  0027C4  6FBE               	movwf	190,b	;volatile
  4365                           
  4366                           ; BSR set to: 63
  4367                           ;pin_manager.c: 58: LATD = 0xFF;
  4368  0027C6  69BD               	setf	189,b	;volatile
  4369                           
  4370                           ;pin_manager.c: 59: LATA = 0x00;
  4371  0027C8  0E00               	movlw	0
  4372  0027CA  6FBA               	movwf	186,b	;volatile
  4373                           
  4374                           ; BSR set to: 63
  4375                           ;pin_manager.c: 60: LATB = 0xFF;
  4376  0027CC  69BB               	setf	187,b	;volatile
  4377                           
  4378                           ; BSR set to: 63
  4379                           ;pin_manager.c: 61: LATC = 0xFF;
  4380  0027CE  69BC               	setf	188,b	;volatile
  4381                           
  4382                           ;pin_manager.c: 66: TRISE = 0x07;
  4383  0027D0  0E07               	movlw	7
  4384  0027D2  6FC6               	movwf	198,b	;volatile
  4385                           
  4386                           ; BSR set to: 63
  4387                           ;pin_manager.c: 67: TRISA = 0xFF;
  4388  0027D4  69C2               	setf	194,b	;volatile
  4389                           
  4390                           ;pin_manager.c: 68: TRISB = 0x00;
  4391  0027D6  0E00               	movlw	0
  4392  0027D8  6FC3               	movwf	195,b	;volatile
  4393                           
  4394                           ;pin_manager.c: 69: TRISC = 0x00;
  4395  0027DA  0E00               	movlw	0
  4396  0027DC  6FC4               	movwf	196,b	;volatile
  4397                           
  4398                           ;pin_manager.c: 70: TRISD = 0x00;
  4399  0027DE  0E00               	movlw	0
  4400  0027E0  6FC5               	movwf	197,b	;volatile
  4401                           
  4402                           ;pin_manager.c: 75: ANSELC = 0x00;
  4403  0027E2  0E00               	movlw	0
  4404  0027E4  013A               	movlb	58	; () banked
  4405  0027E6  6F60               	movwf	96,b	;volatile
  4406                           
  4407                           ;pin_manager.c: 76: ANSELB = 0x00;
  4408  0027E8  0E00               	movlw	0
  4409  0027EA  6F50               	movwf	80,b	;volatile
  4410                           
  4411                           ;pin_manager.c: 77: ANSELD = 0x00;
  4412  0027EC  0E00               	movlw	0
  4413  0027EE  6F70               	movwf	112,b	;volatile
  4414                           
  4415                           ;pin_manager.c: 78: ANSELE = 0x07;
  4416  0027F0  0E07               	movlw	7
  4417  0027F2  6F80               	movwf	128,b	;volatile
  4418                           
  4419                           ;pin_manager.c: 79: ANSELA = 0x00;
  4420  0027F4  0E00               	movlw	0
  4421  0027F6  6F40               	movwf	64,b	;volatile
  4422                           
  4423                           ;pin_manager.c: 84: WPUD = 0x00;
  4424  0027F8  0E00               	movlw	0
  4425  0027FA  6F71               	movwf	113,b	;volatile
  4426                           
  4427                           ;pin_manager.c: 85: WPUE = 0x00;
  4428  0027FC  0E00               	movlw	0
  4429  0027FE  6F81               	movwf	129,b	;volatile
  4430                           
  4431                           ;pin_manager.c: 86: WPUB = 0x00;
  4432  002800  0E00               	movlw	0
  4433  002802  6F51               	movwf	81,b	;volatile
  4434                           
  4435                           ;pin_manager.c: 87: WPUA = 0x00;
  4436  002804  0E00               	movlw	0
  4437  002806  6F41               	movwf	65,b	;volatile
  4438                           
  4439                           ;pin_manager.c: 88: WPUC = 0x00;
  4440  002808  0E00               	movlw	0
  4441  00280A  6F61               	movwf	97,b	;volatile
  4442                           
  4443                           ;pin_manager.c: 93: ODCONE = 0x00;
  4444  00280C  0E00               	movlw	0
  4445  00280E  6F82               	movwf	130,b	;volatile
  4446                           
  4447                           ;pin_manager.c: 94: ODCONA = 0x00;
  4448  002810  0E00               	movlw	0
  4449  002812  6F42               	movwf	66,b	;volatile
  4450                           
  4451                           ;pin_manager.c: 95: ODCONB = 0x00;
  4452  002814  0E00               	movlw	0
  4453  002816  6F52               	movwf	82,b	;volatile
  4454                           
  4455                           ;pin_manager.c: 96: ODCONC = 0x00;
  4456  002818  0E00               	movlw	0
  4457  00281A  6F62               	movwf	98,b	;volatile
  4458                           
  4459                           ;pin_manager.c: 97: ODCOND = 0x00;
  4460  00281C  0E00               	movlw	0
  4461  00281E  6F72               	movwf	114,b	;volatile
  4462                           
  4463                           ; BSR set to: 58
  4464  002820  0012               	return		;funcret
  4465  002822                     __end_of_PIN_MANAGER_Initialize:
  4466                           	opt stack 0
  4467                           
  4468 ;; *************** function _OSCILLATOR_Initialize *****************
  4469 ;; Defined at:
  4470 ;;		line 109 in file "mcc_generated_files/mcc.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;		None
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;		None
  4475 ;; Return value:  Size  Location     Type
  4476 ;;                  1    wreg      void 
  4477 ;; Registers used:
  4478 ;;		wreg, status,2
  4479 ;; Tracked objects:
  4480 ;;		On entry : 0/0
  4481 ;;		On exit  : 0/0
  4482 ;;		Unchanged: 0/0
  4483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4488 ;;Total ram usage:        0 bytes
  4489 ;; Hardware stack levels used:    1
  4490 ;; Hardware stack levels required when called:    3
  4491 ;; This function calls:
  4492 ;;		Nothing
  4493 ;; This function is called by:
  4494 ;;		_SYSTEM_Initialize
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497                           
  4498                           	psect	text22
  4499  00293A                     __ptext22:
  4500                           	opt stack 0
  4501  00293A                     _OSCILLATOR_Initialize:
  4502                           	opt stack 26
  4503                           
  4504                           ;mcc.c: 112: OSCCON1 = 0x60;
  4505                           
  4506                           ; BSR set to: 58
  4507                           ;incstack = 0
  4508  00293A  0E60               	movlw	96
  4509  00293C  0139               	movlb	57	; () banked
  4510  00293E  6FD9               	movwf	217,b	;volatile
  4511                           
  4512                           ;mcc.c: 114: OSCCON3 = 0x00;
  4513  002940  0E00               	movlw	0
  4514  002942  6FDB               	movwf	219,b	;volatile
  4515                           
  4516                           ;mcc.c: 116: OSCEN = 0x00;
  4517  002944  0E00               	movlw	0
  4518  002946  6FDD               	movwf	221,b	;volatile
  4519                           
  4520                           ;mcc.c: 118: OSCFRQ = 0x08;
  4521  002948  0E08               	movlw	8
  4522  00294A  6FDF               	movwf	223,b	;volatile
  4523                           
  4524                           ;mcc.c: 120: OSCTUNE = 0x00;
  4525  00294C  0E00               	movlw	0
  4526  00294E  6FDE               	movwf	222,b	;volatile
  4527                           
  4528                           ; BSR set to: 57
  4529  002950  0012               	return		;funcret
  4530  002952                     __end_of_OSCILLATOR_Initialize:
  4531                           	opt stack 0
  4532                           
  4533 ;; *************** function _INTERRUPT_Initialize *****************
  4534 ;; Defined at:
  4535 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  4536 ;; Parameters:    Size  Location     Type
  4537 ;;		None
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;		None
  4540 ;; Return value:  Size  Location     Type
  4541 ;;                  1    wreg      void 
  4542 ;; Registers used:
  4543 ;;		None
  4544 ;; Tracked objects:
  4545 ;;		On entry : 0/0
  4546 ;;		On exit  : 0/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4553 ;;Total ram usage:        0 bytes
  4554 ;; Hardware stack levels used:    1
  4555 ;; Hardware stack levels required when called:    3
  4556 ;; This function calls:
  4557 ;;		Nothing
  4558 ;; This function is called by:
  4559 ;;		_SYSTEM_Initialize
  4560 ;; This function uses a non-reentrant model
  4561 ;;
  4562                           
  4563                           	psect	text23
  4564  0029A2                     __ptext23:
  4565                           	opt stack 0
  4566  0029A2                     _INTERRUPT_Initialize:
  4567                           	opt stack 26
  4568                           
  4569                           ;interrupt_manager.c: 54: INTCON0bits.IPEN = 0;
  4570                           
  4571                           ; BSR set to: 57
  4572                           ;incstack = 0
  4573  0029A2  013F               	movlb	63	; () banked
  4574  0029A4  9BD2               	bcf	210,5,b	;volatile
  4575                           
  4576                           ; BSR set to: 63
  4577  0029A6  0012               	return		;funcret
  4578  0029A8                     __end_of_INTERRUPT_Initialize:
  4579                           	opt stack 0
  4580                           
  4581 ;; *************** function _RabbitLightsInit *****************
  4582 ;; Defined at:
  4583 ;;		line 353 in file "LED_Patterns.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;  OP              2    0[COMRAM] PTR  unsigned char 
  4586 ;;		 -> LATB(1), 
  4587 ;;  IP              2    2[COMRAM] PTR  unsigned char 
  4588 ;;		 -> PORTB(1), 
  4589 ;;  SLED            1    4[COMRAM] const unsigned char 
  4590 ;;  num             1    5[COMRAM] const unsigned char 
  4591 ;; Auto vars:     Size  Location     Type
  4592 ;;  rp             13   13[COMRAM] struct RabbitPort
  4593 ;; Return value:  Size  Location     Type
  4594 ;;                  13    0[COMRAM] struct RabbitPort
  4595 ;; Registers used:
  4596 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  4597 ;; Tracked objects:
  4598 ;;		On entry : 0/0
  4599 ;;		On exit  : 0/0
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4602 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4603 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4605 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4606 ;;Total ram usage:       26 bytes
  4607 ;; Hardware stack levels used:    1
  4608 ;; Hardware stack levels required when called:    3
  4609 ;; This function calls:
  4610 ;;		Nothing
  4611 ;; This function is called by:
  4612 ;;		_main
  4613 ;; This function uses a non-reentrant model
  4614 ;;
  4615                           
  4616                           	psect	text24
  4617  002822                     __ptext24:
  4618                           	opt stack 0
  4619  002822                     _RabbitLightsInit:
  4620                           	opt stack 27
  4621                           
  4622                           ;LED_Patterns.c: 355: RabbitPort rp;
  4623                           ;LED_Patterns.c: 357: rp.OutputPort = (volatile unsigned char *)OP;
  4624                           
  4625                           ; BSR set to: 63
  4626                           ;incstack = 0
  4627  002822  0060  F004  F00E   	movff	RabbitLightsInit@OP,RabbitLightsInit@rp
  4628  002828  0060  F008  F00F   	movff	RabbitLightsInit@OP+1,RabbitLightsInit@rp+1
  4629                           
  4630                           ;LED_Patterns.c: 358: rp.InputPort = (volatile unsigned char *)IP;
  4631  00282E  0060  F00C  F010   	movff	RabbitLightsInit@IP,RabbitLightsInit@rp+2
  4632  002834  0060  F010  F011   	movff	RabbitLightsInit@IP+1,RabbitLightsInit@rp+3
  4633                           
  4634                           ;LED_Patterns.c: 359: rp.StartingLED = SLED;
  4635  00283A  0060  F014  F012   	movff	RabbitLightsInit@SLED,RabbitLightsInit@rp+4
  4636                           
  4637                           ;LED_Patterns.c: 360: rp.NumLights = num;
  4638  002840  0060  F018  F013   	movff	RabbitLightsInit@num,RabbitLightsInit@rp+5
  4639                           
  4640                           ;LED_Patterns.c: 362: rp.RabbitRUN = 0;
  4641  002846  0E00               	movlw	0
  4642  002848  6E19               	movwf	RabbitLightsInit@rp+11,c
  4643                           
  4644                           ;LED_Patterns.c: 363: rp.ShiftCNT = 0;
  4645  00284A  0E00               	movlw	0
  4646  00284C  6E18               	movwf	RabbitLightsInit@rp+10,c
  4647                           
  4648                           ;LED_Patterns.c: 364: rp.msCnt = 0;
  4649  00284E  0E00               	movlw	0
  4650  002850  6E14               	movwf	RabbitLightsInit@rp+6,c
  4651  002852  0E00               	movlw	0
  4652  002854  6E15               	movwf	RabbitLightsInit@rp+7,c
  4653  002856  0E00               	movlw	0
  4654  002858  6E16               	movwf	RabbitLightsInit@rp+8,c
  4655  00285A  0E00               	movlw	0
  4656  00285C  6E17               	movwf	RabbitLightsInit@rp+9,c
  4657                           
  4658                           ;LED_Patterns.c: 366: return rp;
  4659  00285E  EE20  F00E         	lfsr	2,RabbitLightsInit@rp
  4660  002862  EE00  F001         	lfsr	0,?_RabbitLightsInit
  4661  002866  0E0C               	movlw	12
  4662  002868                     u1201:
  4663  002868  006F FF6F FFEB     	movff	16347,16363
  4664  00286E  06E8               	decf	16360,f,c
  4665  002870  E2FB               	bc	u1201
  4666  002872  0012               	return	
  4667  002874                     __end_of_RabbitLightsInit:
  4668                           	opt stack 0
  4669                           
  4670 ;; *************** function _GunPortInit_ *****************
  4671 ;; Defined at:
  4672 ;;		line 12 in file "LED_Patterns.c"
  4673 ;; Parameters:    Size  Location     Type
  4674 ;;  OP              2    0[COMRAM] PTR  unsigned char 
  4675 ;;		 -> LATD(1), 
  4676 ;;  IP              2    2[COMRAM] PTR  unsigned char 
  4677 ;;		 -> PORTD(1), 
  4678 ;;  GLED            1    4[COMRAM] const unsigned char 
  4679 ;;  TLED            1    5[COMRAM] const unsigned char 
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;  gp             17   22[COMRAM] struct GunPort
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  17    0[COMRAM] struct GunPort
  4684 ;; Registers used:
  4685 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4691 ;;      Params:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4692 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4693 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4694 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4695 ;;Total ram usage:       39 bytes
  4696 ;; Hardware stack levels used:    1
  4697 ;; Hardware stack levels required when called:    3
  4698 ;; This function calls:
  4699 ;;		Nothing
  4700 ;; This function is called by:
  4701 ;;		_main
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705                           	psect	text25
  4706  002592                     __ptext25:
  4707                           	opt stack 0
  4708  002592                     _GunPortInit_:
  4709                           	opt stack 27
  4710                           
  4711                           ;LED_Patterns.c: 14: GunPort gp;
  4712                           ;LED_Patterns.c: 16: gp.OutputPort = (volatile unsigned char *)OP;
  4713                           
  4714                           ;incstack = 0
  4715  002592  0060  F004  F017   	movff	GunPortInit_@OP,GunPortInit_@gp
  4716  002598  0060  F008  F018   	movff	GunPortInit_@OP+1,GunPortInit_@gp+1
  4717                           
  4718                           ;LED_Patterns.c: 17: gp.InputPort = (volatile unsigned char *)IP;
  4719  00259E  0060  F00C  F019   	movff	GunPortInit_@IP,GunPortInit_@gp+2
  4720  0025A4  0060  F010  F01A   	movff	GunPortInit_@IP+1,GunPortInit_@gp+3
  4721                           
  4722                           ;LED_Patterns.c: 18: gp.TracerPort = (volatile unsigned char *)OP;
  4723  0025AA  0060  F004  F01B   	movff	GunPortInit_@OP,GunPortInit_@gp+4
  4724  0025B0  0060  F008  F01C   	movff	GunPortInit_@OP+1,GunPortInit_@gp+5
  4725                           
  4726                           ;LED_Patterns.c: 19: gp.TracerInPort = (volatile unsigned char *)IP;
  4727  0025B6  0060  F00C  F01D   	movff	GunPortInit_@IP,GunPortInit_@gp+6
  4728  0025BC  0060  F010  F01E   	movff	GunPortInit_@IP+1,GunPortInit_@gp+7
  4729                           
  4730                           ;LED_Patterns.c: 21: gp.GunLED = GLED;
  4731  0025C2  0060  F014  F01F   	movff	GunPortInit_@GLED,GunPortInit_@gp+8
  4732                           
  4733                           ;LED_Patterns.c: 22: gp.TracerLED = TLED;
  4734  0025C8  0060  F018  F020   	movff	GunPortInit_@TLED,GunPortInit_@gp+9
  4735                           
  4736                           ;LED_Patterns.c: 24: gp.GunCnt = 0;
  4737  0025CE  0E00               	movlw	0
  4738  0025D0  6E21               	movwf	GunPortInit_@gp+10,c
  4739  0025D2  0E00               	movlw	0
  4740  0025D4  6E22               	movwf	GunPortInit_@gp+11,c
  4741  0025D6  0E00               	movlw	0
  4742  0025D8  6E23               	movwf	GunPortInit_@gp+12,c
  4743  0025DA  0E00               	movlw	0
  4744  0025DC  6E24               	movwf	GunPortInit_@gp+13,c
  4745                           
  4746                           ;LED_Patterns.c: 25: gp.ShotsCnt = 0;
  4747  0025DE  0E00               	movlw	0
  4748  0025E0  6E25               	movwf	GunPortInit_@gp+14,c
  4749                           
  4750                           ;LED_Patterns.c: 28: gp.GunRUN = 0;
  4751  0025E2  0E00               	movlw	0
  4752  0025E4  6E26               	movwf	GunPortInit_@gp+15,c
  4753                           
  4754                           ;LED_Patterns.c: 29: gp.A_B = 0;
  4755  0025E6  0E00               	movlw	0
  4756  0025E8  6E27               	movwf	GunPortInit_@gp+16,c
  4757                           
  4758                           ;LED_Patterns.c: 31: *gp.OutputPort |= ((1 << GLED) | (1 << TLED));
  4759  0025EA  0060  F018  F012   	movff	GunPortInit_@TLED,??_GunPortInit_
  4760  0025F0  0E01               	movlw	1
  4761  0025F2  6E13               	movwf	(??_GunPortInit_+1)& (0+255),c
  4762  0025F4  2A12               	incf	??_GunPortInit_,f,c
  4763  0025F6  D002               	goto	u1154
  4764  0025F8                     u1155:
  4765  0025F8  90D8               	bcf	16344,0,c
  4766  0025FA  3613               	rlcf	??_GunPortInit_+1,f,c
  4767  0025FC                     u1154:
  4768  0025FC  2E12               	decfsz	??_GunPortInit_,f,c
  4769  0025FE  D7FC               	goto	u1155
  4770  002600  0060  F014  F014   	movff	GunPortInit_@GLED,??_GunPortInit_+2
  4771  002606  0E01               	movlw	1
  4772  002608  6E15               	movwf	(??_GunPortInit_+3)& (0+255),c
  4773  00260A  2A14               	incf	??_GunPortInit_+2,f,c
  4774  00260C  D002               	goto	u1164
  4775  00260E                     u1165:
  4776  00260E  90D8               	bcf	16344,0,c
  4777  002610  3615               	rlcf	??_GunPortInit_+3,f,c
  4778  002612                     u1164:
  4779  002612  2E14               	decfsz	??_GunPortInit_+2,f,c
  4780  002614  D7FC               	goto	u1165
  4781  002616  5015               	movf	??_GunPortInit_+3,w,c
  4782  002618  1013               	iorwf	??_GunPortInit_+1,w,c
  4783  00261A  6E16               	movwf	(??_GunPortInit_+4)& (0+255),c
  4784  00261C  0060  F05F  FFD9   	movff	GunPortInit_@gp,16345
  4785  002622  0060  F063  FFDA   	movff	GunPortInit_@gp+1,16346
  4786  002628  5016               	movf	??_GunPortInit_+4,w,c
  4787  00262A  12DF               	iorwf	16351,f,c
  4788                           
  4789                           ;LED_Patterns.c: 33: return gp;
  4790  00262C  EE20  F017         	lfsr	2,GunPortInit_@gp
  4791  002630  EE00  F001         	lfsr	0,?_GunPortInit_
  4792  002634  0E10               	movlw	16
  4793  002636                     u1171:
  4794  002636  006F FF6F FFEB     	movff	16347,16363
  4795  00263C  06E8               	decf	16360,f,c
  4796  00263E  E2FB               	bc	u1171
  4797  002640  0012               	return	
  4798  002642                     __end_of_GunPortInit_:
  4799                           	opt stack 0
  4800                           
  4801 ;; *************** function _GunPortInit *****************
  4802 ;; Defined at:
  4803 ;;		line 41 in file "LED_Patterns.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;  OP              2    0[COMRAM] PTR  unsigned char 
  4806 ;;		 -> LATC(1), 
  4807 ;;  IP              2    2[COMRAM] PTR  unsigned char 
  4808 ;;		 -> PORTC(1), 
  4809 ;;  TP              2    4[COMRAM] PTR  unsigned char 
  4810 ;;		 -> LATD(1), 
  4811 ;;  TIP             2    6[COMRAM] PTR  unsigned char 
  4812 ;;		 -> PORTD(1), 
  4813 ;;  GLED            1    8[COMRAM] const unsigned char 
  4814 ;;  TLED            1    9[COMRAM] const unsigned char 
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;  gp             17   19[COMRAM] struct GunPort
  4817 ;; Return value:  Size  Location     Type
  4818 ;;                  17    0[COMRAM] struct GunPort
  4819 ;; Registers used:
  4820 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  4821 ;; Tracked objects:
  4822 ;;		On entry : 0/0
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4826 ;;      Params:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4827 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4828 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4829 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4830 ;;Total ram usage:       36 bytes
  4831 ;; Hardware stack levels used:    1
  4832 ;; Hardware stack levels required when called:    3
  4833 ;; This function calls:
  4834 ;;		Nothing
  4835 ;; This function is called by:
  4836 ;;		_main
  4837 ;; This function uses a non-reentrant model
  4838 ;;
  4839                           
  4840                           	psect	text26
  4841  002424                     __ptext26:
  4842                           	opt stack 0
  4843  002424                     _GunPortInit:
  4844                           	opt stack 27
  4845                           
  4846                           ;LED_Patterns.c: 43: GunPort gp;
  4847                           ;LED_Patterns.c: 45: gp.OutputPort = (volatile unsigned char *)OP;
  4848                           
  4849                           ;incstack = 0
  4850  002424  0060  F004  F014   	movff	GunPortInit@OP,GunPortInit@gp
  4851  00242A  0060  F008  F015   	movff	GunPortInit@OP+1,GunPortInit@gp+1
  4852                           
  4853                           ;LED_Patterns.c: 46: gp.InputPort = (volatile unsigned char *)IP;
  4854  002430  0060  F00C  F016   	movff	GunPortInit@IP,GunPortInit@gp+2
  4855  002436  0060  F010  F017   	movff	GunPortInit@IP+1,GunPortInit@gp+3
  4856                           
  4857                           ;LED_Patterns.c: 47: gp.TracerPort = (volatile unsigned char *)TP;
  4858  00243C  0060  F014  F018   	movff	GunPortInit@TP,GunPortInit@gp+4
  4859  002442  0060  F018  F019   	movff	GunPortInit@TP+1,GunPortInit@gp+5
  4860                           
  4861                           ;LED_Patterns.c: 48: gp.TracerInPort = (volatile unsigned char *)TIP;
  4862  002448  0060  F01C  F01A   	movff	GunPortInit@TIP,GunPortInit@gp+6
  4863  00244E  0060  F020  F01B   	movff	GunPortInit@TIP+1,GunPortInit@gp+7
  4864                           
  4865                           ;LED_Patterns.c: 50: gp.GunLED = GLED;
  4866  002454  0060  F024  F01C   	movff	GunPortInit@GLED,GunPortInit@gp+8
  4867                           
  4868                           ;LED_Patterns.c: 51: gp.TracerLED = TLED;
  4869  00245A  0060  F028  F01D   	movff	GunPortInit@TLED,GunPortInit@gp+9
  4870                           
  4871                           ;LED_Patterns.c: 53: gp.GunCnt = 0;
  4872  002460  0E00               	movlw	0
  4873  002462  6E1E               	movwf	GunPortInit@gp+10,c
  4874  002464  0E00               	movlw	0
  4875  002466  6E1F               	movwf	GunPortInit@gp+11,c
  4876  002468  0E00               	movlw	0
  4877  00246A  6E20               	movwf	GunPortInit@gp+12,c
  4878  00246C  0E00               	movlw	0
  4879  00246E  6E21               	movwf	GunPortInit@gp+13,c
  4880                           
  4881                           ;LED_Patterns.c: 54: gp.ShotsCnt = 0;
  4882  002470  0E00               	movlw	0
  4883  002472  6E22               	movwf	GunPortInit@gp+14,c
  4884                           
  4885                           ;LED_Patterns.c: 57: gp.GunRUN = 0;
  4886  002474  0E00               	movlw	0
  4887  002476  6E23               	movwf	GunPortInit@gp+15,c
  4888                           
  4889                           ;LED_Patterns.c: 58: gp.A_B = 0;
  4890  002478  0E00               	movlw	0
  4891  00247A  6E24               	movwf	GunPortInit@gp+16,c
  4892                           
  4893                           ;LED_Patterns.c: 60: *gp.OutputPort |= (1 << GLED);
  4894  00247C  0060  F024  F012   	movff	GunPortInit@GLED,??_GunPortInit
  4895  002482  0E01               	movlw	1
  4896  002484  6E13               	movwf	(??_GunPortInit+1)& (0+255),c
  4897  002486  2A12               	incf	??_GunPortInit,f,c
  4898  002488  D002               	goto	u1124
  4899  00248A                     u1125:
  4900  00248A  90D8               	bcf	16344,0,c
  4901  00248C  3613               	rlcf	??_GunPortInit+1,f,c
  4902  00248E                     u1124:
  4903  00248E  2E12               	decfsz	??_GunPortInit,f,c
  4904  002490  D7FC               	goto	u1125
  4905  002492  0060  F053  FFD9   	movff	GunPortInit@gp,16345
  4906  002498  0060  F057  FFDA   	movff	GunPortInit@gp+1,16346
  4907  00249E  5013               	movf	??_GunPortInit+1,w,c
  4908  0024A0  12DF               	iorwf	16351,f,c
  4909                           
  4910                           ;LED_Patterns.c: 61: *gp.TracerPort |= (1 << TLED);
  4911  0024A2  0060  F028  F012   	movff	GunPortInit@TLED,??_GunPortInit
  4912  0024A8  0E01               	movlw	1
  4913  0024AA  6E13               	movwf	(??_GunPortInit+1)& (0+255),c
  4914  0024AC  2A12               	incf	??_GunPortInit,f,c
  4915  0024AE  D002               	goto	u1134
  4916  0024B0                     u1135:
  4917  0024B0  90D8               	bcf	16344,0,c
  4918  0024B2  3613               	rlcf	??_GunPortInit+1,f,c
  4919  0024B4                     u1134:
  4920  0024B4  2E12               	decfsz	??_GunPortInit,f,c
  4921  0024B6  D7FC               	goto	u1135
  4922  0024B8  0060  F063  FFD9   	movff	GunPortInit@gp+4,16345
  4923  0024BE  0060  F067  FFDA   	movff	GunPortInit@gp+5,16346
  4924  0024C4  5013               	movf	??_GunPortInit+1,w,c
  4925  0024C6  12DF               	iorwf	16351,f,c
  4926                           
  4927                           ;LED_Patterns.c: 63: return gp;
  4928  0024C8  EE20  F014         	lfsr	2,GunPortInit@gp
  4929  0024CC  EE00  F001         	lfsr	0,?_GunPortInit
  4930  0024D0  0E10               	movlw	16
  4931  0024D2                     u1141:
  4932  0024D2  006F FF6F FFEB     	movff	16347,16363
  4933  0024D8  06E8               	decf	16360,f,c
  4934  0024DA  E2FB               	bc	u1141
  4935  0024DC  0012               	return	
  4936  0024DE                     __end_of_GunPortInit:
  4937                           	opt stack 0
  4938                           
  4939 ;; *************** function _INTERRUPT_InterruptManager *****************
  4940 ;; Defined at:
  4941 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  4942 ;; Parameters:    Size  Location     Type
  4943 ;;		None
  4944 ;; Auto vars:     Size  Location     Type
  4945 ;;		None
  4946 ;; Return value:  Size  Location     Type
  4947 ;;                  1    wreg      void 
  4948 ;; Registers used:
  4949 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4950 ;; Tracked objects:
  4951 ;;		On entry : 0/0
  4952 ;;		On exit  : 0/0
  4953 ;;		Unchanged: 0/0
  4954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4959 ;;Total ram usage:        0 bytes
  4960 ;; Hardware stack levels used:    1
  4961 ;; Hardware stack levels required when called:    2
  4962 ;; This function calls:
  4963 ;;		_TMR0_ISR
  4964 ;; This function is called by:
  4965 ;;		Interrupt level 2
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969                           	psect	text27
  4970  002964                     __ptext27:
  4971                           	opt stack 0
  4972  002964                     _INTERRUPT_InterruptManager:
  4973                           	opt stack 25
  4974                           
  4975                           ;interrupt_manager.c: 60: if(PIE3bits.TMR0IE == 1 && PIR3bits.TMR0IF == 1)
  4976                           
  4977                           ;incstack = 0
  4978  002964  0139               	movlb	57	; () banked
  4979  002966  AF93               	btfss	147,7,b	;volatile
  4980  002968  0011               	retfie		f
  4981                           
  4982                           ; BSR set to: 57
  4983  00296A  AFA3               	btfss	163,7,b	;volatile
  4984  00296C  0011               	retfie		f
  4985                           
  4986                           ; BSR set to: 57
  4987                           ;interrupt_manager.c: 61: {
  4988                           ;interrupt_manager.c: 62: TMR0_ISR();
  4989  00296E  EC72  F014         	call	_TMR0_ISR	;wreg free
  4990                           
  4991                           ;interrupt_manager.c: 63: }
  4992  002972  0011               	retfie		f
  4993  002974                     __end_of_INTERRUPT_InterruptManager:
  4994                           	opt stack 0
  4995                           
  4996 ;; *************** function _TMR0_ISR *****************
  4997 ;; Defined at:
  4998 ;;		line 120 in file "mcc_generated_files/tmr0.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;		None
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;		None
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  1    wreg      void 
  5005 ;; Registers used:
  5006 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5016 ;;Total ram usage:        0 bytes
  5017 ;; Hardware stack levels used:    1
  5018 ;; Hardware stack levels required when called:    1
  5019 ;; This function calls:
  5020 ;;		Absolute function
  5021 ;;		_StopWatchISR
  5022 ;;		_TMR0_DefaultInterruptHandler
  5023 ;; This function is called by:
  5024 ;;		_INTERRUPT_InterruptManager
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           
  5028                           	psect	text28
  5029  0028E4                     __ptext28:
  5030                           	opt stack 0
  5031  0028E4                     _TMR0_ISR:
  5032                           	opt stack 25
  5033                           
  5034                           ;tmr0.c: 123: PIR3bits.TMR0IF = 0;
  5035                           
  5036                           ;incstack = 0
  5037  0028E4  0139               	movlb	57	; () banked
  5038  0028E6  9FA3               	bcf	163,7,b	;volatile
  5039                           
  5040                           ; BSR set to: 57
  5041                           ;tmr0.c: 124: if(TMR0_InterruptHandler)
  5042  0028E8  502E               	movf	_TMR0_InterruptHandler,w,c
  5043  0028EA  102F               	iorwf	_TMR0_InterruptHandler+1,w,c
  5044  0028EC  B4D8               	btfsc	16344,2,c
  5045  0028EE  0012               	return	
  5046                           
  5047                           ; BSR set to: 57
  5048                           ;tmr0.c: 125: {
  5049                           ;tmr0.c: 126: TMR0_InterruptHandler();
  5050  0028F0  D801               	call	i2u12_48
  5051  0028F2  0012               	return	
  5052  0028F4                     i2u12_48:
  5053  0028F4  0005               	push	
  5054  0028F6  6EFA               	movwf	16378,c
  5055  0028F8  502E               	movf	_TMR0_InterruptHandler,w,c
  5056  0028FA  6EFD               	movwf	16381,c
  5057  0028FC  502F               	movf	_TMR0_InterruptHandler+1,w,c
  5058  0028FE  6EFE               	movwf	16382,c
  5059  002900  6AFF               	clrf	16383,c
  5060  002902  50FA               	movf	16378,w,c
  5061  002904  0012               	return		;indir
  5062  002906                     __end_of_TMR0_ISR:
  5063                           	opt stack 0
  5064                           
  5065 ;; *************** function _StopWatchISR *****************
  5066 ;; Defined at:
  5067 ;;		line 35 in file "stop_watch.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;		None
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;		None
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  1    wreg      void 
  5074 ;; Registers used:
  5075 ;;		wreg, status,2, status,0
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5085 ;;Total ram usage:        0 bytes
  5086 ;; Hardware stack levels used:    1
  5087 ;; This function calls:
  5088 ;;		Nothing
  5089 ;; This function is called by:
  5090 ;;		_StopWatch_Initialize
  5091 ;;		_TMR0_ISR
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           	psect	text29
  5096  002982                     __ptext29:
  5097                           	opt stack 0
  5098  002982                     _StopWatchISR:
  5099                           	opt stack 25
  5100                           
  5101                           ;stop_watch.c: 37: globalTime++;
  5102                           
  5103                           ;incstack = 0
  5104  002982  0E01               	movlw	1
  5105  002984  262A               	addwf	_globalTime,f,c	;volatile
  5106  002986  0E00               	movlw	0
  5107  002988  222B               	addwfc	_globalTime+1,f,c	;volatile
  5108  00298A  222C               	addwfc	_globalTime+2,f,c	;volatile
  5109  00298C  222D               	addwfc	_globalTime+3,f,c	;volatile
  5110  00298E  0012               	return		;funcret
  5111  002990                     __end_of_StopWatchISR:
  5112                           	opt stack 0
  5113                           
  5114 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5115 ;; Defined at:
  5116 ;;		line 137 in file "mcc_generated_files/tmr0.c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;		None
  5119 ;; Auto vars:     Size  Location     Type
  5120 ;;		None
  5121 ;; Return value:  Size  Location     Type
  5122 ;;                  1    wreg      void 
  5123 ;; Registers used:
  5124 ;;		None
  5125 ;; Tracked objects:
  5126 ;;		On entry : 0/0
  5127 ;;		On exit  : 0/0
  5128 ;;		Unchanged: 0/0
  5129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5134 ;;Total ram usage:        0 bytes
  5135 ;; Hardware stack levels used:    1
  5136 ;; This function calls:
  5137 ;;		Nothing
  5138 ;; This function is called by:
  5139 ;;		_TMR0_Initialize
  5140 ;;		_TMR0_ISR
  5141 ;; This function uses a non-reentrant model
  5142 ;;
  5143                           
  5144                           	psect	text30
  5145  0029A8                     __ptext30:
  5146                           	opt stack 0
  5147  0029A8                     _TMR0_DefaultInterruptHandler:
  5148                           	opt stack 25
  5149                           
  5150                           ;incstack = 0
  5151  0029A8  0012               	return		;funcret
  5152  0029AA                     __end_of_TMR0_DefaultInterruptHandler:
  5153                           	opt stack 0
  5154                           
  5155                           ;
  5156                           ; Interrupt Vector Table @ 0x8
  5157                           ;
  5158                           
  5159                           	psect	ivt0x8
  5160  000008                     __pivt0x8:
  5161                           	opt stack 0
  5162  000008                     ivt0x8_base:
  5163                           	opt stack 0
  5164                           
  5165                           ; high-priority vector
  5166  000008  EFB2  F014         	goto	_INTERRUPT_InterruptManager
  5167  000018                     	org	16
  5168                           
  5169                           ; low-priority vector
  5170  000018  00C0               	trap
  5171                           
  5172                           	psect	text31
  5173  000000                     __ptext31:
  5174                           	opt stack 0
  5175                           
  5176                           	psect	rparam


Data Sizes:
    Strings     0
    Constant    44
    Data        0
    BSS         4
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     41      47
    BANK0           160    116     116
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    ?_RabbitLightsInit.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR_8[1]), 

    ?_RabbitLightsInit.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(SFR_8[1]), 

    ?_newStrobe.InPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR_8[1]), 

    ?_newStrobe.OutPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), 

    ?_GunPortInit.TracerInPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), 

    ?_GunPortInit.TracerPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATD(SFR_8[1]), 

    ?_GunPortInit.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), PORTC(SFR_8[1]), 

    ?_GunPortInit.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), LATD(SFR_8[1]), 

    ?_GunPortInit_.TracerInPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), 

    ?_GunPortInit_.TracerPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATD(SFR_8[1]), 

    ?_GunPortInit_.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), PORTC(SFR_8[1]), 

    ?_GunPortInit_.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), LATD(SFR_8[1]), 

    StopRabbitLights@rp.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR_8[1]), 

    StopRabbitLights@rp.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(SFR_8[1]), 

    StopRabbitLights@rp	PTR struct RabbitPort size(2) Largest target is 15
		 -> main@Rabbit(BANK0[13]), 

    UpdateRabbitLEDs@rp.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR_8[1]), 

    UpdateRabbitLEDs@rp.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(SFR_8[1]), 

    UpdateRabbitLEDs@rp	PTR struct RabbitPort size(2) Largest target is 15
		 -> main@Rabbit(BANK0[13]), 

    StartRabbitLights@rp.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR_8[1]), 

    StartRabbitLights@rp.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(SFR_8[1]), 

    StartRabbitLights@rp	PTR struct RabbitPort size(2) Largest target is 15
		 -> main@Rabbit(BANK0[13]), 

    RabbitLightsInit@IP	PTR  unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR_8[1]), 

    RabbitLightsInit@OP	PTR  unsigned char  size(2) Largest target is 1
		 -> LATB(SFR_8[1]), 

    rp.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR_8[1]), 

    rp.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(SFR_8[1]), 

    newStrobe@IP	PTR  unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR_8[1]), 

    newStrobe@OP	PTR  unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), 

    Strobe.InPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR_8[1]), 

    Strobe.OutPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), 

    UpdateStrobeLED@SLED.InPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR_8[1]), 

    UpdateStrobeLED@SLED.OutPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), 

    UpdateStrobeLED@SLED	PTR struct StrobeLED size(2) Largest target is 15
		 -> main@GenStrobe(BANK0[13]), main@ACStrobe(BANK0[13]), main@GStrobe(BANK0[13]), main@EFStrobe(BANK0[13]), 

    StopSyncStrobes@SLED_B	PTR struct StrobeLED size(2) Largest target is 15
		 -> main@ACStrobe(BANK0[13]), 

    StopSyncStrobes@SLED_A	PTR struct StrobeLED size(2) Largest target is 15
		 -> main@GenStrobe(BANK0[13]), 

    StopStrobe@SLED.InPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR_8[1]), 

    StopStrobe@SLED.OutPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), 

    StopStrobe@SLED	PTR struct StrobeLED size(2) Largest target is 15
		 -> main@GenStrobe(BANK0[13]), main@ACStrobe(BANK0[13]), main@GStrobe(BANK0[13]), main@EFStrobe(BANK0[13]), 

    StartSyncStrobes@SLED_A.InPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR_8[1]), 

    StartSyncStrobes@SLED_A.OutPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), 

    StartSyncStrobes@SLED_A	PTR struct StrobeLED size(2) Largest target is 15
		 -> main@GenStrobe(BANK0[13]), 

    StartSyncStrobes@SLED_B.InPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR_8[1]), 

    StartSyncStrobes@SLED_B.OutPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), 

    StartSyncStrobes@SLED_B	PTR struct StrobeLED size(2) Largest target is 15
		 -> main@ACStrobe(BANK0[13]), 

    StartStrobe@SLED.InPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR_8[1]), 

    StartStrobe@SLED.OutPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), 

    StartStrobe@SLED	PTR struct StrobeLED size(2) Largest target is 15
		 -> main@GenStrobe(BANK0[13]), main@GStrobe(BANK0[13]), main@EFStrobe(BANK0[13]), 

    StopGunFirePattern@gp.TracerInPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), 

    StopGunFirePattern@gp.TracerPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATD(SFR_8[1]), 

    StopGunFirePattern@gp.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), PORTC(SFR_8[1]), 

    StopGunFirePattern@gp.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), LATD(SFR_8[1]), 

    StopGunFirePattern@gp	PTR struct GunPort size(2) Largest target is 21
		 -> main@Gun3(BANK0[17]), main@Gun2(BANK0[17]), main@Gun1(BANK0[17]), 

    UpdateGunLED@gp.TracerInPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), 

    UpdateGunLED@gp.TracerPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATD(SFR_8[1]), 

    UpdateGunLED@gp.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), PORTC(SFR_8[1]), 

    UpdateGunLED@gp.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), LATD(SFR_8[1]), 

    UpdateGunLED@gp	PTR struct GunPort size(2) Largest target is 21
		 -> main@Gun3(BANK0[17]), main@Gun2(BANK0[17]), main@Gun1(BANK0[17]), 

    StartGunFirePattern@gp.TracerInPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), 

    StartGunFirePattern@gp.TracerPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATD(SFR_8[1]), 

    StartGunFirePattern@gp.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), PORTC(SFR_8[1]), 

    StartGunFirePattern@gp.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), LATD(SFR_8[1]), 

    StartGunFirePattern@gp	PTR struct GunPort size(2) Largest target is 21
		 -> main@Gun3(BANK0[17]), main@Gun2(BANK0[17]), main@Gun1(BANK0[17]), 

    GunPortInit@TIP	PTR  unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), 

    GunPortInit@TP	PTR  unsigned char  size(2) Largest target is 1
		 -> LATD(SFR_8[1]), 

    GunPortInit@IP	PTR  unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR_8[1]), 

    GunPortInit@OP	PTR  unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), 

    gp.TracerInPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), 

    gp.TracerPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATD(SFR_8[1]), 

    gp.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), PORTC(SFR_8[1]), 

    gp.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), LATD(SFR_8[1]), 

    GunPortInit_@IP	PTR  unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), 

    GunPortInit_@OP	PTR  unsigned char  size(2) Largest target is 1
		 -> LATD(SFR_8[1]), 

    gp.TracerInPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), 

    gp.TracerPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATD(SFR_8[1]), 

    gp.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), PORTC(SFR_8[1]), 

    gp.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), LATD(SFR_8[1]), 

    S403RabbitPort$InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR_8[1]), 

    Rabbit.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR_8[1]), 

    S403RabbitPort$OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(SFR_8[1]), 

    Rabbit.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(SFR_8[1]), 

    GenStrobe.InPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR_8[1]), 

    GenStrobe.OutPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), 

    ACStrobe.InPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR_8[1]), 

    ACStrobe.OutPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), 

    GStrobe.InPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR_8[1]), 

    GStrobe.OutPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), 

    S386StrobeLED$InPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR_8[1]), 

    EFStrobe.InPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR_8[1]), 

    S386StrobeLED$OutPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), 

    EFStrobe.OutPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), 

    Gun3.TracerInPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), 

    Gun3.TracerPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATD(SFR_8[1]), 

    Gun3.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), PORTC(SFR_8[1]), 

    Gun3.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), LATD(SFR_8[1]), 

    Gun2.TracerInPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), 

    Gun2.TracerPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATD(SFR_8[1]), 

    Gun2.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), PORTC(SFR_8[1]), 

    Gun2.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), LATD(SFR_8[1]), 

    S348GunPort$TracerInPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), 

    Gun1.TracerInPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), 

    S348GunPort$TracerPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATD(SFR_8[1]), 

    Gun1.TracerPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATD(SFR_8[1]), 

    S348GunPort$InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), PORTC(SFR_8[1]), 

    Gun1.InputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR_8[1]), PORTC(SFR_8[1]), 

    S348GunPort$OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), LATD(SFR_8[1]), 

    Gun1.OutputPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_8[1]), LATD(SFR_8[1]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> StopWatchISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> StopWatchISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_GunPortInit_
    _UpdateStrobeLED->_GetCurrentTime
    _UpdateRabbitLEDs->_GetCurrentTime
    _UpdateGunLED->_GetCurrentTime
    _StopWatch_Initialize->_TMR0_SetInterruptHandler
    _StopSyncStrobes->_StopStrobe
    _StartSyncStrobes->_StartStrobe
    _StartStrobe->_StopStrobe
    _StartRabbitLights->_StopRabbitLights
    _StartGunFirePattern->_StopGunFirePattern
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               118   118      0   15108
                                             39 COMRAM     2     2      0
                                              0 BANK0    116   116      0
                        _GunPortInit
                       _GunPortInit_
                   _RabbitLightsInit
                  _SYSTEM_Initialize
                _StartGunFirePattern
                  _StartRabbitLights
                     _StartStopWatch
                        _StartStrobe
                   _StartSyncStrobes
                 _StopGunFirePattern
                   _StopRabbitLights
                         _StopStrobe
                    _StopSyncStrobes
               _StopWatch_Initialize
                       _UpdateGunLED
                   _UpdateRabbitLEDs
                    _UpdateStrobeLED
                          _newStrobe
 ---------------------------------------------------------------------------------
 (1) _newStrobe                                           28    15     13    1539
                                              0 COMRAM    28    15     13
 ---------------------------------------------------------------------------------
 (1) _UpdateStrobeLED                                     10     8      2    1228
                                              4 COMRAM    10     8      2
                     _GetCurrentTime
 ---------------------------------------------------------------------------------
 (1) _UpdateRabbitLEDs                                     9     7      2     566
                                              4 COMRAM     9     7      2
                     _GetCurrentTime
 ---------------------------------------------------------------------------------
 (1) _UpdateGunLED                                         7     5      2     822
                                              4 COMRAM     7     5      2
                     _GetCurrentTime
 ---------------------------------------------------------------------------------
 (1) _StopWatch_Initialize                                 0     0      0     348
                    _TMR0_Initialize
           _TMR0_SetInterruptHandler
                     _TMR0_StopTimer
 ---------------------------------------------------------------------------------
 (2) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _StopSyncStrobes                                      4     0      4     740
                                              6 COMRAM     4     0      4
                         _StopStrobe
 ---------------------------------------------------------------------------------
 (1) _StartSyncStrobes                                    16     8      8    1962
                                             16 COMRAM    16     8      8
                        _StartStrobe
                         _StopStrobe
 ---------------------------------------------------------------------------------
 (2) _StartStrobe                                         10     8      2     948
                                              6 COMRAM    10     8      2
                     _GetCurrentTime
                         _StopStrobe
 ---------------------------------------------------------------------------------
 (2) _StopStrobe                                           6     4      2     544
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _StartStopWatch                                       0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _StartRabbitLights                                   12    10      2     744
                                              6 COMRAM    12    10      2
                     _GetCurrentTime
                   _StopRabbitLights
 ---------------------------------------------------------------------------------
 (1) _StopRabbitLights                                     6     4      2     355
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _StartGunFirePattern                                 10     8      2     884
                                              6 COMRAM    10     8      2
                     _GetCurrentTime
                 _StopGunFirePattern
 ---------------------------------------------------------------------------------
 (1) _StopGunFirePattern                                   6     4      2     436
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _GetCurrentTime                                       4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RabbitLightsInit                                    26    13     13     559
                                              0 COMRAM    26    13     13
 ---------------------------------------------------------------------------------
 (1) _GunPortInit_                                        39    22     17     741
                                              0 COMRAM    39    22     17
 ---------------------------------------------------------------------------------
 (1) _GunPortInit                                         36    19     17    1372
                                              0 COMRAM    36    19     17
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
                       _StopWatchISR *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StopWatchISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GunPortInit
   _GunPortInit_
   _RabbitLightsInit
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _StartGunFirePattern
     _GetCurrentTime
     _StopGunFirePattern
   _StartRabbitLights
     _GetCurrentTime
     _StopRabbitLights
   _StartStopWatch
     _TMR0_StartTimer
   _StartStrobe
     _GetCurrentTime
     _StopStrobe
   _StartSyncStrobes
     _StartStrobe
       _GetCurrentTime
       _StopStrobe
     _StopStrobe
   _StopGunFirePattern
   _StopRabbitLights
   _StopStrobe
   _StopSyncStrobes
     _StopStrobe
   _StopWatch_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR0_SetInterruptHandler
     _TMR0_StopTimer
   _UpdateGunLED
     _GetCurrentTime
   _UpdateRabbitLEDs
     _GetCurrentTime
   _UpdateStrobeLED
     _GetCurrentTime
   _newStrobe

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _StopWatchISR *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     74      74       5       72.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     29      2F       1       49.5%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A3      32        0.0%
DATA                 0      0      A3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sun Jan 21 00:11:07 2018

               __end_of_STROBE_ON_TIME_MS 101D                               __CFG_CP$OFF 000000  
                        _StopRabbitLights 2642                              _StopWatchISR 2982  
                             __CFG_LVP$ON 000000                             main@GenStrobe 00BA  
                                     l312 20D6                                       l400 2674  
                                     l240 183C                                       l401 266E  
                                     l241 18CE                                       l233 1778  
                                     l234 17D2                                       l323 1C3A  
                                     l243 18FA                                       l235 17BC  
                                     l244 1940                                       l333 222C  
                                     l237 17EA                                       l318 1B48  
                                     l350 15C0                                       l246 194C  
                                     l238 1830                                       l319 1ACC  
                                     l351 1066                                       l352 1162  
                                     l337 233A                                       l370 1528  
                                     l355 11C2                                       l381 1F66  
                                     l365 1414                                       l357 120C  
                                     l382 2002                                       l390 1D9A  
                                     l358 13A0                                       l383 1FFC  
                                     l391 1D94                                       l359 12FA  
                                     l368 145E                                       l393 1E96  
                                     l394 1E24                         ??_StopSyncStrobes 000B  
                                     tosl 003FFD                                       wreg 003FE8  
                           __CFG_BBEN$OFF 000000                              __CFG_ZCD$OFF 000000  
                    StopRabbitLights@Mask 0006                        _AC_STROBE_DELAY_MS 1009  
                                    u1201 2868                                      u1114 26A6  
                                    u1034 2792                                      u1115 26A2  
                                    u1035 278E                                      u1124 248E  
                                    u1141 24D2                                      u1125 248A  
                                    u1134 24B4                                      u1054 251C  
                                    u1135 24B0                                      u1055 2518  
                                    u1064 2564                                      u1224 218E  
                                    u1320 1A06                                      u1065 2560  
                                    u1225 218A                                      u1154 25FC  
                                    u1234 21DC                                      u1330 1A08  
                                    u1171 2636                                      u1155 25F8  
                                    u1235 21D8                                      u1164 2612  
                                    u1084 22E4                                      u1404 1B76  
                                    u1165 260E                                      u1085 22E0  
                                    u1405 1B72                                      _LATA 003FBA  
                                    u1254 23F6                                      u1414 1BC4  
                                    _LATB 003FBB                                      u1255 23F2  
                                    u1415 1BC0                                      u1191 2748  
                                    _LATC 003FBC                                      u1504 10BA  
                                    u1184 272A                                      _LATD 003FBD  
                                    u1505 10B6                                      u1185 2726  
                                    _LATE 003FBE                                      u1434 1C6A  
                                    u1354 1A38                                      u1435 1C66  
                                    u1355 1A34                                      u1284 2034  
                                    u1444 1CB8                                      u1364 1A80  
                                    u1620 13C6                                      u1540 122E  
                                    u1285 2030                                      u1445 1CB4  
                                    u1365 1A7C                                      u1294 2080  
                                    u1710 1D86                                      u1550 1230  
                                    u1534 1190                                      u1470 1088  
                                    u1295 207C                                      u1535 118C  
                                    u1720 1D88                                      u1640 1480  
                                    u1480 108A                                      u1801 1692  
                                    u1650 1482                                      u1634 13E2  
                                    u1635 13DE                                      u1811 16BE  
                                    u1821 16EA                                      u1590 12B2  
                                    u1574 1260                                      u1575 125C  
                                    u1831 1716                                      u1744 1DCC  
                                    u1904 180A                                      u1745 1DC8  
                                    u1905 1806                                      u1841 1742  
                                    u1674 14B2                                      u1675 14AE  
                                    u1851 176E                                      u1684 1544  
                                    u1685 1540                                      u1781 162A  
                                    u1774 1EC4                                      u1934 185C  
                                    u1775 1EC0                                      u1935 1858  
                                    u1791 1666                                      u1864 1798  
                                    u1865 1794                                      u1964 191A  
                                    u1965 1916                                      _WPUA 003A41  
                                    _WPUB 003A51                                      _WPUC 003A61  
                                    _WPUD 003A71                                      _WPUE 003A81  
                           __CFG_FCMEN$ON 000000                                      _main 15E8  
                         _TMR0_StartTimer 299C                                      fsr1h 003FE2  
                                    fsr2h 003FDA                                      indf1 003FE7  
                                    indf2 003FDF                                      fsr1l 003FE1  
                                    fsr2l 003FD9                                      start 001A  
                           __CFG_CSWEN$ON 000000                             newStrobe@sLED 0005  
                            ___param_bank 000000                         ?_RabbitLightsInit 0001  
                       ?_UpdateRabbitLEDs 0005                      _StopWatch_Initialize 289C  
                           ??_GunPortInit 0012                    _GEN_STROBE_OFF_TIME_MS 100D  
                      ??_RabbitLightsInit 000E                        ??_UpdateRabbitLEDs 0007  
                 __end_of_TMR0_Initialize 289C            ??_TMR0_DefaultInterruptHandler 0001  
          __size_of_OSCILLATOR_Initialize 0018                             ?_GunPortInit_ 0001  
           __end_of_OSCILLATOR_Initialize 2952                                     ?_main 0001  
                           __CFG_WDTE$OFF 000000                            __CFG_DEBUG$OFF 000000  
                                   _OSCEN 0039DD                                     _TMR0H 003FB7  
                                   _TMR0L 003FB6                                     _PORTA 003FCA  
                                   _PORTB 003FCB                                     _PORTC 003FCC  
                                   _PORTD 003FCD                                     _TRISA 003FC2  
                                   _TRISB 003FC3                                     _TRISC 003FC4  
                                   _TRISD 003FC5                                     _TRISE 003FC6  
       __size_of_TMR0_SetInterruptHandler 000E                 ?_TMR0_SetInterruptHandler 0001  
                        __end_of_TMR0_ISR 2906                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                       ??_UpdateStrobeLED 0007                     StartSyncStrobes@delay 0015  
                   _GEN_STROBE_ON_TIME_MS 1011                        __CFG_MCLRE$EXTMCLR 000000  
                                   pclath 003FFA                                     tablat 003FF5  
                                   plusw0 003FEB                                     plusw2 003FDB  
                                   status 003FD8                           __initialization 2906  
                   ?_StopWatch_Initialize 0001                              __end_of_main 19AE  
                          __CFG_SAFEN$OFF 000000                            ??_GunPortInit_ 0012  
             ?_INTERRUPT_InterruptManager 0001                                    ??_main 0028  
                          __CFG_PR1WAY$ON 000000                             __activetblptr 000003  
                     __end_of_GunPortInit 24DE                        RabbitLightsInit@IP 0003  
                      RabbitLightsInit@OP 0001                        RabbitLightsInit@rp 000E  
                      UpdateRabbitLEDs@rp 0005                   __end_of_TMR0_StartTimer 29A2  
                                  _ANSELA 003A40                                    _ANSELB 003A50  
                                  _ANSELC 003A60                                    _ANSELD 003A70  
                                  _ANSELE 003A80                                    _T0CON0 003FB8  
                                  _T0CON1 003FB9                            _GetCurrentTime 2920  
                                  _ODCONA 003A42                                    _ODCONB 003A52  
                                  _ODCONC 003A62                                    _ODCOND 003A72  
                                  _ODCONE 003A82                            __CFG_WDTCCS$SC 000000  
                                  _OSCFRQ 0039DF                    StartSyncStrobes@SLED_A 0011  
                  StartSyncStrobes@SLED_B 0013                 __size_of_StartSyncStrobes 010C  
                          __CFG_XINST$OFF 000000                            __CFG_STVREN$ON 000000  
                        ?_TMR0_Initialize 0001                          ??_StartStopWatch 0001  
                            __mediumconst 0000                                    tblptrh 003FF7  
                                  tblptrl 003FF6                                    tblptru 003FF8  
                  __end_of_GetCurrentTime 293A  TMR0_SetInterruptHandler@InterruptHandler 0001  
           __size_of_INTERRUPT_Initialize 0006                         _SYSTEM_Initialize 2952  
                __end_of_StopRabbitLights 26D8                                __accesstop 0060  
                 __end_of__initialization 291A                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 000001                                _StopStrobe 2754  
             __size_of_StopGunFirePattern 00B4                         _StartRabbitLights 1F44  
                  ??_StopWatch_Initialize 0003                               newStrobe@IP 0003  
                             newStrobe@OP 0001                           _StopSyncStrobes 28C2  
                          __pcstackCOMRAM 0001                        ?_StartRabbitLights 0007  
                         newStrobe@Strobe 0010               __end_of_StartGunFirePattern 220A  
                     ??_SYSTEM_Initialize 0003                                 ?_TMR0_ISR 0001  
                             _GunPortInit 2424                             ??_StartStrobe 0009  
                     ??_StartRabbitLights 0009                           _GUN_OFF_TIME_MS 1021  
                         ?_GetCurrentTime 0001                          ?_TMR0_StartTimer 0001  
               __end_of_SYSTEM_Initialize 2964                           __CFG_IVT1WAY$ON 000000  
                    __end_of_GunPortInit_ 2642                           __CFG_MVECEN$OFF 000000  
               __end_of_StartRabbitLights 20B4                                __pnvCOMRAM 002E  
                                 IVTBASEH 003FD6                                   IVTBASEL 003FD5  
                                 IVTBASEU 003FD7                     StopSyncStrobes@SLED_A 0007  
                   StopSyncStrobes@SLED_B 0009                        __size_of_newStrobe 007C  
                     RabbitLightsInit@num 0006          __end_of_TMR0_SetInterruptHandler 2982  
                 __size_of_TMR0_StopTimer 0006                                ??_TMR0_ISR 0001  
                         __CFG_PPS1WAY$ON 000000                           _UpdateStrobeLED 102E  
                     __CFG_PWRTS$PWRT_OFF 000000                       __end_of_StartStrobe 2318  
                                 _OSCCON1 0039D9                                   _OSCCON3 0039DB  
               __size_of_RabbitLightsInit 0052                 __size_of_UpdateRabbitLEDs 0216  
                                 i2u12_48 28F4                                   _OSCTUNE 0039DE  
                     StartRabbitLights@rp 0007                                _globalTime 002A  
                       StopRabbitLights@i 0005                       UpdateStrobeLED@SLED 0005  
                 __end_of_StopSyncStrobes 28E4                          _StartSyncStrobes 2318  
          __end_of_GEN_STROBE_OFF_TIME_MS 1011                               ?_StopStrobe 0001  
                                 __Hparam 0000                                   __Lparam 0000  
              __CFG_RSTOSC$HFINTOSC_64MHZ 000000                   __end_of_GUN_OFF_TIME_MS 1025  
                            __psmallconst 1000                                   __pcinit 2906  
                                 __ramtop 1000                                   __ptext0 15E8  
                                 __ptext1 26D8                                   __ptext2 102E  
                                 __ptext3 1D2E                                   __ptext4 19AE  
                                 __ptext5 289C                                   __ptext6 2990  
                                 __ptext7 28C2                                   __ptext8 2318  
                                 __ptext9 220A                           __CFG_WRTAPP$OFF 000000  
                   _OSCILLATOR_Initialize 293A                  ??_PIN_MANAGER_Initialize 0001  
                         __CFG_WRTSAF$OFF 000000                         __end_of_newStrobe 2754  
                           ?_UpdateGunLED 0005                __size_of_SYSTEM_Initialize 0012  
                    end_of_initialization 291A                         _GUN_SPACE_TIME_MS 101D  
              __size_of_StartRabbitLights 0170                           StartStrobe@SLED 0007  
                       _RABBIT_ON_TIME_MS 1005                __end_of_STROBE_OFF_TIME_MS 1019  
                 __end_of_UpdateStrobeLED 15E8                             GunPortInit@IP 0003  
                           GunPortInit@OP 0001                             GunPortInit@TP 0005  
                                 postdec2 003FDD                             GunPortInit@gp 0014  
                                 postinc1 003FE6                                   postinc2 003FDE  
                   StartRabbitLights@Mask 0012                     __CFG_WDTCPS$WDTCPS_31 000000  
                             _StartStrobe 220A                  _TMR0_SetInterruptHandler 2974  
              __end_of_RABBIT_OFF_TIME_MS 1005                       __size_of_StopStrobe 006C  
                   __size_of_GunPortInit_ 00B0                            ??_UpdateGunLED 0007  
                              main@Rabbit 0060                 __end_of_GUN_SPACE_TIME_MS 1021  
                        __CFG_FEXTOSC$OFF 000000                         ?_StopRabbitLights 0001  
                        ?_StopSyncStrobes 0007                 __end_of_RABBIT_ON_TIME_MS 1009  
                      ??_StopRabbitLights 0003                            _TMR0_StopTimer 2990  
            __end_of_INTERRUPT_Initialize 29A8                              ?_GunPortInit 0001  
                           ?_StopWatchISR 0001                         __size_of_TMR0_ISR 0022  
                            _GunPortInit_ 2592                    ?_OSCILLATOR_Initialize 0001  
                        ??_GetCurrentTime 0005                       start_initialization 2906  
                        _RabbitLightsInit 2822                          _UpdateRabbitLEDs 1D2E  
                __size_of_TMR0_Initialize 0028           __size_of_PIN_MANAGER_Initialize 0062  
                    StopGunFirePattern@gp 0001                                ivt0x8_base 0008  
              __end_of_StopGunFirePattern 2592                         UpdateRabbitLEDs@i 000C  
                  __end_of_TMR0_StopTimer 2996                          __CFG_LPBOREN$OFF 000000  
                        ?_UpdateStrobeLED 0005             __size_of_StopWatch_Initialize 0026  
                          ??_StopWatchISR 0001              __size_of_StartGunFirePattern 0156  
                __end_of_StartSyncStrobes 2424                               __pbssCOMRAM 002A  
                           __pcstackBANK0 0060                                newStrobe@t 0006  
                 __size_of_StartStopWatch 0006                      __end_of_TRIGGER1_PIN 102D  
                    __end_of_TRIGGER2_PIN 102C                              ??_StopStrobe 0003  
                   _TMR0_InterruptHandler 002E                  __size_of_TMR0_StartTimer 0006  
                    RabbitLightsInit@SLED 0005                           ?_TMR0_StopTimer 0001  
                  _PIN_MANAGER_Initialize 27C0                      UpdateRabbitLEDs@Mask 000D  
                    __end_of_UpdateGunLED 1D2E              ??_INTERRUPT_InterruptManager 0001  
                      StartRabbitLights@i 0011                    __CFG_BBSIZE$BBSIZE_512 000000  
                  UpdateRabbitLEDs@buffer 000B                               __smallconst 1000  
                      __end_of_StopStrobe 27C0                      _INTERRUPT_Initialize 29A2  
                               _newStrobe 26D8                         ??_TMR0_Initialize 0003  
                          _GUN_ON_TIME_MS 1025                                  _PIE3bits 003993  
                     __CFG_BORV$VBOR_2P45 000000       __size_of_INTERRUPT_InterruptManager 0010  
              ??_TMR0_SetInterruptHandler 0003                                  _PIR3bits 0039A3  
                                _TMR0_ISR 28E4                              ?_StartStrobe 0007  
                    __size_of_GunPortInit 00BA                __end_of_AC_STROBE_DELAY_MS 100D  
                      _STROBE_OFF_TIME_MS 1015                        StopRabbitLights@rp 0001  
           __end_of_GEN_STROBE_ON_TIME_MS 1015                               _INTCON0bits 003FD2  
                   ?_INTERRUPT_Initialize 0001                          GunPortInit_@GLED 0005  
                  __end_of_GUN_ON_TIME_MS 1029                          GunPortInit_@TLED 0006  
                              ?_newStrobe 0001                        _RABBIT_OFF_TIME_MS 1001  
                    __end_of_StopWatchISR 2990                            StopStrobe@SLED 0001  
                                __Hrparam 0000                  __end_of_RabbitLightsInit 2874  
                __end_of_UpdateRabbitLEDs 1F44                                  __Lrparam 0000  
                      __CFG_BOREN$SBORDIS 000000                            UpdateGunLED@gp 0005  
                 ??_OSCILLATOR_Initialize 0001                         ??_TMR0_StartTimer 0001  
               __size_of_StopRabbitLights 0096                                _T0CON0bits 003FB8  
                                __pivt0x8 0008                                  __ptext10 2754  
                                __ptext11 2996                                  __ptext20 2974  
                                __ptext12 299C                                  __ptext21 27C0  
                                __ptext13 1F44                                  __ptext30 29A8  
                                __ptext22 293A                                  __ptext14 2642  
                                __ptext31 0000                                  __ptext23 29A2  
                                __ptext15 20B4                                  __ptext24 2822  
                                __ptext16 24DE                                  __ptext25 2592  
                                __ptext17 2920                                  __ptext26 2424  
                                __ptext18 2952                                  __ptext27 2964  
                                __ptext19 2874                                  __ptext28 28E4  
                                __ptext29 2982                            _StartStopWatch 2996  
                           __size_of_main 03C6                       _StartGunFirePattern 20B4  
                   __size_of_UpdateGunLED 0380      __end_of_TMR0_DefaultInterruptHandler 29AA  
   __size_of_TMR0_DefaultInterruptHandler 0002              _TMR0_DefaultInterruptHandler 29A8  
                    __CFG_WDTCWS$WDTCWS_7 000000                       __end_of_STROBE1_PIN 102B  
                     __end_of_STROBE2_PIN 102A                  __size_of_StopSyncStrobes 0022  
                      _StopGunFirePattern 24DE                                  main@Gun1 006D  
                                main@Gun2 007E                                  main@Gun3 008F  
      __end_of_INTERRUPT_InterruptManager 2974                _INTERRUPT_InterruptManager 2964  
                         GunPortInit@GLED 0009                           GunPortInit@TLED 000A  
                            _TRIGGER1_PIN 102C                              _TRIGGER2_PIN 102B  
                    ?_StartGunFirePattern 0007                       ?_StopGunFirePattern 0001  
                       ?_StartSyncStrobes 0011              __end_of_StopWatch_Initialize 28C2  
                  __end_of_StartStopWatch 299C                        ??_StartSyncStrobes 0019  
                  ??_INTERRUPT_Initialize 0001                              _UpdateGunLED 19AE  
                                intlevel2 0000                               ??_newStrobe 000E  
                        ??_TMR0_StopTimer 0001                   ?_PIN_MANAGER_Initialize 0001  
                       __CFG_CLKOUTEN$OFF 000000                      ??_StopGunFirePattern 0003  
           ?_TMR0_DefaultInterruptHandler 0001                            GunPortInit@TIP 0007  
                          GunPortInit_@IP 0003                            GunPortInit_@OP 0001  
                          GunPortInit_@gp 0017                         _STROBE_ON_TIME_MS 1019  
                __size_of_UpdateStrobeLED 05BA                     ??_StartGunFirePattern 0009  
                            main@ACStrobe 00AD                      __size_of_StartStrobe 010E  
                         _TMR0_Initialize 2874                              main@EFStrobe 00C7  
                   __size_of_StopWatchISR 000E                           ?_StartStopWatch 0001  
          __end_of_PIN_MANAGER_Initialize 2822                   __size_of_GetCurrentTime 001A  
                             _STROBE1_PIN 102A                               _STROBE2_PIN 1029  
                             main@GStrobe 00A0                     StartGunFirePattern@gp 0007  
